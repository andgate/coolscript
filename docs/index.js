(()=>{var Hf={307:(Oe,P)=>{"use strict";Object.defineProperty(P,"__esModule",{value:!0});function X(oe){return typeof oe=="number"?oe.toString()+"px":oe}function ke(oe){var U=function(ct,qe,Qe,nt){qe===void 0&&Qe===void 0&&nt===void 0?qe=Qe=nt=ct:Qe===void 0&&nt===void 0&&(Qe=ct,nt=qe);var ze={top:X(ct),right:X(qe),bottom:X(Qe),left:X(nt)};return oe(ze)};return U}P.padding=ke(function(oe){return{paddingTop:oe.top,paddingRight:oe.right,paddingBottom:oe.bottom,paddingLeft:oe.left}}),P.margin=ke(function(oe){return{marginTop:oe.top,marginRight:oe.right,marginBottom:oe.bottom,marginLeft:oe.left}}),P.border=ke(function(oe){return{borderTop:oe.top,borderRight:oe.right,borderBottom:oe.bottom,borderLeft:oe.left}}),P.verticallySpaced=function(oe){var U=X(oe);return{"&>*":{marginBottom:U+" !important"},"&>*:last-child":{marginBottom:"0px !important"}}},P.horizontallySpaced=function(oe){var U=X(oe);return{"&>*":{marginRight:U+" !important"},"&>*:last-child":{marginRight:"0px !important"}}};function pe(oe,U){U===void 0&&(U=oe);var ct=X(oe),qe=X(U);return{marginTop:"-"+ct,marginLeft:"-"+qe,"&>*":{marginTop:ct,marginLeft:qe}}}P.gridSpaced=pe,P.fillParent={width:"100%",height:"100%"},P.maxWidth=function(oe){var U=X(oe);return{maxWidth:U}},P.maxHeight=function(oe){var U=X(oe);return{maxHeight:U}},P.horizontallyCenterSelf={marginLeft:"auto",marginRight:"auto"},P.horizontallyCenterChildren={textAlign:"center"},P.height=function(oe){var U=X(oe);return{height:U}},P.width=function(oe){var U=X(oe);return{width:U}}},916:(Oe,P)=>{"use strict";Object.defineProperty(P,"__esModule",{value:!0}),P.block={display:"block"},P.none={display:"none"},P.inlineBlock={display:"inline-block"},P.invisible={visibility:"hidden"}},728:(Oe,P,X)=>{"use strict";Object.defineProperty(P,"__esModule",{value:!0});var ke=X(977);P.flexRoot={display:["-ms-flexbox","-webkit-flex","flex"]},P.pass={display:"inherit","-ms-flex-direction":"inherit","-webkit-flex-direction":"inherit",flexDirection:"inherit","-ms-flex-positive":1,"-webkit-flex-grow":1,flexGrow:1},P.inlineRoot={display:["-ms-inline-flexbox","-webkit-inline-flex","inline-flex"]},P.horizontal=ke.extend(P.flexRoot,{"-ms-flex-direction":"row","-webkit-flex-direction":"row",flexDirection:"row"}),P.vertical=ke.extend(P.flexRoot,{"-ms-flex-direction":"column","-webkit-flex-direction":"column",flexDirection:"column"}),P.wrap={"-ms-flex-wrap":"wrap","-webkit-flex-wrap":"wrap",flexWrap:"wrap"},P.content={"-ms-flex-negative":0,"-webkit-flex-shrink":0,flexShrink:0,flexBasis:"auto"},P.flex={"-ms-flex":1,"-webkit-flex":1,flex:1},P.flex1=P.flex,P.flex2={"-ms-flex":2,"-webkit-flex":2,flex:2},P.flex3={"-ms-flex":3,"-webkit-flex":3,flex:3},P.flex4={"-ms-flex":4,"-webkit-flex":4,flex:4},P.flex5={"-ms-flex":5,"-webkit-flex":5,flex:5},P.flex6={"-ms-flex":6,"-webkit-flex":6,flex:6},P.flex7={"-ms-flex":7,"-webkit-flex":7,flex:7},P.flex8={"-ms-flex":8,"-webkit-flex":8,flex:8},P.flex9={"-ms-flex":9,"-webkit-flex":9,flex:9},P.flex10={"-ms-flex":10,"-webkit-flex":10,flex:10},P.flex11={"-ms-flex":11,"-webkit-flex":11,flex:11},P.flex12={"-ms-flex":12,"-webkit-flex":12,flex:12},P.start={"-ms-flex-align":"start","-webkit-align-items":"flex-start",alignItems:"flex-start"},P.center={"-ms-flex-align":"center","-webkit-align-items":"center",alignItems:"center"},P.end={"-ms-flex-align":"end","-webkit-align-items":"flex-end",alignItems:"flex-end"},P.startJustified={"-ms-flex-pack":"start","-webkit-justify-content":"flex-start",justifyContent:"flex-start"},P.centerJustified={"-ms-flex-pack":"center","-webkit-justify-content":"center",justifyContent:"center"},P.endJustified={"-ms-flex-pack":"end","-webkit-justify-content":"flex-end",justifyContent:"flex-end"},P.aroundJustified={"-ms-flex-pack":"distribute","-webkit-justify-content":"space-around",justifyContent:"space-around"},P.betweenJustified={"-ms-flex-pack":"justify","-webkit-justify-content":"space-between",justifyContent:"space-between"},P.centerCenter=ke.extend(P.flexRoot,P.center,P.centerJustified),P.selfStart={"-ms-flex-item-align":"start","-webkit-align-self":"flex-start",alignSelf:"flex-start"},P.selfCenter={"-ms-flex-item-align":"center","-webkit-align-self":"center",alignSelf:"center"},P.selfEnd={"-ms-flex-item-align":"end","-webkit-align-self":"flex-end",alignSelf:"flex-end"},P.selfStretch={"-ms-flex-item-align":"stretch","-webkit-align-self":"stretch",alignSelf:"stretch"}},853:(Oe,P)=>{"use strict";Object.defineProperty(P,"__esModule",{value:!0}),P.fontStyleItalic={fontStyle:"italic"},P.fontWeightNormal={fontWeight:"normal"},P.fontWeightBold={fontWeight:"bold"}},322:(Oe,P,X)=>{"use strict";function ke(pe){for(var oe in pe)P.hasOwnProperty(oe)||(P[oe]=pe[oe])}Object.defineProperty(P,"__esModule",{value:!0}),ke(X(853)),ke(X(728)),ke(X(43)),ke(X(307)),ke(X(944)),ke(X(916)),ke(X(161)),ke(X(351))},43:(Oe,P,X)=>{"use strict";Object.defineProperty(P,"__esModule",{value:!0});var ke=X(977);P.layerParent={position:"relative"},P.attachToLayerParent={position:"absolute"},P.newLayer=ke.extend(P.attachToLayerParent,{left:0,right:0,top:0,bottom:0}),P.attachToTop=ke.extend(P.attachToLayerParent,{top:0,left:0,right:0}),P.attachToRight=ke.extend(P.attachToLayerParent,{top:0,right:0,bottom:0}),P.attachToBottom=ke.extend(P.attachToLayerParent,{right:0,bottom:0,left:0}),P.attachToLeft=ke.extend(P.attachToLayerParent,{top:0,bottom:0,left:0});var pe={position:"fixed"};P.pageTop=ke.extend(pe,{top:0,left:0,right:0}),P.pageRight=ke.extend(pe,{top:0,right:0,bottom:0}),P.pageBottom=ke.extend(pe,{right:0,bottom:0,left:0}),P.pageLeft=ke.extend(pe,{top:0,bottom:0,left:0})},161:(Oe,P,X)=>{"use strict";Object.defineProperty(P,"__esModule",{value:!0});var ke=X(977);function pe(){ke.cssRaw(`
    button,hr,input{overflow:visible}audio,canvas,progress,video{display:inline-block}progress,sub,sup{vertical-align:baseline}html{font-family:sans-serif;line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0} menu,article,aside,details,footer,header,nav,section{display:block}h1{font-size:2em;margin:.67em 0}figcaption,figure,main{display:block}figure{margin:1em 40px}hr{box-sizing:content-box;height:0}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}a{background-color:transparent;-webkit-text-decoration-skip:objects}a:active,a:hover{outline-width:0}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:bolder}dfn{font-style:italic}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative}sub{bottom:-.25em}sup{top:-.5em}audio:not([controls]){display:none;height:0}img{border-style:none}svg:not(:root){overflow:hidden}button,input,optgroup,select,textarea{font-family:sans-serif;font-size:100%;line-height:1.15;margin:0}button,input{}button,select{text-transform:none}[type=submit], [type=reset],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:ButtonText dotted 1px}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}[hidden],template{display:none}
    `.trim())}P.normalize=pe},351:(Oe,P,X)=>{"use strict";Object.defineProperty(P,"__esModule",{value:!0});var ke=X(977),pe=X(307);function oe(U){ke.cssRule("html, body",{height:"100%",width:"100%",padding:0,margin:0}),ke.cssRule("html",{"-moz-box-sizing":"border-box","-webkit-box-sizing":"border-box",boxSizing:"border-box"}),ke.cssRule("*,*:before,*:after",{boxSizing:"inherit"}),ke.cssRule(U,pe.fillParent)}P.setupPage=oe},944:(Oe,P)=>{"use strict";Object.defineProperty(P,"__esModule",{value:!0}),P.scroll={"-webkit-overflow-scrolling":"touch",overflow:"auto"},P.scrollX={"-webkit-overflow-scrolling":"touch",overflowX:"auto"},P.scrollY={"-webkit-overflow-scrolling":"touch",overflowY:"auto"},P.someChildWillScroll={overflow:"hidden"}},0:Oe=>{"use strict";/*
object-assign
(c) Sindre Sorhus
@license MIT
*/var P=Object.getOwnPropertySymbols,X=Object.prototype.hasOwnProperty,ke=Object.prototype.propertyIsEnumerable;function pe(U){if(U==null)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(U)}function oe(){try{if(!Object.assign)return!1;var U=new String("abc");if(U[5]="de",Object.getOwnPropertyNames(U)[0]==="5")return!1;for(var ct={},qe=0;qe<10;qe++)ct["_"+String.fromCharCode(qe)]=qe;var Qe=Object.getOwnPropertyNames(ct).map(function(ze){return ct[ze]});if(Qe.join("")!=="0123456789")return!1;var nt={};return"abcdefghijklmnopqrst".split("").forEach(function(ze){nt[ze]=ze}),Object.keys(Object.assign({},nt)).join("")==="abcdefghijklmnopqrst"}catch(ze){return!1}}Oe.exports=oe()?Object.assign:function(U,ct){for(var qe,Qe=pe(U),nt,ze=1;ze<arguments.length;ze++){qe=Object(arguments[ze]);for(var br in qe)X.call(qe,br)&&(Qe[br]=qe[br]);if(P){nt=P(qe);for(var qt=0;qt<nt.length;qt++)ke.call(qe,nt[qt])&&(Qe[nt[qt]]=qe[nt[qt]])}}return Qe}},760:(Oe,P,X)=>{"use strict";/** @license React v17.0.2
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var ke=X(898),pe=X(0),oe=X(595);function U(r){for(var n="https://reactjs.org/docs/error-decoder.html?invariant="+r,i=1;i<arguments.length;i++)n+="&args[]="+encodeURIComponent(arguments[i]);return"Minified React error #"+r+"; visit "+n+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!ke)throw Error(U(227));var ct=new Set,qe={};function Qe(r,n){nt(r,n),nt(r+"Capture",n)}function nt(r,n){for(qe[r]=n,r=0;r<n.length;r++)ct.add(n[r])}var ze=!(typeof window=="undefined"||typeof window.document=="undefined"||typeof window.document.createElement=="undefined"),br=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,qt=Object.prototype.hasOwnProperty,Rt={},Ot={};function Kt(r){return qt.call(Ot,r)?!0:qt.call(Rt,r)?!1:br.test(r)?Ot[r]=!0:(Rt[r]=!0,!1)}function Lt(r,n,i,l){if(i!==null&&i.type===0)return!1;switch(typeof n){case"function":case"symbol":return!0;case"boolean":return l?!1:i!==null?!i.acceptsBooleans:(r=r.toLowerCase().slice(0,5),r!=="data-"&&r!=="aria-");default:return!1}}function lt(r,n,i,l){if(n===null||typeof n=="undefined"||Lt(r,n,i,l))return!0;if(l)return!1;if(i!==null)switch(i.type){case 3:return!n;case 4:return n===!1;case 5:return isNaN(n);case 6:return isNaN(n)||1>n}return!1}function at(r,n,i,l,a,m,y){this.acceptsBooleans=n===2||n===3||n===4,this.attributeName=l,this.attributeNamespace=a,this.mustUseProperty=i,this.propertyName=r,this.type=n,this.sanitizeURL=m,this.removeEmptyString=y}var Ze={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(r){Ze[r]=new at(r,0,!1,r,null,!1,!1)}),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(r){var n=r[0];Ze[n]=new at(n,1,!1,r[1],null,!1,!1)}),["contentEditable","draggable","spellCheck","value"].forEach(function(r){Ze[r]=new at(r,2,!1,r.toLowerCase(),null,!1,!1)}),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(r){Ze[r]=new at(r,2,!1,r,null,!1,!1)}),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(r){Ze[r]=new at(r,3,!1,r.toLowerCase(),null,!1,!1)}),["checked","multiple","muted","selected"].forEach(function(r){Ze[r]=new at(r,3,!0,r,null,!1,!1)}),["capture","download"].forEach(function(r){Ze[r]=new at(r,4,!1,r,null,!1,!1)}),["cols","rows","size","span"].forEach(function(r){Ze[r]=new at(r,6,!1,r,null,!1,!1)}),["rowSpan","start"].forEach(function(r){Ze[r]=new at(r,5,!1,r.toLowerCase(),null,!1,!1)});var kt=/[\-:]([a-z])/g;function ft(r){return r[1].toUpperCase()}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(r){var n=r.replace(kt,ft);Ze[n]=new at(n,1,!1,r,null,!1,!1)}),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(r){var n=r.replace(kt,ft);Ze[n]=new at(n,1,!1,r,"http://www.w3.org/1999/xlink",!1,!1)}),["xml:base","xml:lang","xml:space"].forEach(function(r){var n=r.replace(kt,ft);Ze[n]=new at(n,1,!1,r,"http://www.w3.org/XML/1998/namespace",!1,!1)}),["tabIndex","crossOrigin"].forEach(function(r){Ze[r]=new at(r,1,!1,r.toLowerCase(),null,!1,!1)}),Ze.xlinkHref=new at("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach(function(r){Ze[r]=new at(r,1,!1,r.toLowerCase(),null,!0,!0)});function Et(r,n,i,l){var a=Ze.hasOwnProperty(n)?Ze[n]:null,m=a!==null?a.type===0:l?!1:!(!(2<n.length)||n[0]!=="o"&&n[0]!=="O"||n[1]!=="n"&&n[1]!=="N");m||(lt(n,i,a,l)&&(i=null),l||a===null?Kt(n)&&(i===null?r.removeAttribute(n):r.setAttribute(n,""+i)):a.mustUseProperty?r[a.propertyName]=i===null?a.type===3?!1:"":i:(n=a.attributeName,l=a.attributeNamespace,i===null?r.removeAttribute(n):(a=a.type,i=a===3||a===4&&i===!0?"":""+i,l?r.setAttributeNS(l,n,i):r.setAttribute(n,i))))}var At=ke.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,Zt=60103,gt=60106,Tt=60107,wr=60108,it=60114,ot=60109,Vt=60110,Ut=60112,Mt=60113,jt=60120,$t=60115,M=60116,se=60121,Y=60128,ae=60129,he=60130,Re=60131;if(typeof Symbol=="function"&&Symbol.for){var Te=Symbol.for;Zt=Te("react.element"),gt=Te("react.portal"),Tt=Te("react.fragment"),wr=Te("react.strict_mode"),it=Te("react.profiler"),ot=Te("react.provider"),Vt=Te("react.context"),Ut=Te("react.forward_ref"),Mt=Te("react.suspense"),jt=Te("react.suspense_list"),$t=Te("react.memo"),M=Te("react.lazy"),se=Te("react.block"),Te("react.scope"),Y=Te("react.opaque.id"),ae=Te("react.debug_trace_mode"),he=Te("react.offscreen"),Re=Te("react.legacy_hidden")}var Ge=typeof Symbol=="function"&&Symbol.iterator;function Ue(r){return r===null||typeof r!="object"?null:(r=Ge&&r[Ge]||r["@@iterator"],typeof r=="function"?r:null)}var yt;function er(r){if(yt===void 0)try{throw Error()}catch(i){var n=i.stack.trim().match(/\n( *(at )?)/);yt=n&&n[1]||""}return`
`+yt+r}var ie=!1;function z(r,n){if(!r||ie)return"";ie=!0;var i=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(n)if(n=function(){throw Error()},Object.defineProperty(n.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(n,[])}catch(T){var l=T}Reflect.construct(r,[],n)}else{try{n.call()}catch(T){l=T}r.call(n.prototype)}else{try{throw Error()}catch(T){l=T}r()}}catch(T){if(T&&l&&typeof T.stack=="string"){for(var a=T.stack.split(`
`),m=l.stack.split(`
`),y=a.length-1,g=m.length-1;1<=y&&0<=g&&a[y]!==m[g];)g--;for(;1<=y&&0<=g;y--,g--)if(a[y]!==m[g]){if(y!==1||g!==1)do if(y--,g--,0>g||a[y]!==m[g])return`
`+a[y].replace(" at new "," at ");while(1<=y&&0<=g);break}}}finally{ie=!1,Error.prepareStackTrace=i}return(r=r?r.displayName||r.name:"")?er(r):""}function J(r){switch(r.tag){case 5:return er(r.type);case 16:return er("Lazy");case 13:return er("Suspense");case 19:return er("SuspenseList");case 0:case 2:case 15:return r=z(r.type,!1),r;case 11:return r=z(r.type.render,!1),r;case 22:return r=z(r.type._render,!1),r;case 1:return r=z(r.type,!0),r;default:return""}}function ue(r){if(r==null)return null;if(typeof r=="function")return r.displayName||r.name||null;if(typeof r=="string")return r;switch(r){case Tt:return"Fragment";case gt:return"Portal";case it:return"Profiler";case wr:return"StrictMode";case Mt:return"Suspense";case jt:return"SuspenseList"}if(typeof r=="object")switch(r.$$typeof){case Vt:return(r.displayName||"Context")+".Consumer";case ot:return(r._context.displayName||"Context")+".Provider";case Ut:var n=r.render;return n=n.displayName||n.name||"",r.displayName||(n!==""?"ForwardRef("+n+")":"ForwardRef");case $t:return ue(r.type);case se:return ue(r._render);case M:n=r._payload,r=r._init;try{return ue(r(n))}catch(i){}}return null}function $e(r){switch(typeof r){case"boolean":case"number":case"object":case"string":case"undefined":return r;default:return""}}function Se(r){var n=r.type;return(r=r.nodeName)&&r.toLowerCase()==="input"&&(n==="checkbox"||n==="radio")}function Ce(r){var n=Se(r)?"checked":"value",i=Object.getOwnPropertyDescriptor(r.constructor.prototype,n),l=""+r[n];if(!r.hasOwnProperty(n)&&typeof i!="undefined"&&typeof i.get=="function"&&typeof i.set=="function"){var a=i.get,m=i.set;return Object.defineProperty(r,n,{configurable:!0,get:function(){return a.call(this)},set:function(y){l=""+y,m.call(this,y)}}),Object.defineProperty(r,n,{enumerable:i.enumerable}),{getValue:function(){return l},setValue:function(y){l=""+y},stopTracking:function(){r._valueTracker=null,delete r[n]}}}}function Fe(r){r._valueTracker||(r._valueTracker=Ce(r))}function wt(r){if(!r)return!1;var n=r._valueTracker;if(!n)return!0;var i=n.getValue(),l="";return r&&(l=Se(r)?r.checked?"true":"false":r.value),r=l,r!==i?(n.setValue(r),!0):!1}function _t(r){if(r=r||(typeof document!="undefined"?document:void 0),typeof r=="undefined")return null;try{return r.activeElement||r.body}catch(n){return r.body}}function Ct(r,n){var i=n.checked;return pe({},n,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:i!=null?i:r._wrapperState.initialChecked})}function tr(r,n){var i=n.defaultValue==null?"":n.defaultValue,l=n.checked!=null?n.checked:n.defaultChecked;i=$e(n.value!=null?n.value:i),r._wrapperState={initialChecked:l,initialValue:i,controlled:n.type==="checkbox"||n.type==="radio"?n.checked!=null:n.value!=null}}function oc(r,n){n=n.checked,n!=null&&Et(r,"checked",n,!1)}function xl(r,n){oc(r,n);var i=$e(n.value),l=n.type;if(i!=null)l==="number"?(i===0&&r.value===""||r.value!=i)&&(r.value=""+i):r.value!==""+i&&(r.value=""+i);else if(l==="submit"||l==="reset"){r.removeAttribute("value");return}n.hasOwnProperty("value")?hs(r,n.type,i):n.hasOwnProperty("defaultValue")&&hs(r,n.type,$e(n.defaultValue)),n.checked==null&&n.defaultChecked!=null&&(r.defaultChecked=!!n.defaultChecked)}function ac(r,n,i){if(n.hasOwnProperty("value")||n.hasOwnProperty("defaultValue")){var l=n.type;if(!(l!=="submit"&&l!=="reset"||n.value!==void 0&&n.value!==null))return;n=""+r._wrapperState.initialValue,i||n===r.value||(r.value=n),r.defaultValue=n}i=r.name,i!==""&&(r.name=""),r.defaultChecked=!!r._wrapperState.initialChecked,i!==""&&(r.name=i)}function hs(r,n,i){(n!=="number"||_t(r.ownerDocument)!==r)&&(i==null?r.defaultValue=""+r._wrapperState.initialValue:r.defaultValue!==""+i&&(r.defaultValue=""+i))}function uc(r){var n="";return ke.Children.forEach(r,function(i){i!=null&&(n+=i)}),n}function ds(r,n){return r=pe({children:void 0},n),(n=uc(n.children))&&(r.children=n),r}function gi(r,n,i,l){if(r=r.options,n){n={};for(var a=0;a<i.length;a++)n["$"+i[a]]=!0;for(i=0;i<r.length;i++)a=n.hasOwnProperty("$"+r[i].value),r[i].selected!==a&&(r[i].selected=a),a&&l&&(r[i].defaultSelected=!0)}else{for(i=""+$e(i),n=null,a=0;a<r.length;a++){if(r[a].value===i){r[a].selected=!0,l&&(r[a].defaultSelected=!0);return}n!==null||r[a].disabled||(n=r[a])}n!==null&&(n.selected=!0)}}function ca(r,n){if(n.dangerouslySetInnerHTML!=null)throw Error(U(91));return pe({},n,{value:void 0,defaultValue:void 0,children:""+r._wrapperState.initialValue})}function fa(r,n){var i=n.value;if(i==null){if(i=n.children,n=n.defaultValue,i!=null){if(n!=null)throw Error(U(92));if(Array.isArray(i)){if(!(1>=i.length))throw Error(U(93));i=i[0]}n=i}n==null&&(n=""),i=n}r._wrapperState={initialValue:$e(i)}}function Jr(r,n){var i=$e(n.value),l=$e(n.defaultValue);i!=null&&(i=""+i,i!==r.value&&(r.value=i),n.defaultValue==null&&r.defaultValue!==i&&(r.defaultValue=i)),l!=null&&(r.defaultValue=""+l)}function Sl(r){var n=r.textContent;n===r._wrapperState.initialValue&&n!==""&&n!==null&&(r.value=n)}var kl={html:"http://www.w3.org/1999/xhtml",mathml:"http://www.w3.org/1998/Math/MathML",svg:"http://www.w3.org/2000/svg"};function ys(r){switch(r){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function ma(r,n){return r==null||r==="http://www.w3.org/1999/xhtml"?ys(n):r==="http://www.w3.org/2000/svg"&&n==="foreignObject"?"http://www.w3.org/1999/xhtml":r}var Fn,pa=function(r){return typeof MSApp!="undefined"&&MSApp.execUnsafeLocalFunction?function(n,i,l,a){MSApp.execUnsafeLocalFunction(function(){return r(n,i,l,a)})}:r}(function(r,n){if(r.namespaceURI!==kl.svg||"innerHTML"in r)r.innerHTML=n;else{for(Fn=Fn||document.createElement("div"),Fn.innerHTML="<svg>"+n.valueOf().toString()+"</svg>",n=Fn.firstChild;r.firstChild;)r.removeChild(r.firstChild);for(;n.firstChild;)r.appendChild(n.firstChild)}});function bi(r,n){if(n){var i=r.firstChild;if(i&&i===r.lastChild&&i.nodeType===3){i.nodeValue=n;return}}r.textContent=n}var vs={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},kf=["Webkit","ms","Moz","O"];Object.keys(vs).forEach(function(r){kf.forEach(function(n){n=n+r.charAt(0).toUpperCase()+r.substring(1),vs[n]=vs[r]})});function cc(r,n,i){return n==null||typeof n=="boolean"||n===""?"":i||typeof n!="number"||n===0||vs.hasOwnProperty(r)&&vs[r]?(""+n).trim():n+"px"}function ha(r,n){r=r.style;for(var i in n)if(n.hasOwnProperty(i)){var l=i.indexOf("--")===0,a=cc(i,n[i],l);i==="float"&&(i="cssFloat"),l?r.setProperty(i,a):r[i]=a}}var Ef=pe({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function El(r,n){if(n){if(Ef[r]&&(n.children!=null||n.dangerouslySetInnerHTML!=null))throw Error(U(137,r));if(n.dangerouslySetInnerHTML!=null){if(n.children!=null)throw Error(U(60));if(!(typeof n.dangerouslySetInnerHTML=="object"&&"__html"in n.dangerouslySetInnerHTML))throw Error(U(61))}if(n.style!=null&&typeof n.style!="object")throw Error(U(62))}}function wn(r,n){if(r.indexOf("-")===-1)return typeof n.is=="string";switch(r){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}function da(r){return r=r.target||r.srcElement||window,r.correspondingUseElement&&(r=r.correspondingUseElement),r.nodeType===3?r.parentNode:r}var Tl=null,wi=null,Qr=null;function vt(r){if(r=Mi(r)){if(typeof Tl!="function")throw Error(U(280));var n=r.stateNode;n&&(n=Is(n),Tl(r.stateNode,r.type,n))}}function ya(r){wi?Qr?Qr.push(r):Qr=[r]:wi=r}function va(){if(wi){var r=wi,n=Qr;if(Qr=wi=null,vt(r),n)for(r=0;r<n.length;r++)vt(n[r])}}function ur(r,n){return r(n)}function Dn(r,n,i,l,a){return r(n,i,l,a)}function cr(){}var $l=ur,Xr=!1,ga=!1;function Cl(){(wi!==null||Qr!==null)&&(cr(),va())}function ba(r,n,i){if(ga)return r(n,i);ga=!0;try{return $l(r,n,i)}finally{ga=!1,Cl()}}function mt(r,n){var i=r.stateNode;if(i===null)return null;var l=Is(i);if(l===null)return null;i=l[n];e:switch(n){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(l=!l.disabled)||(r=r.type,l=!(r==="button"||r==="input"||r==="select"||r==="textarea")),r=!l;break e;default:r=!1}if(r)return null;if(i&&typeof i!="function")throw Error(U(231,n,typeof i));return i}var Pl=!1;if(ze)try{var gs={};Object.defineProperty(gs,"passive",{get:function(){Pl=!0}}),window.addEventListener("test",gs,gs),window.removeEventListener("test",gs,gs)}catch(r){Pl=!1}function fc(r,n,i,l,a,m,y,g,T){var B=Array.prototype.slice.call(arguments,3);try{n.apply(i,B)}catch(de){this.onError(de)}}var bs=!1,Ol=null,Ll=!1,ut=null,Tf={onError:function(r){bs=!0,Ol=r}};function $f(r,n,i,l,a,m,y,g,T){bs=!1,Ol=null,fc.apply(Tf,arguments)}function wa(r,n,i,l,a,m,y,g,T){if($f.apply(this,arguments),bs){if(bs){var B=Ol;bs=!1,Ol=null}else throw Error(U(198));Ll||(Ll=!0,ut=B)}}function zn(r){var n=r,i=r;if(r.alternate)for(;n.return;)n=n.return;else{r=n;do n=r,(n.flags&1026)!==0&&(i=n.return),r=n.return;while(r)}return n.tag===3?i:null}function mc(r){if(r.tag===13){var n=r.memoizedState;if(n===null&&(r=r.alternate,r!==null&&(n=r.memoizedState)),n!==null)return n.dehydrated}return null}function jl(r){if(zn(r)!==r)throw Error(U(188))}function Cf(r){var n=r.alternate;if(!n){if(n=zn(r),n===null)throw Error(U(188));return n!==r?null:r}for(var i=r,l=n;;){var a=i.return;if(a===null)break;var m=a.alternate;if(m===null){if(l=a.return,l!==null){i=l;continue}break}if(a.child===m.child){for(m=a.child;m;){if(m===i)return jl(a),r;if(m===l)return jl(a),n;m=m.sibling}throw Error(U(188))}if(i.return!==l.return)i=a,l=m;else{for(var y=!1,g=a.child;g;){if(g===i){y=!0,i=a,l=m;break}if(g===l){y=!0,l=a,i=m;break}g=g.sibling}if(!y){for(g=m.child;g;){if(g===i){y=!0,i=m,l=a;break}if(g===l){y=!0,l=m,i=a;break}g=g.sibling}if(!y)throw Error(U(189))}}if(i.alternate!==l)throw Error(U(190))}if(i.tag!==3)throw Error(U(188));return i.stateNode.current===i?r:n}function pc(r){if(r=Cf(r),!r)return null;for(var n=r;;){if(n.tag===5||n.tag===6)return n;if(n.child)n.child.return=n,n=n.child;else{if(n===r)break;for(;!n.sibling;){if(!n.return||n.return===r)return null;n=n.return}n.sibling.return=n.return,n=n.sibling}}return null}function hc(r,n){for(var i=r.alternate;n!==null;){if(n===r||n===i)return!0;n=n.return}return!1}var dc,_a,yc,xa,_r=!1,fr=[],xr=null,st=null,Xe=null,_i=new Map,Mr=new Map,Wn=[],vc="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function Sa(r,n,i,l,a){return{blockedOn:r,domEventName:n,eventSystemFlags:i|16,nativeEvent:a,targetContainers:[l]}}function _s(r,n){switch(r){case"focusin":case"focusout":xr=null;break;case"dragenter":case"dragleave":st=null;break;case"mouseover":case"mouseout":Xe=null;break;case"pointerover":case"pointerout":_i.delete(n.pointerId);break;case"gotpointercapture":case"lostpointercapture":Mr.delete(n.pointerId)}}function xs(r,n,i,l,a,m){return r===null||r.nativeEvent!==m?(r=Sa(n,i,l,a,m),n!==null&&(n=Mi(n),n!==null&&_a(n)),r):(r.eventSystemFlags|=l,n=r.targetContainers,a!==null&&n.indexOf(a)===-1&&n.push(a),r)}function bt(r,n,i,l,a){switch(n){case"focusin":return xr=xs(xr,r,n,i,l,a),!0;case"dragenter":return st=xs(st,r,n,i,l,a),!0;case"mouseover":return Xe=xs(Xe,r,n,i,l,a),!0;case"pointerover":var m=a.pointerId;return _i.set(m,xs(_i.get(m)||null,r,n,i,l,a)),!0;case"gotpointercapture":return m=a.pointerId,Mr.set(m,xs(Mr.get(m)||null,r,n,i,l,a)),!0}return!1}function Sr(r){var n=Tn(r.target);if(n!==null){var i=zn(n);if(i!==null){if(n=i.tag,n===13){if(n=mc(i),n!==null){r.blockedOn=n,xa(r.lanePriority,function(){oe.unstable_runWithPriority(r.priority,function(){yc(i)})});return}}else if(n===3&&i.stateNode.hydrate){r.blockedOn=i.tag===3?i.stateNode.containerInfo:null;return}}}r.blockedOn=null}function Un(r){if(r.blockedOn!==null)return!1;for(var n=r.targetContainers;0<n.length;){var i=Il(r.domEventName,r.eventSystemFlags,n[0],r.nativeEvent);if(i!==null)return n=Mi(i),n!==null&&_a(n),r.blockedOn=i,!1;n.shift()}return!0}function Ss(r,n,i){Un(r)&&i.delete(n)}function gc(){for(_r=!1;0<fr.length;){var r=fr[0];if(r.blockedOn!==null){r=Mi(r.blockedOn),r!==null&&dc(r);break}for(var n=r.targetContainers;0<n.length;){var i=Il(r.domEventName,r.eventSystemFlags,n[0],r.nativeEvent);if(i!==null){r.blockedOn=i;break}n.shift()}r.blockedOn===null&&fr.shift()}xr!==null&&Un(xr)&&(xr=null),st!==null&&Un(st)&&(st=null),Xe!==null&&Un(Xe)&&(Xe=null),_i.forEach(Ss),Mr.forEach(Ss)}function xi(r,n){r.blockedOn===n&&(r.blockedOn=null,_r||(_r=!0,oe.unstable_scheduleCallback(oe.unstable_NormalPriority,gc)))}function Kr(r){function n(a){return xi(a,r)}if(0<fr.length){xi(fr[0],r);for(var i=1;i<fr.length;i++){var l=fr[i];l.blockedOn===r&&(l.blockedOn=null)}}for(xr!==null&&xi(xr,r),st!==null&&xi(st,r),Xe!==null&&xi(Xe,r),_i.forEach(n),Mr.forEach(n),i=0;i<Wn.length;i++)l=Wn[i],l.blockedOn===r&&(l.blockedOn=null);for(;0<Wn.length&&(i=Wn[0],i.blockedOn===null);)Sr(i),i.blockedOn===null&&Wn.shift()}function ks(r,n){var i={};return i[r.toLowerCase()]=n.toLowerCase(),i["Webkit"+r]="webkit"+n,i["Moz"+r]="moz"+n,i}var Hn={animationend:ks("Animation","AnimationEnd"),animationiteration:ks("Animation","AnimationIteration"),animationstart:ks("Animation","AnimationStart"),transitionend:ks("Transition","TransitionEnd")},Rl={},bc={};ze&&(bc=document.createElement("div").style,"AnimationEvent"in window||(delete Hn.animationend.animation,delete Hn.animationiteration.animation,delete Hn.animationstart.animation),"TransitionEvent"in window||delete Hn.transitionend.transition);function Nl(r){if(Rl[r])return Rl[r];if(!Hn[r])return r;var n=Hn[r],i;for(i in n)if(n.hasOwnProperty(i)&&i in bc)return Rl[r]=n[i];return r}var Al=Nl("animationend"),wc=Nl("animationiteration"),_c=Nl("animationstart"),xc=Nl("transitionend"),Sc=new Map,ka=new Map,Pf=["abort","abort",Al,"animationEnd",wc,"animationIteration",_c,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking","seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",xc,"transitionEnd","waiting","waiting"];function Ea(r,n){for(var i=0;i<r.length;i+=2){var l=r[i],a=r[i+1];a="on"+(a[0].toUpperCase()+a.slice(1)),ka.set(l,n),Sc.set(l,a),Qe(a,[l])}}var Of=oe.unstable_now;Of();var pt=8;function Si(r){if((1&r)!==0)return pt=15,1;if((2&r)!==0)return pt=14,2;if((4&r)!==0)return pt=13,4;var n=24&r;return n!==0?(pt=12,n):(r&32)!==0?(pt=11,32):(n=192&r,n!==0?(pt=10,n):(r&256)!==0?(pt=9,256):(n=3584&r,n!==0?(pt=8,n):(r&4096)!==0?(pt=7,4096):(n=4186112&r,n!==0?(pt=6,n):(n=62914560&r,n!==0?(pt=5,n):r&67108864?(pt=4,67108864):(r&134217728)!==0?(pt=3,134217728):(n=805306368&r,n!==0?(pt=2,n):(1073741824&r)!==0?(pt=1,1073741824):(pt=8,r))))))}function Lf(r){switch(r){case 99:return 15;case 98:return 10;case 97:case 96:return 8;case 95:return 2;default:return 0}}function jf(r){switch(r){case 15:case 14:return 99;case 13:case 12:case 11:case 10:return 98;case 9:case 8:case 7:case 6:case 4:case 5:return 97;case 3:case 2:case 1:return 95;case 0:return 90;default:throw Error(U(358,r))}}function Es(r,n){var i=r.pendingLanes;if(i===0)return pt=0;var l=0,a=0,m=r.expiredLanes,y=r.suspendedLanes,g=r.pingedLanes;if(m!==0)l=m,a=pt=15;else if(m=i&134217727,m!==0){var T=m&~y;T!==0?(l=Si(T),a=pt):(g&=m,g!==0&&(l=Si(g),a=pt))}else m=i&~y,m!==0?(l=Si(m),a=pt):g!==0&&(l=Si(g),a=pt);if(l===0)return 0;if(l=31-_n(l),l=i&((0>l?0:1<<l)<<1)-1,n!==0&&n!==l&&(n&y)===0){if(Si(n),a<=pt)return n;pt=a}if(n=r.entangledLanes,n!==0)for(r=r.entanglements,n&=l;0<n;)i=31-_n(n),a=1<<i,l|=r[i],n&=~a;return l}function kc(r){return r=r.pendingLanes&-1073741825,r!==0?r:r&1073741824?1073741824:0}function Vl(r,n){switch(r){case 15:return 1;case 14:return 2;case 12:return r=ki(24&~n),r===0?Vl(10,n):r;case 10:return r=ki(192&~n),r===0?Vl(8,n):r;case 8:return r=ki(3584&~n),r===0&&(r=ki(4186112&~n),r===0&&(r=512)),r;case 2:return n=ki(805306368&~n),n===0&&(n=268435456),n}throw Error(U(358,r))}function ki(r){return r&-r}function Ta(r){for(var n=[],i=0;31>i;i++)n.push(r);return n}function Ml(r,n,i){r.pendingLanes|=n;var l=n-1;r.suspendedLanes&=l,r.pingedLanes&=l,r=r.eventTimes,n=31-_n(n),r[n]=i}var _n=Math.clz32?Math.clz32:Af,Rf=Math.log,Nf=Math.LN2;function Af(r){return r===0?32:31-(Rf(r)/Nf|0)|0}var Vf=oe.unstable_UserBlockingPriority,Mf=oe.unstable_runWithPriority,Ir=!0;function Ec(r,n,i,l){Xr||cr();var a=qn,m=Xr;Xr=!0;try{Dn(a,r,n,i,l)}finally{(Xr=m)||Cl()}}function Tc(r,n,i,l){Mf(Vf,qn.bind(null,r,n,i,l))}function qn(r,n,i,l){if(Ir){var a;if((a=(n&4)===0)&&0<fr.length&&-1<vc.indexOf(r))r=Sa(null,r,n,i,l),fr.push(r);else{var m=Il(r,n,i,l);if(m===null)a&&_s(r,l);else{if(a){if(-1<vc.indexOf(r)){r=Sa(m,r,n,i,l),fr.push(r);return}if(bt(m,r,n,i,l))return;_s(r,l)}Ri(r,n,l,null,i)}}}}function Il(r,n,i,l){var a=da(l);if(a=Tn(a),a!==null){var m=zn(a);if(m===null)a=null;else{var y=m.tag;if(y===13){if(a=mc(m),a!==null)return a;a=null}else if(y===3){if(m.stateNode.hydrate)return m.tag===3?m.stateNode.containerInfo:null;a=null}else m!==a&&(a=null)}}return Ri(r,n,l,a,i),null}var jr=null,Bl=null,Ts=null;function Fl(){if(Ts)return Ts;var r,n=Bl,i=n.length,l,a="value"in jr?jr.value:jr.textContent,m=a.length;for(r=0;r<i&&n[r]===a[r];r++);var y=i-r;for(l=1;l<=y&&n[i-l]===a[m-l];l++);return Ts=a.slice(r,1<l?1-l:void 0)}function Zr(r){var n=r.keyCode;return"charCode"in r?(r=r.charCode,r===0&&n===13&&(r=13)):r=n,r===10&&(r=13),32<=r||r===13?r:0}function Ei(){return!0}function $a(){return!1}function or(r){function n(i,l,a,m,y){this._reactName=i,this._targetInst=a,this.type=l,this.nativeEvent=m,this.target=y,this.currentTarget=null;for(var g in r)r.hasOwnProperty(g)&&(i=r[g],this[g]=i?i(m):m[g]);return this.isDefaultPrevented=(m.defaultPrevented!=null?m.defaultPrevented:m.returnValue===!1)?Ei:$a,this.isPropagationStopped=$a,this}return pe(n.prototype,{preventDefault:function(){this.defaultPrevented=!0;var i=this.nativeEvent;i&&(i.preventDefault?i.preventDefault():typeof i.returnValue!="unknown"&&(i.returnValue=!1),this.isDefaultPrevented=Ei)},stopPropagation:function(){var i=this.nativeEvent;i&&(i.stopPropagation?i.stopPropagation():typeof i.cancelBubble!="unknown"&&(i.cancelBubble=!0),this.isPropagationStopped=Ei)},persist:function(){},isPersistent:Ei}),n}var Gn={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(r){return r.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},$s=or(Gn),Ti=pe({},Gn,{view:0,detail:0}),$c=or(Ti),xn,Dl,$i,Cs=pe({},Ti,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:en,button:0,buttons:0,relatedTarget:function(r){return r.relatedTarget===void 0?r.fromElement===r.srcElement?r.toElement:r.fromElement:r.relatedTarget},movementX:function(r){return"movementX"in r?r.movementX:(r!==$i&&($i&&r.type==="mousemove"?(xn=r.screenX-$i.screenX,Dl=r.screenY-$i.screenY):Dl=xn=0,$i=r),xn)},movementY:function(r){return"movementY"in r?r.movementY:Dl}}),Ca=or(Cs),Ps=pe({},Cs,{dataTransfer:0}),Cc=or(Ps),Pc=pe({},Ti,{relatedTarget:0}),zl=or(Pc),Oc=pe({},Gn,{animationName:0,elapsedTime:0,pseudoElement:0}),Lc=or(Oc),Wl=pe({},Gn,{clipboardData:function(r){return"clipboardData"in r?r.clipboardData:window.clipboardData}}),jc=or(Wl),Rc=pe({},Gn,{data:0}),Pa=or(Rc),Nc={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Os={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},kr={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Ac(r){var n=this.nativeEvent;return n.getModifierState?n.getModifierState(r):(r=kr[r])?!!n[r]:!1}function en(){return Ac}var Oa=pe({},Ti,{key:function(r){if(r.key){var n=Nc[r.key]||r.key;if(n!=="Unidentified")return n}return r.type==="keypress"?(r=Zr(r),r===13?"Enter":String.fromCharCode(r)):r.type==="keydown"||r.type==="keyup"?Os[r.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:en,charCode:function(r){return r.type==="keypress"?Zr(r):0},keyCode:function(r){return r.type==="keydown"||r.type==="keyup"?r.keyCode:0},which:function(r){return r.type==="keypress"?Zr(r):r.type==="keydown"||r.type==="keyup"?r.keyCode:0}}),Ls=or(Oa),Vc=pe({},Cs,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Gt=or(Vc),Mc=pe({},Ti,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:en}),Ul=or(Mc),La=pe({},Gn,{propertyName:0,elapsedTime:0,pseudoElement:0}),ja=or(La),Ra=pe({},Cs,{deltaX:function(r){return"deltaX"in r?r.deltaX:"wheelDeltaX"in r?-r.wheelDeltaX:0},deltaY:function(r){return"deltaY"in r?r.deltaY:"wheelDeltaY"in r?-r.wheelDeltaY:"wheelDelta"in r?-r.wheelDelta:0},deltaZ:0,deltaMode:0}),Na=or(Ra),Aa=[9,13,27,32],js=ze&&"CompositionEvent"in window,Ci=null;ze&&"documentMode"in document&&(Ci=document.documentMode);var Ic=ze&&"TextEvent"in window&&!Ci,Va=ze&&(!js||Ci&&8<Ci&&11>=Ci),Ma=String.fromCharCode(32),Ia=!1;function Ba(r,n){switch(r){case"keyup":return Aa.indexOf(n.keyCode)!==-1;case"keydown":return n.keyCode!==229;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function tn(r){return r=r.detail,typeof r=="object"&&"data"in r?r.data:null}var rn=!1;function Hl(r,n){switch(r){case"compositionend":return tn(n);case"keypress":return n.which!==32?null:(Ia=!0,Ma);case"textInput":return r=n.data,r===Ma&&Ia?null:r;default:return null}}function ql(r,n){if(rn)return r==="compositionend"||!js&&Ba(r,n)?(r=Fl(),Ts=Bl=jr=null,rn=!1,r):null;switch(r){case"paste":return null;case"keypress":if(!(n.ctrlKey||n.altKey||n.metaKey)||n.ctrlKey&&n.altKey){if(n.char&&1<n.char.length)return n.char;if(n.which)return String.fromCharCode(n.which)}return null;case"compositionend":return Va&&n.locale!=="ko"?null:n.data;default:return null}}var Gl={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Fa(r){var n=r&&r.nodeName&&r.nodeName.toLowerCase();return n==="input"?!!Gl[r.type]:n==="textarea"}function Da(r,n,i,l){ya(l),n=Ni(n,"onChange"),0<n.length&&(i=new $s("onChange","change",null,i,l),r.push({event:i,listeners:n}))}var Pi=null,Sn=null;function Bc(r){ji(r,0)}function Rs(r){var n=Kn(r);if(wt(n))return r}function Fc(r,n){if(r==="change")return n}var za=!1;if(ze){var Yl;if(ze){var Jl="oninput"in document;if(!Jl){var Ql=document.createElement("div");Ql.setAttribute("oninput","return;"),Jl=typeof Ql.oninput=="function"}Yl=Jl}else Yl=!1;za=Yl&&(!document.documentMode||9<document.documentMode)}function Xl(){Pi&&(Pi.detachEvent("onpropertychange",Wa),Sn=Pi=null)}function Wa(r){if(r.propertyName==="value"&&Rs(Sn)){var n=[];if(Da(n,Sn,r,da(r)),r=Bc,Xr)r(n);else{Xr=!0;try{ur(r,n)}finally{Xr=!1,Cl()}}}}function Ua(r,n,i){r==="focusin"?(Xl(),Pi=n,Sn=i,Pi.attachEvent("onpropertychange",Wa)):r==="focusout"&&Xl()}function Kl(r){if(r==="selectionchange"||r==="keyup"||r==="keydown")return Rs(Sn)}function Dc(r,n){if(r==="click")return Rs(n)}function zc(r,n){if(r==="input"||r==="change")return Rs(n)}function Wc(r,n){return r===n&&(r!==0||1/r===1/n)||r!==r&&n!==n}var mr=typeof Object.is=="function"?Object.is:Wc,Ha=Object.prototype.hasOwnProperty;function Oi(r,n){if(mr(r,n))return!0;if(typeof r!="object"||r===null||typeof n!="object"||n===null)return!1;var i=Object.keys(r),l=Object.keys(n);if(i.length!==l.length)return!1;for(l=0;l<i.length;l++)if(!Ha.call(n,i[l])||!mr(r[i[l]],n[i[l]]))return!1;return!0}function qa(r){for(;r&&r.firstChild;)r=r.firstChild;return r}function Ga(r,n){var i=qa(r);r=0;for(var l;i;){if(i.nodeType===3){if(l=r+i.textContent.length,r<=n&&l>=n)return{node:i,offset:n-r};r=l}e:{for(;i;){if(i.nextSibling){i=i.nextSibling;break e}i=i.parentNode}i=void 0}i=qa(i)}}function Zl(r,n){return r&&n?r===n?!0:r&&r.nodeType===3?!1:n&&n.nodeType===3?Zl(r,n.parentNode):"contains"in r?r.contains(n):r.compareDocumentPosition?!!(r.compareDocumentPosition(n)&16):!1:!1}function Ya(){for(var r=window,n=_t();n instanceof r.HTMLIFrameElement;){try{var i=typeof n.contentWindow.location.href=="string"}catch(l){i=!1}if(i)r=n.contentWindow;else break;n=_t(r.document)}return n}function eo(r){var n=r&&r.nodeName&&r.nodeName.toLowerCase();return n&&(n==="input"&&(r.type==="text"||r.type==="search"||r.type==="tel"||r.type==="url"||r.type==="password")||n==="textarea"||r.contentEditable==="true")}var Uc=ze&&"documentMode"in document&&11>=document.documentMode,kn=null,to=null,Yn=null,ro=!1;function no(r,n,i){var l=i.window===i?i.document:i.nodeType===9?i:i.ownerDocument;ro||kn==null||kn!==_t(l)||(l=kn,"selectionStart"in l&&eo(l)?l={start:l.selectionStart,end:l.selectionEnd}:(l=(l.ownerDocument&&l.ownerDocument.defaultView||window).getSelection(),l={anchorNode:l.anchorNode,anchorOffset:l.anchorOffset,focusNode:l.focusNode,focusOffset:l.focusOffset}),Yn&&Oi(Yn,l)||(Yn=l,l=Ni(to,"onSelect"),0<l.length&&(n=new $s("onSelect","select",null,n,i),r.push({event:n,listeners:l}),n.target=kn)))}Ea("cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focusin focus focusout blur input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0),Ea("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1),Ea(Pf,2);for(var Ja="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),io=0;io<Ja.length;io++)ka.set(Ja[io],0);nt("onMouseEnter",["mouseout","mouseover"]),nt("onMouseLeave",["mouseout","mouseover"]),nt("onPointerEnter",["pointerout","pointerover"]),nt("onPointerLeave",["pointerout","pointerover"]),Qe("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),Qe("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),Qe("onBeforeInput",["compositionend","keypress","textInput","paste"]),Qe("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),Qe("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),Qe("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Li="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Qa=new Set("cancel close invalid load scroll toggle".split(" ").concat(Li));function Xa(r,n,i){var l=r.type||"unknown-event";r.currentTarget=i,wa(l,n,void 0,r),r.currentTarget=null}function ji(r,n){n=(n&4)!==0;for(var i=0;i<r.length;i++){var l=r[i],a=l.event;l=l.listeners;e:{var m=void 0;if(n)for(var y=l.length-1;0<=y;y--){var g=l[y],T=g.instance,B=g.currentTarget;if(g=g.listener,T!==m&&a.isPropagationStopped())break e;Xa(a,g,B),m=T}else for(y=0;y<l.length;y++){if(g=l[y],T=g.instance,B=g.currentTarget,g=g.listener,T!==m&&a.isPropagationStopped())break e;Xa(a,g,B),m=T}}}if(Ll)throw r=ut,Ll=!1,ut=null,r}function ht(r,n){var i=nu(n),l=r+"__bubble";i.has(l)||(so(n,r,2,!1),i.add(l))}var Ns="_reactListening"+Math.random().toString(36).slice(2);function Ka(r){r[Ns]||(r[Ns]=!0,ct.forEach(function(n){Qa.has(n)||Za(n,!1,r,null),Za(n,!0,r,null)}))}function Za(r,n,i,l){var a=4<arguments.length&&arguments[4]!==void 0?arguments[4]:0,m=i;if(r==="selectionchange"&&i.nodeType!==9&&(m=i.ownerDocument),l!==null&&!n&&Qa.has(r)){if(r!=="scroll")return;a|=2,m=l}var y=nu(m),g=r+"__"+(n?"capture":"bubble");y.has(g)||(n&&(a|=4),so(m,r,a,n),y.add(g))}function so(r,n,i,l){var a=ka.get(n);switch(a===void 0?2:a){case 0:a=Ec;break;case 1:a=Tc;break;default:a=qn}i=a.bind(null,n,i,r),a=void 0,!Pl||n!=="touchstart"&&n!=="touchmove"&&n!=="wheel"||(a=!0),l?a!==void 0?r.addEventListener(n,i,{capture:!0,passive:a}):r.addEventListener(n,i,!0):a!==void 0?r.addEventListener(n,i,{passive:a}):r.addEventListener(n,i,!1)}function Ri(r,n,i,l,a){var m=l;if((n&1)===0&&(n&2)===0&&l!==null)e:for(;;){if(l===null)return;var y=l.tag;if(y===3||y===4){var g=l.stateNode.containerInfo;if(g===a||g.nodeType===8&&g.parentNode===a)break;if(y===4)for(y=l.return;y!==null;){var T=y.tag;if((T===3||T===4)&&(T=y.stateNode.containerInfo,T===a||T.nodeType===8&&T.parentNode===a))return;y=y.return}for(;g!==null;){if(y=Tn(g),y===null)return;if(T=y.tag,T===5||T===6){l=m=y;continue e}g=g.parentNode}}l=l.return}ba(function(){var B=m,de=da(i),Ve=[];e:{var Z=Sc.get(r);if(Z!==void 0){var Ee=$s,Ae=r;switch(r){case"keypress":if(Zr(i)===0)break e;case"keydown":case"keyup":Ee=Ls;break;case"focusin":Ae="focus",Ee=zl;break;case"focusout":Ae="blur",Ee=zl;break;case"beforeblur":case"afterblur":Ee=zl;break;case"click":if(i.button===2)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":Ee=Ca;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":Ee=Cc;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":Ee=Ul;break;case Al:case wc:case _c:Ee=Lc;break;case xc:Ee=ja;break;case"scroll":Ee=$c;break;case"wheel":Ee=Na;break;case"copy":case"cut":case"paste":Ee=jc;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":Ee=Gt}var je=(n&4)!==0,N=!je&&r==="scroll",C=je?Z!==null?Z+"Capture":null:Z;je=[];for(var L=B,q;L!==null;){q=L;var Q=q.stateNode;if(q.tag===5&&Q!==null&&(q=Q,C!==null&&(Q=mt(L,C),Q!=null&&je.push(Jn(L,Q,q)))),N)break;L=L.return}0<je.length&&(Z=new Ee(Z,Ae,null,i,de),Ve.push({event:Z,listeners:je}))}}if((n&7)===0){e:{if(Z=r==="mouseover"||r==="pointerover",Ee=r==="mouseout"||r==="pointerout",Z&&(n&16)===0&&(Ae=i.relatedTarget||i.fromElement)&&(Tn(Ae)||Ae[Xn]))break e;if((Ee||Z)&&(Z=de.window===de?de:(Z=de.ownerDocument)?Z.defaultView||Z.parentWindow:window,Ee?(Ae=i.relatedTarget||i.toElement,Ee=B,Ae=Ae?Tn(Ae):null,Ae!==null&&(N=zn(Ae),Ae!==N||Ae.tag!==5&&Ae.tag!==6)&&(Ae=null)):(Ee=null,Ae=B),Ee!==Ae)){if(je=Ca,Q="onMouseLeave",C="onMouseEnter",L="mouse",(r==="pointerout"||r==="pointerover")&&(je=Gt,Q="onPointerLeave",C="onPointerEnter",L="pointer"),N=Ee==null?Z:Kn(Ee),q=Ae==null?Z:Kn(Ae),Z=new je(Q,L+"leave",Ee,i,de),Z.target=N,Z.relatedTarget=q,Q=null,Tn(de)===B&&(je=new je(C,L+"enter",Ae,i,de),je.target=q,je.relatedTarget=N,Q=je),N=Q,Ee&&Ae)t:{for(je=Ee,C=Ae,L=0,q=je;q;q=Er(q))L++;for(q=0,Q=C;Q;Q=Er(Q))q++;for(;0<L-q;)je=Er(je),L--;for(;0<q-L;)C=Er(C),q--;for(;L--;){if(je===C||C!==null&&je===C.alternate)break t;je=Er(je),C=Er(C)}je=null}else je=null;Ee!==null&&lo(Ve,Z,Ee,je,!1),Ae!==null&&N!==null&&lo(Ve,N,Ae,je,!0)}}e:{if(Z=B?Kn(B):window,Ee=Z.nodeName&&Z.nodeName.toLowerCase(),Ee==="select"||Ee==="input"&&Z.type==="file")var Me=Fc;else if(Fa(Z))if(za)Me=zc;else{Me=Kl;var xe=Ua}else(Ee=Z.nodeName)&&Ee.toLowerCase()==="input"&&(Z.type==="checkbox"||Z.type==="radio")&&(Me=Dc);if(Me&&(Me=Me(r,B))){Da(Ve,Me,i,de);break e}xe&&xe(r,Z,B),r==="focusout"&&(xe=Z._wrapperState)&&xe.controlled&&Z.type==="number"&&hs(Z,"number",Z.value)}switch(xe=B?Kn(B):window,r){case"focusin":(Fa(xe)||xe.contentEditable==="true")&&(kn=xe,to=B,Yn=null);break;case"focusout":Yn=to=kn=null;break;case"mousedown":ro=!0;break;case"contextmenu":case"mouseup":case"dragend":ro=!1,no(Ve,i,de);break;case"selectionchange":if(Uc)break;case"keydown":case"keyup":no(Ve,i,de)}var Ie;if(js)e:{switch(r){case"compositionstart":var We="onCompositionStart";break e;case"compositionend":We="onCompositionEnd";break e;case"compositionupdate":We="onCompositionUpdate";break e}We=void 0}else rn?Ba(r,i)&&(We="onCompositionEnd"):r==="keydown"&&i.keyCode===229&&(We="onCompositionStart");We&&(Va&&i.locale!=="ko"&&(rn||We!=="onCompositionStart"?We==="onCompositionEnd"&&rn&&(Ie=Fl()):(jr=de,Bl="value"in jr?jr.value:jr.textContent,rn=!0)),xe=Ni(B,We),0<xe.length&&(We=new Pa(We,r,null,i,de),Ve.push({event:We,listeners:xe}),Ie?We.data=Ie:(Ie=tn(i),Ie!==null&&(We.data=Ie)))),(Ie=Ic?Hl(r,i):ql(r,i))&&(B=Ni(B,"onBeforeInput"),0<B.length&&(de=new Pa("onBeforeInput","beforeinput",null,i,de),Ve.push({event:de,listeners:B}),de.data=Ie))}ji(Ve,n)})}function Jn(r,n,i){return{instance:r,listener:n,currentTarget:i}}function Ni(r,n){for(var i=n+"Capture",l=[];r!==null;){var a=r,m=a.stateNode;a.tag===5&&m!==null&&(a=m,m=mt(r,i),m!=null&&l.unshift(Jn(r,m,a)),m=mt(r,n),m!=null&&l.push(Jn(r,m,a))),r=r.return}return l}function Er(r){if(r===null)return null;do r=r.return;while(r&&r.tag!==5);return r||null}function lo(r,n,i,l,a){for(var m=n._reactName,y=[];i!==null&&i!==l;){var g=i,T=g.alternate,B=g.stateNode;if(T!==null&&T===l)break;g.tag===5&&B!==null&&(g=B,a?(T=mt(i,m),T!=null&&y.unshift(Jn(i,T,g))):a||(T=mt(i,m),T!=null&&y.push(Jn(i,T,g)))),i=i.return}y.length!==0&&r.push({event:n,listeners:y})}function Ai(){}var oo=null,Qn=null;function ao(r,n){switch(r){case"button":case"input":case"select":case"textarea":return!!n.autoFocus}return!1}function Vi(r,n){return r==="textarea"||r==="option"||r==="noscript"||typeof n.children=="string"||typeof n.children=="number"||typeof n.dangerouslySetInnerHTML=="object"&&n.dangerouslySetInnerHTML!==null&&n.dangerouslySetInnerHTML.__html!=null}var eu=typeof setTimeout=="function"?setTimeout:void 0,uo=typeof clearTimeout=="function"?clearTimeout:void 0;function As(r){r.nodeType===1?r.textContent="":r.nodeType===9&&(r=r.body,r!=null&&(r.textContent=""))}function En(r){for(;r!=null;r=r.nextSibling){var n=r.nodeType;if(n===1||n===3)break}return r}function tu(r){r=r.previousSibling;for(var n=0;r;){if(r.nodeType===8){var i=r.data;if(i==="$"||i==="$!"||i==="$?"){if(n===0)return r;n--}else i==="/$"&&n++}r=r.previousSibling}return null}var co=0;function Hc(r){return{$$typeof:Y,toString:r,valueOf:r}}var Vs=Math.random().toString(36).slice(2),nn="__reactFiber$"+Vs,Ms="__reactProps$"+Vs,Xn="__reactContainer$"+Vs,ru="__reactEvents$"+Vs;function Tn(r){var n=r[nn];if(n)return n;for(var i=r.parentNode;i;){if(n=i[Xn]||i[nn]){if(i=n.alternate,n.child!==null||i!==null&&i.child!==null)for(r=tu(r);r!==null;){if(i=r[nn])return i;r=tu(r)}return n}r=i,i=r.parentNode}return null}function Mi(r){return r=r[nn]||r[Xn],!r||r.tag!==5&&r.tag!==6&&r.tag!==13&&r.tag!==3?null:r}function Kn(r){if(r.tag===5||r.tag===6)return r.stateNode;throw Error(U(33))}function Is(r){return r[Ms]||null}function nu(r){var n=r[ru];return n===void 0&&(n=r[ru]=new Set),n}var fo=[],Zn=-1;function sn(r){return{current:r}}function dt(r){0>Zn||(r.current=fo[Zn],fo[Zn]=null,Zn--)}function xt(r,n){Zn++,fo[Zn]=r.current,r.current=n}var ln={},Yt=sn(ln),rr=sn(!1),$n=ln;function ei(r,n){var i=r.type.contextTypes;if(!i)return ln;var l=r.stateNode;if(l&&l.__reactInternalMemoizedUnmaskedChildContext===n)return l.__reactInternalMemoizedMaskedChildContext;var a={},m;for(m in i)a[m]=n[m];return l&&(r=r.stateNode,r.__reactInternalMemoizedUnmaskedChildContext=n,r.__reactInternalMemoizedMaskedChildContext=a),a}function nr(r){return r=r.childContextTypes,r!=null}function Bs(){dt(rr),dt(Yt)}function iu(r,n,i){if(Yt.current!==ln)throw Error(U(168));xt(Yt,n),xt(rr,i)}function su(r,n,i){var l=r.stateNode;if(r=n.childContextTypes,typeof l.getChildContext!="function")return i;l=l.getChildContext();for(var a in l)if(!(a in r))throw Error(U(108,ue(n)||"Unknown",a));return pe({},i,l)}function Fs(r){return r=(r=r.stateNode)&&r.__reactInternalMemoizedMergedChildContext||ln,$n=Yt.current,xt(Yt,r),xt(rr,rr.current),!0}function lu(r,n,i){var l=r.stateNode;if(!l)throw Error(U(169));i?(r=su(r,n,$n),l.__reactInternalMemoizedMergedChildContext=r,dt(rr),dt(Yt),xt(Yt,r)):dt(rr),xt(rr,i)}var mo=null,Cn=null,qc=oe.unstable_runWithPriority,He=oe.unstable_scheduleCallback,Pn=oe.unstable_cancelCallback,Gc=oe.unstable_shouldYield,ou=oe.unstable_requestPaint,po=oe.unstable_now,Yc=oe.unstable_getCurrentPriorityLevel,Ds=oe.unstable_ImmediatePriority,au=oe.unstable_UserBlockingPriority,uu=oe.unstable_NormalPriority,ho=oe.unstable_LowPriority,cu=oe.unstable_IdlePriority,zs={},Jc=ou!==void 0?ou:function(){},Br=null,Ii=null,yo=!1,fu=po(),It=1e4>fu?po:function(){return po()-fu};function on(){switch(Yc()){case Ds:return 99;case au:return 98;case uu:return 97;case ho:return 96;case cu:return 95;default:throw Error(U(332))}}function mu(r){switch(r){case 99:return Ds;case 98:return au;case 97:return uu;case 96:return ho;case 95:return cu;default:throw Error(U(332))}}function On(r,n){return r=mu(r),qc(r,n)}function Bi(r,n,i){return r=mu(r),He(r,n,i)}function Rr(){if(Ii!==null){var r=Ii;Ii=null,Pn(r)}pu()}function pu(){if(!yo&&Br!==null){yo=!0;var r=0;try{var n=Br;On(99,function(){for(;r<n.length;r++){var i=n[r];do i=i(!0);while(i!==null)}}),Br=null}catch(i){throw Br!==null&&(Br=Br.slice(r+1)),He(Ds,Rr),i}finally{yo=!1}}}var Qc=At.ReactCurrentBatchConfig;function Tr(r,n){if(r&&r.defaultProps){n=pe({},n),r=r.defaultProps;for(var i in r)n[i]===void 0&&(n[i]=r[i]);return n}return n}var Ws=sn(null),Fi=null,Ln=null,Di=null;function Us(){Di=Ln=Fi=null}function vo(r){var n=Ws.current;dt(Ws),r.type._context._currentValue=n}function go(r,n){for(;r!==null;){var i=r.alternate;if((r.childLanes&n)===n){if(i===null||(i.childLanes&n)===n)break;i.childLanes|=n}else r.childLanes|=n,i!==null&&(i.childLanes|=n);r=r.return}}function jn(r,n){Fi=r,Di=Ln=null,r=r.dependencies,r!==null&&r.firstContext!==null&&((r.lanes&n)!==0&&(dr=!0),r.firstContext=null)}function pr(r,n){if(Di!==r&&n!==!1&&n!==0)if((typeof n!="number"||n===1073741823)&&(Di=r,n=1073741823),n={context:r,observedBits:n,next:null},Ln===null){if(Fi===null)throw Error(U(308));Ln=n,Fi.dependencies={lanes:0,firstContext:n,responders:null}}else Ln=Ln.next=n;return r._currentValue}var Fr=!1;function bo(r){r.updateQueue={baseState:r.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null},effects:null}}function zi(r,n){r=r.updateQueue,n.updateQueue===r&&(n.updateQueue={baseState:r.baseState,firstBaseUpdate:r.firstBaseUpdate,lastBaseUpdate:r.lastBaseUpdate,shared:r.shared,effects:r.effects})}function Bt(r,n){return{eventTime:r,lane:n,tag:0,payload:null,callback:null,next:null}}function an(r,n){if(r=r.updateQueue,r!==null){r=r.shared;var i=r.pending;i===null?n.next=n:(n.next=i.next,i.next=n),r.pending=n}}function Rn(r,n){var i=r.updateQueue,l=r.alternate;if(l!==null&&(l=l.updateQueue,i===l)){var a=null,m=null;if(i=i.firstBaseUpdate,i!==null){do{var y={eventTime:i.eventTime,lane:i.lane,tag:i.tag,payload:i.payload,callback:i.callback,next:null};m===null?a=m=y:m=m.next=y,i=i.next}while(i!==null);m===null?a=m=n:m=m.next=n}else a=m=n;i={baseState:l.baseState,firstBaseUpdate:a,lastBaseUpdate:m,shared:l.shared,effects:l.effects},r.updateQueue=i;return}r=i.lastBaseUpdate,r===null?i.firstBaseUpdate=n:r.next=n,i.lastBaseUpdate=n}function ti(r,n,i,l){var a=r.updateQueue;Fr=!1;var m=a.firstBaseUpdate,y=a.lastBaseUpdate,g=a.shared.pending;if(g!==null){a.shared.pending=null;var T=g,B=T.next;T.next=null,y===null?m=B:y.next=B,y=T;var de=r.alternate;if(de!==null){de=de.updateQueue;var Ve=de.lastBaseUpdate;Ve!==y&&(Ve===null?de.firstBaseUpdate=B:Ve.next=B,de.lastBaseUpdate=T)}}if(m!==null){Ve=a.baseState,y=0,de=B=T=null;do{g=m.lane;var Z=m.eventTime;if((l&g)===g){de!==null&&(de=de.next={eventTime:Z,lane:0,tag:m.tag,payload:m.payload,callback:m.callback,next:null});e:{var Ee=r,Ae=m;switch(g=n,Z=i,Ae.tag){case 1:if(Ee=Ae.payload,typeof Ee=="function"){Ve=Ee.call(Z,Ve,g);break e}Ve=Ee;break e;case 3:Ee.flags=Ee.flags&-4097|64;case 0:if(Ee=Ae.payload,g=typeof Ee=="function"?Ee.call(Z,Ve,g):Ee,g==null)break e;Ve=pe({},Ve,g);break e;case 2:Fr=!0}}m.callback!==null&&(r.flags|=32,g=a.effects,g===null?a.effects=[m]:g.push(m))}else Z={eventTime:Z,lane:g,tag:m.tag,payload:m.payload,callback:m.callback,next:null},de===null?(B=de=Z,T=Ve):de=de.next=Z,y|=g;if(m=m.next,m===null){if(g=a.shared.pending,g===null)break;m=g.next,g.next=null,a.lastBaseUpdate=g,a.shared.pending=null}}while(1);de===null&&(T=Ve),a.baseState=T,a.firstBaseUpdate=B,a.lastBaseUpdate=de,ui|=y,r.lanes=y,r.memoizedState=Ve}}function Wi(r,n,i){if(r=n.effects,n.effects=null,r!==null)for(n=0;n<r.length;n++){var l=r[n],a=l.callback;if(a!==null){if(l.callback=null,l=i,typeof a!="function")throw Error(U(191,a));a.call(l)}}}var hu=new ke.Component().refs;function Ft(r,n,i,l){n=r.memoizedState,i=i(l,n),i=i==null?n:pe({},n,i),r.memoizedState=i,r.lanes===0&&(r.updateQueue.baseState=i)}var Hs={isMounted:function(r){return(r=r._reactInternals)?zn(r)===r:!1},enqueueSetState:function(r,n,i){r=r._reactInternals;var l=ar(),a=pn(r),m=Bt(l,a);m.payload=n,i!=null&&(m.callback=i),an(r,m),hn(r,a,l)},enqueueReplaceState:function(r,n,i){r=r._reactInternals;var l=ar(),a=pn(r),m=Bt(l,a);m.tag=1,m.payload=n,i!=null&&(m.callback=i),an(r,m),hn(r,a,l)},enqueueForceUpdate:function(r,n){r=r._reactInternals;var i=ar(),l=pn(r),a=Bt(i,l);a.tag=2,n!=null&&(a.callback=n),an(r,a),hn(r,l,i)}};function qs(r,n,i,l,a,m,y){return r=r.stateNode,typeof r.shouldComponentUpdate=="function"?r.shouldComponentUpdate(l,m,y):n.prototype&&n.prototype.isPureReactComponent?!Oi(i,l)||!Oi(a,m):!0}function wo(r,n,i){var l=!1,a=ln,m=n.contextType;return typeof m=="object"&&m!==null?m=pr(m):(a=nr(n)?$n:Yt.current,l=n.contextTypes,m=(l=l!=null)?ei(r,a):ln),n=new n(i,m),r.memoizedState=n.state!==null&&n.state!==void 0?n.state:null,n.updater=Hs,r.stateNode=n,n._reactInternals=r,l&&(r=r.stateNode,r.__reactInternalMemoizedUnmaskedChildContext=a,r.__reactInternalMemoizedMaskedChildContext=m),n}function _o(r,n,i,l){r=n.state,typeof n.componentWillReceiveProps=="function"&&n.componentWillReceiveProps(i,l),typeof n.UNSAFE_componentWillReceiveProps=="function"&&n.UNSAFE_componentWillReceiveProps(i,l),n.state!==r&&Hs.enqueueReplaceState(n,n.state,null)}function Gs(r,n,i,l){var a=r.stateNode;a.props=i,a.state=r.memoizedState,a.refs=hu,bo(r);var m=n.contextType;typeof m=="object"&&m!==null?a.context=pr(m):(m=nr(n)?$n:Yt.current,a.context=ei(r,m)),ti(r,i,a,l),a.state=r.memoizedState,m=n.getDerivedStateFromProps,typeof m=="function"&&(Ft(r,n,m,i),a.state=r.memoizedState),typeof n.getDerivedStateFromProps=="function"||typeof a.getSnapshotBeforeUpdate=="function"||typeof a.UNSAFE_componentWillMount!="function"&&typeof a.componentWillMount!="function"||(n=a.state,typeof a.componentWillMount=="function"&&a.componentWillMount(),typeof a.UNSAFE_componentWillMount=="function"&&a.UNSAFE_componentWillMount(),n!==a.state&&Hs.enqueueReplaceState(a,a.state,null),ti(r,i,a,l),a.state=r.memoizedState),typeof a.componentDidMount=="function"&&(r.flags|=4)}var Ui=Array.isArray;function ri(r,n,i){if(r=i.ref,r!==null&&typeof r!="function"&&typeof r!="object"){if(i._owner){if(i=i._owner,i){if(i.tag!==1)throw Error(U(309));var l=i.stateNode}if(!l)throw Error(U(147,r));var a=""+r;return n!==null&&n.ref!==null&&typeof n.ref=="function"&&n.ref._stringRef===a?n.ref:(n=function(m){var y=l.refs;y===hu&&(y=l.refs={}),m===null?delete y[a]:y[a]=m},n._stringRef=a,n)}if(typeof r!="string")throw Error(U(284));if(!i._owner)throw Error(U(290,r))}return r}function Hi(r,n){if(r.type!=="textarea")throw Error(U(31,Object.prototype.toString.call(n)==="[object Object]"?"object with keys {"+Object.keys(n).join(", ")+"}":n))}function du(r){function n(N,C){if(r){var L=N.lastEffect;L!==null?(L.nextEffect=C,N.lastEffect=C):N.firstEffect=N.lastEffect=C,C.nextEffect=null,C.flags=8}}function i(N,C){if(!r)return null;for(;C!==null;)n(N,C),C=C.sibling;return null}function l(N,C){for(N=new Map;C!==null;)C.key!==null?N.set(C.key,C):N.set(C.index,C),C=C.sibling;return N}function a(N,C){return N=Lr(N,C),N.index=0,N.sibling=null,N}function m(N,C,L){return N.index=L,r?(L=N.alternate,L!==null?(L=L.index,L<C?(N.flags=2,C):L):(N.flags=2,C)):C}function y(N){return r&&N.alternate===null&&(N.flags=2),N}function g(N,C,L,q){return C===null||C.tag!==6?(C=Xo(L,N.mode,q),C.return=N,C):(C=a(C,L),C.return=N,C)}function T(N,C,L,q){return C!==null&&C.elementType===L.type?(q=a(C,L.props),q.ref=ri(N,C,L),q.return=N,q):(q=dl(L.type,L.key,L.props,null,N.mode,q),q.ref=ri(N,C,L),q.return=N,q)}function B(N,C,L,q){return C===null||C.tag!==4||C.stateNode.containerInfo!==L.containerInfo||C.stateNode.implementation!==L.implementation?(C=yl(L,N.mode,q),C.return=N,C):(C=a(C,L.children||[]),C.return=N,C)}function de(N,C,L,q,Q){return C===null||C.tag!==7?(C=yn(L,N.mode,q,Q),C.return=N,C):(C=a(C,L),C.return=N,C)}function Ve(N,C,L){if(typeof C=="string"||typeof C=="number")return C=Xo(""+C,N.mode,L),C.return=N,C;if(typeof C=="object"&&C!==null){switch(C.$$typeof){case Zt:return L=dl(C.type,C.key,C.props,null,N.mode,L),L.ref=ri(N,null,C),L.return=N,L;case gt:return C=yl(C,N.mode,L),C.return=N,C}if(Ui(C)||Ue(C))return C=yn(C,N.mode,L,null),C.return=N,C;Hi(N,C)}return null}function Z(N,C,L,q){var Q=C!==null?C.key:null;if(typeof L=="string"||typeof L=="number")return Q!==null?null:g(N,C,""+L,q);if(typeof L=="object"&&L!==null){switch(L.$$typeof){case Zt:return L.key===Q?L.type===Tt?de(N,C,L.props.children,q,Q):T(N,C,L,q):null;case gt:return L.key===Q?B(N,C,L,q):null}if(Ui(L)||Ue(L))return Q!==null?null:de(N,C,L,q,null);Hi(N,L)}return null}function Ee(N,C,L,q,Q){if(typeof q=="string"||typeof q=="number")return N=N.get(L)||null,g(C,N,""+q,Q);if(typeof q=="object"&&q!==null){switch(q.$$typeof){case Zt:return N=N.get(q.key===null?L:q.key)||null,q.type===Tt?de(C,N,q.props.children,Q,q.key):T(C,N,q,Q);case gt:return N=N.get(q.key===null?L:q.key)||null,B(C,N,q,Q)}if(Ui(q)||Ue(q))return N=N.get(L)||null,de(C,N,q,Q,null);Hi(C,q)}return null}function Ae(N,C,L,q){for(var Q=null,Me=null,xe=C,Ie=C=0,We=null;xe!==null&&Ie<L.length;Ie++){xe.index>Ie?(We=xe,xe=null):We=xe.sibling;var Be=Z(N,xe,L[Ie],q);if(Be===null){xe===null&&(xe=We);break}r&&xe&&Be.alternate===null&&n(N,xe),C=m(Be,C,Ie),Me===null?Q=Be:Me.sibling=Be,Me=Be,xe=We}if(Ie===L.length)return i(N,xe),Q;if(xe===null){for(;Ie<L.length;Ie++)xe=Ve(N,L[Ie],q),xe!==null&&(C=m(xe,C,Ie),Me===null?Q=xe:Me.sibling=xe,Me=xe);return Q}for(xe=l(N,xe);Ie<L.length;Ie++)We=Ee(xe,N,Ie,L[Ie],q),We!==null&&(r&&We.alternate!==null&&xe.delete(We.key===null?Ie:We.key),C=m(We,C,Ie),Me===null?Q=We:Me.sibling=We,Me=We);return r&&xe.forEach(function(gn){return n(N,gn)}),Q}function je(N,C,L,q){var Q=Ue(L);if(typeof Q!="function")throw Error(U(150));if(L=Q.call(L),L==null)throw Error(U(151));for(var Me=Q=null,xe=C,Ie=C=0,We=null,Be=L.next();xe!==null&&!Be.done;Ie++,Be=L.next()){xe.index>Ie?(We=xe,xe=null):We=xe.sibling;var gn=Z(N,xe,Be.value,q);if(gn===null){xe===null&&(xe=We);break}r&&xe&&gn.alternate===null&&n(N,xe),C=m(gn,C,Ie),Me===null?Q=gn:Me.sibling=gn,Me=gn,xe=We}if(Be.done)return i(N,xe),Q;if(xe===null){for(;!Be.done;Ie++,Be=L.next())Be=Ve(N,Be.value,q),Be!==null&&(C=m(Be,C,Ie),Me===null?Q=Be:Me.sibling=Be,Me=Be);return Q}for(xe=l(N,xe);!Be.done;Ie++,Be=L.next())Be=Ee(xe,N,Ie,Be.value,q),Be!==null&&(r&&Be.alternate!==null&&xe.delete(Be.key===null?Ie:Be.key),C=m(Be,C,Ie),Me===null?Q=Be:Me.sibling=Be,Me=Be);return r&&xe.forEach(function(df){return n(N,df)}),Q}return function(N,C,L,q){var Q=typeof L=="object"&&L!==null&&L.type===Tt&&L.key===null;Q&&(L=L.props.children);var Me=typeof L=="object"&&L!==null;if(Me)switch(L.$$typeof){case Zt:e:{for(Me=L.key,Q=C;Q!==null;){if(Q.key===Me){switch(Q.tag){case 7:if(L.type===Tt){i(N,Q.sibling),C=a(Q,L.props.children),C.return=N,N=C;break e}break;default:if(Q.elementType===L.type){i(N,Q.sibling),C=a(Q,L.props),C.ref=ri(N,Q,L),C.return=N,N=C;break e}}i(N,Q);break}else n(N,Q);Q=Q.sibling}L.type===Tt?(C=yn(L.props.children,N.mode,q,L.key),C.return=N,N=C):(q=dl(L.type,L.key,L.props,null,N.mode,q),q.ref=ri(N,C,L),q.return=N,N=q)}return y(N);case gt:e:{for(Q=L.key;C!==null;){if(C.key===Q)if(C.tag===4&&C.stateNode.containerInfo===L.containerInfo&&C.stateNode.implementation===L.implementation){i(N,C.sibling),C=a(C,L.children||[]),C.return=N,N=C;break e}else{i(N,C);break}else n(N,C);C=C.sibling}C=yl(L,N.mode,q),C.return=N,N=C}return y(N)}if(typeof L=="string"||typeof L=="number")return L=""+L,C!==null&&C.tag===6?(i(N,C.sibling),C=a(C,L),C.return=N,N=C):(i(N,C),C=Xo(L,N.mode,q),C.return=N,N=C),y(N);if(Ui(L))return Ae(N,C,L,q);if(Ue(L))return je(N,C,L,q);if(Me&&Hi(N,L),typeof L=="undefined"&&!Q)switch(N.tag){case 1:case 22:case 0:case 11:case 15:throw Error(U(152,ue(N.type)||"Component"))}return i(N,C)}}var Ys=du(!0),yu=du(!1),qi={},Nr=sn(qi),Gi=sn(qi),$r=sn(qi);function Dr(r){if(r===qi)throw Error(U(174));return r}function Yi(r,n){switch(xt($r,n),xt(Gi,r),xt(Nr,qi),r=n.nodeType,r){case 9:case 11:n=(n=n.documentElement)?n.namespaceURI:ma(null,"");break;default:r=r===8?n.parentNode:n,n=r.namespaceURI||null,r=r.tagName,n=ma(n,r)}dt(Nr),xt(Nr,n)}function un(){dt(Nr),dt(Gi),dt($r)}function Js(r){Dr($r.current);var n=Dr(Nr.current),i=ma(n,r.type);n!==i&&(xt(Gi,r),xt(Nr,i))}function xo(r){Gi.current===r&&(dt(Nr),dt(Gi))}var St=sn(0);function Qs(r){for(var n=r;n!==null;){if(n.tag===13){var i=n.memoizedState;if(i!==null&&(i=i.dehydrated,i===null||i.data==="$?"||i.data==="$!"))return n}else if(n.tag===19&&n.memoizedProps.revealOrder!==void 0){if((n.flags&64)!==0)return n}else if(n.child!==null){n.child.return=n,n=n.child;continue}if(n===r)break;for(;n.sibling===null;){if(n.return===null||n.return===r)return null;n=n.return}n.sibling.return=n.return,n=n.sibling}return null}var Cr=null,cn=null,Ar=!1;function vu(r,n){var i=vr(5,null,null,0);i.elementType="DELETED",i.type="DELETED",i.stateNode=n,i.return=r,i.flags=8,r.lastEffect!==null?(r.lastEffect.nextEffect=i,r.lastEffect=i):r.firstEffect=r.lastEffect=i}function gu(r,n){switch(r.tag){case 5:var i=r.type;return n=n.nodeType!==1||i.toLowerCase()!==n.nodeName.toLowerCase()?null:n,n!==null?(r.stateNode=n,!0):!1;case 6:return n=r.pendingProps===""||n.nodeType!==3?null:n,n!==null?(r.stateNode=n,!0):!1;case 13:return!1;default:return!1}}function So(r){if(Ar){var n=cn;if(n){var i=n;if(!gu(r,n)){if(n=En(i.nextSibling),!n||!gu(r,n)){r.flags=r.flags&-1025|2,Ar=!1,Cr=r;return}vu(Cr,i)}Cr=r,cn=En(n.firstChild)}else r.flags=r.flags&-1025|2,Ar=!1,Cr=r}}function bu(r){for(r=r.return;r!==null&&r.tag!==5&&r.tag!==3&&r.tag!==13;)r=r.return;Cr=r}function Ji(r){if(r!==Cr)return!1;if(!Ar)return bu(r),Ar=!0,!1;var n=r.type;if(r.tag!==5||n!=="head"&&n!=="body"&&!Vi(n,r.memoizedProps))for(n=cn;n;)vu(r,n),n=En(n.nextSibling);if(bu(r),r.tag===13){if(r=r.memoizedState,r=r!==null?r.dehydrated:null,!r)throw Error(U(317));e:{for(r=r.nextSibling,n=0;r;){if(r.nodeType===8){var i=r.data;if(i==="/$"){if(n===0){cn=En(r.nextSibling);break e}n--}else i!=="$"&&i!=="$!"&&i!=="$?"||n++}r=r.nextSibling}cn=null}}else cn=Cr?En(r.stateNode.nextSibling):null;return!0}function Xs(){cn=Cr=null,Ar=!1}var ni=[];function Ks(){for(var r=0;r<ni.length;r++)ni[r]._workInProgressVersionPrimary=null;ni.length=0}var Nn=At.ReactCurrentDispatcher,hr=At.ReactCurrentBatchConfig,Qi=0,Pt=null,Jt=null,Dt=null,Zs=!1,Xi=!1;function ir(){throw Error(U(321))}function el(r,n){if(n===null)return!1;for(var i=0;i<n.length&&i<r.length;i++)if(!mr(r[i],n[i]))return!1;return!0}function ko(r,n,i,l,a,m){if(Qi=m,Pt=n,n.memoizedState=null,n.updateQueue=null,n.lanes=0,Nn.current=r===null||r.memoizedState===null?Eu:Tu,r=i(l,a),Xi){m=0;do{if(Xi=!1,!(25>m))throw Error(U(301));m+=1,Dt=Jt=null,n.updateQueue=null,Nn.current=$u,r=i(l,a)}while(Xi)}if(Nn.current=rs,n=Jt!==null&&Jt.next!==null,Qi=0,Dt=Jt=Pt=null,Zs=!1,n)throw Error(U(300));return r}function An(){var r={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return Dt===null?Pt.memoizedState=Dt=r:Dt=Dt.next=r,Dt}function Vn(){if(Jt===null){var r=Pt.alternate;r=r!==null?r.memoizedState:null}else r=Jt.next;var n=Dt===null?Pt.memoizedState:Dt.next;if(n!==null)Dt=n,Jt=r;else{if(r===null)throw Error(U(310));Jt=r,r={memoizedState:Jt.memoizedState,baseState:Jt.baseState,baseQueue:Jt.baseQueue,queue:Jt.queue,next:null},Dt===null?Pt.memoizedState=Dt=r:Dt=Dt.next=r}return Dt}function Pr(r,n){return typeof n=="function"?n(r):n}function Ki(r){var n=Vn(),i=n.queue;if(i===null)throw Error(U(311));i.lastRenderedReducer=r;var l=Jt,a=l.baseQueue,m=i.pending;if(m!==null){if(a!==null){var y=a.next;a.next=m.next,m.next=y}l.baseQueue=a=m,i.pending=null}if(a!==null){a=a.next,l=l.baseState;var g=y=m=null,T=a;do{var B=T.lane;if((Qi&B)===B)g!==null&&(g=g.next={lane:0,action:T.action,eagerReducer:T.eagerReducer,eagerState:T.eagerState,next:null}),l=T.eagerReducer===r?T.eagerState:r(l,T.action);else{var de={lane:B,action:T.action,eagerReducer:T.eagerReducer,eagerState:T.eagerState,next:null};g===null?(y=g=de,m=l):g=g.next=de,Pt.lanes|=B,ui|=B}T=T.next}while(T!==null&&T!==a);g===null?m=l:g.next=y,mr(l,n.memoizedState)||(dr=!0),n.memoizedState=l,n.baseState=m,n.baseQueue=g,i.lastRenderedState=l}return[n.memoizedState,i.dispatch]}function ii(r){var n=Vn(),i=n.queue;if(i===null)throw Error(U(311));i.lastRenderedReducer=r;var l=i.dispatch,a=i.pending,m=n.memoizedState;if(a!==null){i.pending=null;var y=a=a.next;do m=r(m,y.action),y=y.next;while(y!==a);mr(m,n.memoizedState)||(dr=!0),n.memoizedState=m,n.baseQueue===null&&(n.baseState=m),i.lastRenderedState=m}return[m,l]}function wu(r,n,i){var l=n._getVersion;l=l(n._source);var a=n._workInProgressVersionPrimary;if(a!==null?r=a===l:(r=r.mutableReadLanes,(r=(Qi&r)===r)&&(n._workInProgressVersionPrimary=l,ni.push(n))),r)return i(n._source);throw ni.push(n),Error(U(350))}function Eo(r,n,i,l){var a=Ht;if(a===null)throw Error(U(349));var m=n._getVersion,y=m(n._source),g=Nn.current,T=g.useState(function(){return wu(a,n,i)}),B=T[1],de=T[0];T=Dt;var Ve=r.memoizedState,Z=Ve.refs,Ee=Z.getSnapshot,Ae=Ve.source;Ve=Ve.subscribe;var je=Pt;return r.memoizedState={refs:Z,source:n,subscribe:l},g.useEffect(function(){Z.getSnapshot=i,Z.setSnapshot=B;var N=m(n._source);if(!mr(y,N)){N=i(n._source),mr(de,N)||(B(N),N=pn(je),a.mutableReadLanes|=N&a.pendingLanes),N=a.mutableReadLanes,a.entangledLanes|=N;for(var C=a.entanglements,L=N;0<L;){var q=31-_n(L),Q=1<<q;C[q]|=N,L&=~Q}}},[i,n,l]),g.useEffect(function(){return l(n._source,function(){var N=Z.getSnapshot,C=Z.setSnapshot;try{C(N(n._source));var L=pn(je);a.mutableReadLanes|=L&a.pendingLanes}catch(q){C(function(){throw q})}})},[n,l]),mr(Ee,i)&&mr(Ae,n)&&mr(Ve,l)||(r={pending:null,dispatch:null,lastRenderedReducer:Pr,lastRenderedState:de},r.dispatch=B=ts.bind(null,Pt,r),T.queue=r,T.baseQueue=null,de=wu(a,n,i),T.memoizedState=T.baseState=de),de}function _u(r,n,i){var l=Vn();return Eo(l,r,n,i)}function Zi(r){var n=An();return typeof r=="function"&&(r=r()),n.memoizedState=n.baseState=r,r=n.queue={pending:null,dispatch:null,lastRenderedReducer:Pr,lastRenderedState:r},r=r.dispatch=ts.bind(null,Pt,r),[n.memoizedState,r]}function tl(r,n,i,l){return r={tag:r,create:n,destroy:i,deps:l,next:null},n=Pt.updateQueue,n===null?(n={lastEffect:null},Pt.updateQueue=n,n.lastEffect=r.next=r):(i=n.lastEffect,i===null?n.lastEffect=r.next=r:(l=i.next,i.next=r,r.next=l,n.lastEffect=r)),r}function xu(r){var n=An();return r={current:r},n.memoizedState=r}function rl(){return Vn().memoizedState}function To(r,n,i,l){var a=An();Pt.flags|=r,a.memoizedState=tl(1|n,i,void 0,l===void 0?null:l)}function $o(r,n,i,l){var a=Vn();l=l===void 0?null:l;var m=void 0;if(Jt!==null){var y=Jt.memoizedState;if(m=y.destroy,l!==null&&el(l,y.deps)){tl(n,i,m,l);return}}Pt.flags|=r,a.memoizedState=tl(1|n,i,m,l)}function es(r,n){return To(516,4,r,n)}function sr(r,n){return $o(516,4,r,n)}function Su(r,n){return $o(4,2,r,n)}function Mn(r,n){if(typeof n=="function")return r=r(),n(r),function(){n(null)};if(n!=null)return r=r(),n.current=r,function(){n.current=null}}function Co(r,n,i){return i=i!=null?i.concat([r]):null,$o(4,2,Mn.bind(null,n,r),i)}function si(){}function ku(r,n){var i=Vn();n=n===void 0?null:n;var l=i.memoizedState;return l!==null&&n!==null&&el(n,l[1])?l[0]:(i.memoizedState=[r,n],r)}function Qt(r,n){var i=Vn();n=n===void 0?null:n;var l=i.memoizedState;return l!==null&&n!==null&&el(n,l[1])?l[0]:(r=r(),i.memoizedState=[r,n],r)}function Xc(r,n){var i=on();On(98>i?98:i,function(){r(!0)}),On(97<i?97:i,function(){var l=hr.transition;hr.transition=1;try{r(!1),n()}finally{hr.transition=l}})}function ts(r,n,i){var l=ar(),a=pn(r),m={lane:a,action:i,eagerReducer:null,eagerState:null,next:null},y=n.pending;if(y===null?m.next=m:(m.next=y.next,y.next=m),n.pending=m,y=r.alternate,r===Pt||y!==null&&y===Pt)Xi=Zs=!0;else{if(r.lanes===0&&(y===null||y.lanes===0)&&(y=n.lastRenderedReducer,y!==null))try{var g=n.lastRenderedState,T=y(g,i);if(m.eagerReducer=y,m.eagerState=T,mr(T,g))return}catch(B){}finally{}hn(r,a,l)}}var rs={readContext:pr,useCallback:ir,useContext:ir,useEffect:ir,useImperativeHandle:ir,useLayoutEffect:ir,useMemo:ir,useReducer:ir,useRef:ir,useState:ir,useDebugValue:ir,useDeferredValue:ir,useTransition:ir,useMutableSource:ir,useOpaqueIdentifier:ir,unstable_isNewReconciler:!1},Eu={readContext:pr,useCallback:function(r,n){return An().memoizedState=[r,n===void 0?null:n],r},useContext:pr,useEffect:es,useImperativeHandle:function(r,n,i){return i=i!=null?i.concat([r]):null,To(4,2,Mn.bind(null,n,r),i)},useLayoutEffect:function(r,n){return To(4,2,r,n)},useMemo:function(r,n){var i=An();return n=n===void 0?null:n,r=r(),i.memoizedState=[r,n],r},useReducer:function(r,n,i){var l=An();return n=i!==void 0?i(n):n,l.memoizedState=l.baseState=n,r=l.queue={pending:null,dispatch:null,lastRenderedReducer:r,lastRenderedState:n},r=r.dispatch=ts.bind(null,Pt,r),[l.memoizedState,r]},useRef:xu,useState:Zi,useDebugValue:si,useDeferredValue:function(r){var n=Zi(r),i=n[0],l=n[1];return es(function(){var a=hr.transition;hr.transition=1;try{l(r)}finally{hr.transition=a}},[r]),i},useTransition:function(){var r=Zi(!1),n=r[0];return r=Xc.bind(null,r[1]),xu(r),[r,n]},useMutableSource:function(r,n,i){var l=An();return l.memoizedState={refs:{getSnapshot:n,setSnapshot:null},source:r,subscribe:i},Eo(l,r,n,i)},useOpaqueIdentifier:function(){if(Ar){var r=!1,n=Hc(function(){throw r||(r=!0,i("r:"+(co++).toString(36))),Error(U(355))}),i=Zi(n)[1];return(Pt.mode&2)===0&&(Pt.flags|=516,tl(5,function(){i("r:"+(co++).toString(36))},void 0,null)),n}return n="r:"+(co++).toString(36),Zi(n),n},unstable_isNewReconciler:!1},Tu={readContext:pr,useCallback:ku,useContext:pr,useEffect:sr,useImperativeHandle:Co,useLayoutEffect:Su,useMemo:Qt,useReducer:Ki,useRef:rl,useState:function(){return Ki(Pr)},useDebugValue:si,useDeferredValue:function(r){var n=Ki(Pr),i=n[0],l=n[1];return sr(function(){var a=hr.transition;hr.transition=1;try{l(r)}finally{hr.transition=a}},[r]),i},useTransition:function(){var r=Ki(Pr)[0];return[rl().current,r]},useMutableSource:_u,useOpaqueIdentifier:function(){return Ki(Pr)[0]},unstable_isNewReconciler:!1},$u={readContext:pr,useCallback:ku,useContext:pr,useEffect:sr,useImperativeHandle:Co,useLayoutEffect:Su,useMemo:Qt,useReducer:ii,useRef:rl,useState:function(){return ii(Pr)},useDebugValue:si,useDeferredValue:function(r){var n=ii(Pr),i=n[0],l=n[1];return sr(function(){var a=hr.transition;hr.transition=1;try{l(r)}finally{hr.transition=a}},[r]),i},useTransition:function(){var r=ii(Pr)[0];return[rl().current,r]},useMutableSource:_u,useOpaqueIdentifier:function(){return ii(Pr)[0]},unstable_isNewReconciler:!1},Cu=At.ReactCurrentOwner,dr=!1;function lr(r,n,i,l){n.child=r===null?yu(n,null,i,l):Ys(n,r.child,i,l)}function Pu(r,n,i,l,a){i=i.render;var m=n.ref;return jn(n,a),l=ko(r,n,i,l,m,a),r!==null&&!dr?(n.updateQueue=r.updateQueue,n.flags&=-517,r.lanes&=~a,Wr(r,n,a)):(n.flags|=1,lr(r,n,l,a),n.child)}function Ou(r,n,i,l,a,m){if(r===null){var y=i.type;return typeof y=="function"&&!Jo(y)&&y.defaultProps===void 0&&i.compare===null&&i.defaultProps===void 0?(n.tag=15,n.type=y,Lu(r,n,y,l,a,m)):(r=dl(i.type,null,l,n,n.mode,m),r.ref=n.ref,r.return=n,n.child=r)}return y=r.child,(a&m)===0&&(a=y.memoizedProps,i=i.compare,i=i!==null?i:Oi,i(a,l)&&r.ref===n.ref)?Wr(r,n,m):(n.flags|=1,r=Lr(y,l),r.ref=n.ref,r.return=n,n.child=r)}function Lu(r,n,i,l,a,m){if(r!==null&&Oi(r.memoizedProps,l)&&r.ref===n.ref)if(dr=!1,(m&a)!==0)(r.flags&16384)!==0&&(dr=!0);else return n.lanes=r.lanes,Wr(r,n,m);return zr(r,n,i,l,m)}function Po(r,n,i){var l=n.pendingProps,a=l.children,m=r!==null?r.memoizedState:null;if(l.mode==="hidden"||l.mode==="unstable-defer-without-hiding")if((n.mode&4)===0)n.memoizedState={baseLanes:0},hl(n,i);else if((i&1073741824)!==0)n.memoizedState={baseLanes:0},hl(n,m!==null?m.baseLanes:i);else return r=m!==null?m.baseLanes|i:i,n.lanes=n.childLanes=1073741824,n.memoizedState={baseLanes:r},hl(n,r),null;else m!==null?(l=m.baseLanes|i,n.memoizedState=null):l=i,hl(n,l);return lr(r,n,a,i),n.child}function ju(r,n){var i=n.ref;(r===null&&i!==null||r!==null&&r.ref!==i)&&(n.flags|=128)}function zr(r,n,i,l,a){var m=nr(i)?$n:Yt.current;return m=ei(n,m),jn(n,a),i=ko(r,n,i,l,m,a),r!==null&&!dr?(n.updateQueue=r.updateQueue,n.flags&=-517,r.lanes&=~a,Wr(r,n,a)):(n.flags|=1,lr(r,n,i,a),n.child)}function nl(r,n,i,l,a){if(nr(i)){var m=!0;Fs(n)}else m=!1;if(jn(n,a),n.stateNode===null)r!==null&&(r.alternate=null,n.alternate=null,n.flags|=2),wo(n,i,l),Gs(n,i,l,a),l=!0;else if(r===null){var y=n.stateNode,g=n.memoizedProps;y.props=g;var T=y.context,B=i.contextType;typeof B=="object"&&B!==null?B=pr(B):(B=nr(i)?$n:Yt.current,B=ei(n,B));var de=i.getDerivedStateFromProps,Ve=typeof de=="function"||typeof y.getSnapshotBeforeUpdate=="function";Ve||typeof y.UNSAFE_componentWillReceiveProps!="function"&&typeof y.componentWillReceiveProps!="function"||(g!==l||T!==B)&&_o(n,y,l,B),Fr=!1;var Z=n.memoizedState;y.state=Z,ti(n,l,y,a),T=n.memoizedState,g!==l||Z!==T||rr.current||Fr?(typeof de=="function"&&(Ft(n,i,de,l),T=n.memoizedState),(g=Fr||qs(n,i,g,l,Z,T,B))?(Ve||typeof y.UNSAFE_componentWillMount!="function"&&typeof y.componentWillMount!="function"||(typeof y.componentWillMount=="function"&&y.componentWillMount(),typeof y.UNSAFE_componentWillMount=="function"&&y.UNSAFE_componentWillMount()),typeof y.componentDidMount=="function"&&(n.flags|=4)):(typeof y.componentDidMount=="function"&&(n.flags|=4),n.memoizedProps=l,n.memoizedState=T),y.props=l,y.state=T,y.context=B,l=g):(typeof y.componentDidMount=="function"&&(n.flags|=4),l=!1)}else{y=n.stateNode,zi(r,n),g=n.memoizedProps,B=n.type===n.elementType?g:Tr(n.type,g),y.props=B,Ve=n.pendingProps,Z=y.context,T=i.contextType,typeof T=="object"&&T!==null?T=pr(T):(T=nr(i)?$n:Yt.current,T=ei(n,T));var Ee=i.getDerivedStateFromProps;(de=typeof Ee=="function"||typeof y.getSnapshotBeforeUpdate=="function")||typeof y.UNSAFE_componentWillReceiveProps!="function"&&typeof y.componentWillReceiveProps!="function"||(g!==Ve||Z!==T)&&_o(n,y,l,T),Fr=!1,Z=n.memoizedState,y.state=Z,ti(n,l,y,a);var Ae=n.memoizedState;g!==Ve||Z!==Ae||rr.current||Fr?(typeof Ee=="function"&&(Ft(n,i,Ee,l),Ae=n.memoizedState),(B=Fr||qs(n,i,B,l,Z,Ae,T))?(de||typeof y.UNSAFE_componentWillUpdate!="function"&&typeof y.componentWillUpdate!="function"||(typeof y.componentWillUpdate=="function"&&y.componentWillUpdate(l,Ae,T),typeof y.UNSAFE_componentWillUpdate=="function"&&y.UNSAFE_componentWillUpdate(l,Ae,T)),typeof y.componentDidUpdate=="function"&&(n.flags|=4),typeof y.getSnapshotBeforeUpdate=="function"&&(n.flags|=256)):(typeof y.componentDidUpdate!="function"||g===r.memoizedProps&&Z===r.memoizedState||(n.flags|=4),typeof y.getSnapshotBeforeUpdate!="function"||g===r.memoizedProps&&Z===r.memoizedState||(n.flags|=256),n.memoizedProps=l,n.memoizedState=Ae),y.props=l,y.state=Ae,y.context=T,l=B):(typeof y.componentDidUpdate!="function"||g===r.memoizedProps&&Z===r.memoizedState||(n.flags|=4),typeof y.getSnapshotBeforeUpdate!="function"||g===r.memoizedProps&&Z===r.memoizedState||(n.flags|=256),l=!1)}return ns(r,n,i,l,m,a)}function ns(r,n,i,l,a,m){ju(r,n);var y=(n.flags&64)!==0;if(!l&&!y)return a&&lu(n,i,!1),Wr(r,n,m);l=n.stateNode,Cu.current=n;var g=y&&typeof i.getDerivedStateFromError!="function"?null:l.render();return n.flags|=1,r!==null&&y?(n.child=Ys(n,r.child,null,m),n.child=Ys(n,null,g,m)):lr(r,n,g,m),n.memoizedState=l.state,a&&lu(n,i,!0),n.child}function il(r){var n=r.stateNode;n.pendingContext?iu(r,n.pendingContext,n.pendingContext!==n.context):n.context&&iu(r,n.context,!1),Yi(r,n.containerInfo)}var li={dehydrated:null,retryLane:0};function Ru(r,n,i){var l=n.pendingProps,a=St.current,m=!1,y;return(y=(n.flags&64)!==0)||(y=r!==null&&r.memoizedState===null?!1:(a&2)!==0),y?(m=!0,n.flags&=-65):r!==null&&r.memoizedState===null||l.fallback===void 0||l.unstable_avoidThisFallback===!0||(a|=1),xt(St,a&1),r===null?(l.fallback!==void 0&&So(n),r=l.children,a=l.fallback,m?(r=Nu(n,r,a,i),n.child.memoizedState={baseLanes:i},n.memoizedState=li,r):typeof l.unstable_expectedLoadTime=="number"?(r=Nu(n,r,a,i),n.child.memoizedState={baseLanes:i},n.memoizedState=li,n.lanes=33554432,r):(i=Qo({mode:"visible",children:r},n.mode,i,null),i.return=n,n.child=i)):r.memoizedState!==null?m?(l=sl(r,n,l.children,l.fallback,i),m=n.child,a=r.child.memoizedState,m.memoizedState=a===null?{baseLanes:i}:{baseLanes:a.baseLanes|i},m.childLanes=r.childLanes&~i,n.memoizedState=li,l):(i=Au(r,n,l.children,i),n.memoizedState=null,i):m?(l=sl(r,n,l.children,l.fallback,i),m=n.child,a=r.child.memoizedState,m.memoizedState=a===null?{baseLanes:i}:{baseLanes:a.baseLanes|i},m.childLanes=r.childLanes&~i,n.memoizedState=li,l):(i=Au(r,n,l.children,i),n.memoizedState=null,i)}function Nu(r,n,i,l){var a=r.mode,m=r.child;return n={mode:"hidden",children:n},(a&2)===0&&m!==null?(m.childLanes=0,m.pendingProps=n):m=Qo(n,a,0,null),i=yn(i,a,l,null),m.return=r,i.return=r,m.sibling=i,r.child=m,i}function Au(r,n,i,l){var a=r.child;return r=a.sibling,i=Lr(a,{mode:"visible",children:i}),(n.mode&2)===0&&(i.lanes=l),i.return=n,i.sibling=null,r!==null&&(r.nextEffect=null,r.flags=8,n.firstEffect=n.lastEffect=r),n.child=i}function sl(r,n,i,l,a){var m=n.mode,y=r.child;r=y.sibling;var g={mode:"hidden",children:i};return(m&2)===0&&n.child!==y?(i=n.child,i.childLanes=0,i.pendingProps=g,y=i.lastEffect,y!==null?(n.firstEffect=i.firstEffect,n.lastEffect=y,y.nextEffect=null):n.firstEffect=n.lastEffect=null):i=Lr(y,g),r!==null?l=Lr(r,l):(l=yn(l,m,a,null),l.flags|=2),l.return=n,i.return=n,i.sibling=l,n.child=i,l}function Vu(r,n){r.lanes|=n;var i=r.alternate;i!==null&&(i.lanes|=n),go(r.return,n)}function Oo(r,n,i,l,a,m){var y=r.memoizedState;y===null?r.memoizedState={isBackwards:n,rendering:null,renderingStartTime:0,last:l,tail:i,tailMode:a,lastEffect:m}:(y.isBackwards=n,y.rendering=null,y.renderingStartTime=0,y.last=l,y.tail=i,y.tailMode=a,y.lastEffect=m)}function Mu(r,n,i){var l=n.pendingProps,a=l.revealOrder,m=l.tail;if(lr(r,n,l.children,i),l=St.current,(l&2)!==0)l=l&1|2,n.flags|=64;else{if(r!==null&&(r.flags&64)!==0)e:for(r=n.child;r!==null;){if(r.tag===13)r.memoizedState!==null&&Vu(r,i);else if(r.tag===19)Vu(r,i);else if(r.child!==null){r.child.return=r,r=r.child;continue}if(r===n)break e;for(;r.sibling===null;){if(r.return===null||r.return===n)break e;r=r.return}r.sibling.return=r.return,r=r.sibling}l&=1}if(xt(St,l),(n.mode&2)===0)n.memoizedState=null;else switch(a){case"forwards":for(i=n.child,a=null;i!==null;)r=i.alternate,r!==null&&Qs(r)===null&&(a=i),i=i.sibling;i=a,i===null?(a=n.child,n.child=null):(a=i.sibling,i.sibling=null),Oo(n,!1,a,i,m,n.lastEffect);break;case"backwards":for(i=null,a=n.child,n.child=null;a!==null;){if(r=a.alternate,r!==null&&Qs(r)===null){n.child=a;break}r=a.sibling,a.sibling=i,i=a,a=r}Oo(n,!0,i,null,m,n.lastEffect);break;case"together":Oo(n,!1,null,null,void 0,n.lastEffect);break;default:n.memoizedState=null}return n.child}function Wr(r,n,i){if(r!==null&&(n.dependencies=r.dependencies),ui|=n.lanes,(i&n.childLanes)!==0){if(r!==null&&n.child!==r.child)throw Error(U(153));if(n.child!==null){for(r=n.child,i=Lr(r,r.pendingProps),n.child=i,i.return=n;r.sibling!==null;)r=r.sibling,i=i.sibling=Lr(r,r.pendingProps),i.return=n;i.sibling=null}return n.child}return null}var Iu,Lo,jo,Ro;Iu=function(r,n){for(var i=n.child;i!==null;){if(i.tag===5||i.tag===6)r.appendChild(i.stateNode);else if(i.tag!==4&&i.child!==null){i.child.return=i,i=i.child;continue}if(i===n)break;for(;i.sibling===null;){if(i.return===null||i.return===n)return;i=i.return}i.sibling.return=i.return,i=i.sibling}},Lo=function(){},jo=function(r,n,i,l){var a=r.memoizedProps;if(a!==l){r=n.stateNode,Dr(Nr.current);var m=null;switch(i){case"input":a=Ct(r,a),l=Ct(r,l),m=[];break;case"option":a=ds(r,a),l=ds(r,l),m=[];break;case"select":a=pe({},a,{value:void 0}),l=pe({},l,{value:void 0}),m=[];break;case"textarea":a=ca(r,a),l=ca(r,l),m=[];break;default:typeof a.onClick!="function"&&typeof l.onClick=="function"&&(r.onclick=Ai)}El(i,l);var y;i=null;for(B in a)if(!l.hasOwnProperty(B)&&a.hasOwnProperty(B)&&a[B]!=null)if(B==="style"){var g=a[B];for(y in g)g.hasOwnProperty(y)&&(i||(i={}),i[y]="")}else B!=="dangerouslySetInnerHTML"&&B!=="children"&&B!=="suppressContentEditableWarning"&&B!=="suppressHydrationWarning"&&B!=="autoFocus"&&(qe.hasOwnProperty(B)?m||(m=[]):(m=m||[]).push(B,null));for(B in l){var T=l[B];if(g=a!=null?a[B]:void 0,l.hasOwnProperty(B)&&T!==g&&(T!=null||g!=null))if(B==="style")if(g){for(y in g)!g.hasOwnProperty(y)||T&&T.hasOwnProperty(y)||(i||(i={}),i[y]="");for(y in T)T.hasOwnProperty(y)&&g[y]!==T[y]&&(i||(i={}),i[y]=T[y])}else i||(m||(m=[]),m.push(B,i)),i=T;else B==="dangerouslySetInnerHTML"?(T=T?T.__html:void 0,g=g?g.__html:void 0,T!=null&&g!==T&&(m=m||[]).push(B,T)):B==="children"?typeof T!="string"&&typeof T!="number"||(m=m||[]).push(B,""+T):B!=="suppressContentEditableWarning"&&B!=="suppressHydrationWarning"&&(qe.hasOwnProperty(B)?(T!=null&&B==="onScroll"&&ht("scroll",r),m||g===T||(m=[])):typeof T=="object"&&T!==null&&T.$$typeof===Y?T.toString():(m=m||[]).push(B,T))}i&&(m=m||[]).push("style",i);var B=m;(n.updateQueue=B)&&(n.flags|=4)}},Ro=function(r,n,i,l){i!==l&&(n.flags|=4)};function is(r,n){if(!Ar)switch(r.tailMode){case"hidden":n=r.tail;for(var i=null;n!==null;)n.alternate!==null&&(i=n),n=n.sibling;i===null?r.tail=null:i.sibling=null;break;case"collapsed":i=r.tail;for(var l=null;i!==null;)i.alternate!==null&&(l=i),i=i.sibling;l===null?n||r.tail===null?r.tail=null:r.tail.sibling=null:l.sibling=null}}function Bu(r,n,i){var l=n.pendingProps;switch(n.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return nr(n.type)&&Bs(),null;case 3:return un(),dt(rr),dt(Yt),Ks(),l=n.stateNode,l.pendingContext&&(l.context=l.pendingContext,l.pendingContext=null),(r===null||r.child===null)&&(Ji(n)?n.flags|=4:l.hydrate||(n.flags|=256)),Lo(n),null;case 5:xo(n);var a=Dr($r.current);if(i=n.type,r!==null&&n.stateNode!=null)jo(r,n,i,l,a),r.ref!==n.ref&&(n.flags|=128);else{if(!l){if(n.stateNode===null)throw Error(U(166));return null}if(r=Dr(Nr.current),Ji(n)){l=n.stateNode,i=n.type;var m=n.memoizedProps;switch(l[nn]=n,l[Ms]=m,i){case"dialog":ht("cancel",l),ht("close",l);break;case"iframe":case"object":case"embed":ht("load",l);break;case"video":case"audio":for(r=0;r<Li.length;r++)ht(Li[r],l);break;case"source":ht("error",l);break;case"img":case"image":case"link":ht("error",l),ht("load",l);break;case"details":ht("toggle",l);break;case"input":tr(l,m),ht("invalid",l);break;case"select":l._wrapperState={wasMultiple:!!m.multiple},ht("invalid",l);break;case"textarea":fa(l,m),ht("invalid",l)}El(i,m),r=null;for(var y in m)m.hasOwnProperty(y)&&(a=m[y],y==="children"?typeof a=="string"?l.textContent!==a&&(r=["children",a]):typeof a=="number"&&l.textContent!==""+a&&(r=["children",""+a]):qe.hasOwnProperty(y)&&a!=null&&y==="onScroll"&&ht("scroll",l));switch(i){case"input":Fe(l),ac(l,m,!0);break;case"textarea":Fe(l),Sl(l);break;case"select":case"option":break;default:typeof m.onClick=="function"&&(l.onclick=Ai)}l=r,n.updateQueue=l,l!==null&&(n.flags|=4)}else{switch(y=a.nodeType===9?a:a.ownerDocument,r===kl.html&&(r=ys(i)),r===kl.html?i==="script"?(r=y.createElement("div"),r.innerHTML="<script><\/script>",r=r.removeChild(r.firstChild)):typeof l.is=="string"?r=y.createElement(i,{is:l.is}):(r=y.createElement(i),i==="select"&&(y=r,l.multiple?y.multiple=!0:l.size&&(y.size=l.size))):r=y.createElementNS(r,i),r[nn]=n,r[Ms]=l,Iu(r,n,!1,!1),n.stateNode=r,y=wn(i,l),i){case"dialog":ht("cancel",r),ht("close",r),a=l;break;case"iframe":case"object":case"embed":ht("load",r),a=l;break;case"video":case"audio":for(a=0;a<Li.length;a++)ht(Li[a],r);a=l;break;case"source":ht("error",r),a=l;break;case"img":case"image":case"link":ht("error",r),ht("load",r),a=l;break;case"details":ht("toggle",r),a=l;break;case"input":tr(r,l),a=Ct(r,l),ht("invalid",r);break;case"option":a=ds(r,l);break;case"select":r._wrapperState={wasMultiple:!!l.multiple},a=pe({},l,{value:void 0}),ht("invalid",r);break;case"textarea":fa(r,l),a=ca(r,l),ht("invalid",r);break;default:a=l}El(i,a);var g=a;for(m in g)if(g.hasOwnProperty(m)){var T=g[m];m==="style"?ha(r,T):m==="dangerouslySetInnerHTML"?(T=T?T.__html:void 0,T!=null&&pa(r,T)):m==="children"?typeof T=="string"?(i!=="textarea"||T!=="")&&bi(r,T):typeof T=="number"&&bi(r,""+T):m!=="suppressContentEditableWarning"&&m!=="suppressHydrationWarning"&&m!=="autoFocus"&&(qe.hasOwnProperty(m)?T!=null&&m==="onScroll"&&ht("scroll",r):T!=null&&Et(r,m,T,y))}switch(i){case"input":Fe(r),ac(r,l,!1);break;case"textarea":Fe(r),Sl(r);break;case"option":l.value!=null&&r.setAttribute("value",""+$e(l.value));break;case"select":r.multiple=!!l.multiple,m=l.value,m!=null?gi(r,!!l.multiple,m,!1):l.defaultValue!=null&&gi(r,!!l.multiple,l.defaultValue,!0);break;default:typeof a.onClick=="function"&&(r.onclick=Ai)}ao(i,l)&&(n.flags|=4)}n.ref!==null&&(n.flags|=128)}return null;case 6:if(r&&n.stateNode!=null)Ro(r,n,r.memoizedProps,l);else{if(typeof l!="string"&&n.stateNode===null)throw Error(U(166));i=Dr($r.current),Dr(Nr.current),Ji(n)?(l=n.stateNode,i=n.memoizedProps,l[nn]=n,l.nodeValue!==i&&(n.flags|=4)):(l=(i.nodeType===9?i:i.ownerDocument).createTextNode(l),l[nn]=n,n.stateNode=l)}return null;case 13:return dt(St),l=n.memoizedState,(n.flags&64)!==0?(n.lanes=i,n):(l=l!==null,i=!1,r===null?n.memoizedProps.fallback!==void 0&&Ji(n):i=r.memoizedState!==null,l&&!i&&(n.mode&2)!==0&&(r===null&&n.memoizedProps.unstable_avoidThisFallback!==!0||(St.current&1)!==0?zt===0&&(zt=3):((zt===0||zt===3)&&(zt=4),Ht===null||(ui&134217727)===0&&(In&134217727)===0||mi(Ht,Xt))),(l||i)&&(n.flags|=4),null);case 4:return un(),Lo(n),r===null&&Ka(n.stateNode.containerInfo),null;case 10:return vo(n),null;case 17:return nr(n.type)&&Bs(),null;case 19:if(dt(St),l=n.memoizedState,l===null)return null;if(m=(n.flags&64)!==0,y=l.rendering,y===null)if(m)is(l,!1);else{if(zt!==0||r!==null&&(r.flags&64)!==0)for(r=n.child;r!==null;){if(y=Qs(r),y!==null){for(n.flags|=64,is(l,!1),m=y.updateQueue,m!==null&&(n.updateQueue=m,n.flags|=4),l.lastEffect===null&&(n.firstEffect=null),n.lastEffect=l.lastEffect,l=i,i=n.child;i!==null;)m=i,r=l,m.flags&=2,m.nextEffect=null,m.firstEffect=null,m.lastEffect=null,y=m.alternate,y===null?(m.childLanes=0,m.lanes=r,m.child=null,m.memoizedProps=null,m.memoizedState=null,m.updateQueue=null,m.dependencies=null,m.stateNode=null):(m.childLanes=y.childLanes,m.lanes=y.lanes,m.child=y.child,m.memoizedProps=y.memoizedProps,m.memoizedState=y.memoizedState,m.updateQueue=y.updateQueue,m.type=y.type,r=y.dependencies,m.dependencies=r===null?null:{lanes:r.lanes,firstContext:r.firstContext}),i=i.sibling;return xt(St,St.current&1|2),n.child}r=r.sibling}l.tail!==null&&It()>ls&&(n.flags|=64,m=!0,is(l,!1),n.lanes=33554432)}else{if(!m)if(r=Qs(y),r!==null){if(n.flags|=64,m=!0,i=r.updateQueue,i!==null&&(n.updateQueue=i,n.flags|=4),is(l,!0),l.tail===null&&l.tailMode==="hidden"&&!y.alternate&&!Ar)return n=n.lastEffect=l.lastEffect,n!==null&&(n.nextEffect=null),null}else 2*It()-l.renderingStartTime>ls&&i!==1073741824&&(n.flags|=64,m=!0,is(l,!1),n.lanes=33554432);l.isBackwards?(y.sibling=n.child,n.child=y):(i=l.last,i!==null?i.sibling=y:n.child=y,l.last=y)}return l.tail!==null?(i=l.tail,l.rendering=i,l.tail=i.sibling,l.lastEffect=n.lastEffect,l.renderingStartTime=It(),i.sibling=null,n=St.current,xt(St,m?n&1|2:n&1),i):null;case 23:case 24:return Go(),r!==null&&r.memoizedState!==null!=(n.memoizedState!==null)&&l.mode!=="unstable-defer-without-hiding"&&(n.flags|=4),null}throw Error(U(156,n.tag))}function No(r){switch(r.tag){case 1:nr(r.type)&&Bs();var n=r.flags;return n&4096?(r.flags=n&-4097|64,r):null;case 3:if(un(),dt(rr),dt(Yt),Ks(),n=r.flags,(n&64)!==0)throw Error(U(285));return r.flags=n&-4097|64,r;case 5:return xo(r),null;case 13:return dt(St),n=r.flags,n&4096?(r.flags=n&-4097|64,r):null;case 19:return dt(St),null;case 4:return un(),null;case 10:return vo(r),null;case 23:case 24:return Go(),null;default:return null}}function Ao(r,n){try{var i="",l=n;do i+=J(l),l=l.return;while(l);var a=i}catch(m){a=`
Error generating stack: `+m.message+`
`+m.stack}return{value:r,source:n,stack:a}}function Vo(r,n){try{console.error(n.value)}catch(i){setTimeout(function(){throw i})}}var Kc=typeof WeakMap=="function"?WeakMap:Map;function Fu(r,n,i){i=Bt(-1,i),i.tag=3,i.payload={element:null};var l=n.value;return i.callback=function(){os||(os=!0,ul=l),Vo(r,n)},i}function Mo(r,n,i){i=Bt(-1,i),i.tag=3;var l=r.type.getDerivedStateFromError;if(typeof l=="function"){var a=n.value;i.payload=function(){return Vo(r,n),l(a)}}var m=r.stateNode;return m!==null&&typeof m.componentDidCatch=="function"&&(i.callback=function(){typeof l!="function"&&(Vr===null?Vr=new Set([this]):Vr.add(this),Vo(r,n));var y=n.stack;this.componentDidCatch(n.value,{componentStack:y!==null?y:""})}),i}var Zc=typeof WeakSet=="function"?WeakSet:Set;function Du(r){var n=r.ref;if(n!==null)if(typeof n=="function")try{n(null)}catch(i){qr(r,i)}else n.current=null}function ef(r,n){switch(n.tag){case 0:case 11:case 15:case 22:return;case 1:if(n.flags&256&&r!==null){var i=r.memoizedProps,l=r.memoizedState;r=n.stateNode,n=r.getSnapshotBeforeUpdate(n.elementType===n.type?i:Tr(n.type,i),l),r.__reactInternalSnapshotBeforeUpdate=n}return;case 3:n.flags&256&&As(n.stateNode.containerInfo);return;case 5:case 6:case 4:case 17:return}throw Error(U(163))}function zu(r,n,i){switch(i.tag){case 0:case 11:case 15:case 22:if(n=i.updateQueue,n=n!==null?n.lastEffect:null,n!==null){r=n=n.next;do{if((r.tag&3)===3){var l=r.create;r.destroy=l()}r=r.next}while(r!==n)}if(n=i.updateQueue,n=n!==null?n.lastEffect:null,n!==null){r=n=n.next;do{var a=r;l=a.next,a=a.tag,(a&4)!==0&&(a&1)!==0&&(ec(i,r),af(i,r)),r=l}while(r!==n)}return;case 1:r=i.stateNode,i.flags&4&&(n===null?r.componentDidMount():(l=i.elementType===i.type?n.memoizedProps:Tr(i.type,n.memoizedProps),r.componentDidUpdate(l,n.memoizedState,r.__reactInternalSnapshotBeforeUpdate))),n=i.updateQueue,n!==null&&Wi(i,n,r);return;case 3:if(n=i.updateQueue,n!==null){if(r=null,i.child!==null)switch(i.child.tag){case 5:r=i.child.stateNode;break;case 1:r=i.child.stateNode}Wi(i,n,r)}return;case 5:r=i.stateNode,n===null&&i.flags&4&&ao(i.type,i.memoizedProps)&&r.focus();return;case 6:return;case 4:return;case 12:return;case 13:i.memoizedState===null&&(i=i.alternate,i!==null&&(i=i.memoizedState,i!==null&&(i=i.dehydrated,i!==null&&Kr(i))));return;case 19:case 17:case 20:case 21:case 23:case 24:return}throw Error(U(163))}function Wu(r,n){for(var i=r;;){if(i.tag===5){var l=i.stateNode;if(n)l=l.style,typeof l.setProperty=="function"?l.setProperty("display","none","important"):l.display="none";else{l=i.stateNode;var a=i.memoizedProps.style;a=a!=null&&a.hasOwnProperty("display")?a.display:null,l.style.display=cc("display",a)}}else if(i.tag===6)i.stateNode.nodeValue=n?"":i.memoizedProps;else if((i.tag!==23&&i.tag!==24||i.memoizedState===null||i===r)&&i.child!==null){i.child.return=i,i=i.child;continue}if(i===r)break;for(;i.sibling===null;){if(i.return===null||i.return===r)return;i=i.return}i.sibling.return=i.return,i=i.sibling}}function Uu(r,n){if(Cn&&typeof Cn.onCommitFiberUnmount=="function")try{Cn.onCommitFiberUnmount(mo,n)}catch(m){}switch(n.tag){case 0:case 11:case 14:case 15:case 22:if(r=n.updateQueue,r!==null&&(r=r.lastEffect,r!==null)){var i=r=r.next;do{var l=i,a=l.destroy;if(l=l.tag,a!==void 0)if((l&4)!==0)ec(n,i);else{l=n;try{a()}catch(m){qr(l,m)}}i=i.next}while(i!==r)}break;case 1:if(Du(n),r=n.stateNode,typeof r.componentWillUnmount=="function")try{r.props=n.memoizedProps,r.state=n.memoizedState,r.componentWillUnmount()}catch(m){qr(n,m)}break;case 5:Du(n);break;case 4:Fo(r,n)}}function Hu(r){r.alternate=null,r.child=null,r.dependencies=null,r.firstEffect=null,r.lastEffect=null,r.memoizedProps=null,r.memoizedState=null,r.pendingProps=null,r.return=null,r.updateQueue=null}function Io(r){return r.tag===5||r.tag===3||r.tag===4}function qu(r){e:{for(var n=r.return;n!==null;){if(Io(n))break e;n=n.return}throw Error(U(160))}var i=n;switch(n=i.stateNode,i.tag){case 5:var l=!1;break;case 3:n=n.containerInfo,l=!0;break;case 4:n=n.containerInfo,l=!0;break;default:throw Error(U(161))}i.flags&16&&(bi(n,""),i.flags&=-17);e:t:for(i=r;;){for(;i.sibling===null;){if(i.return===null||Io(i.return)){i=null;break e}i=i.return}for(i.sibling.return=i.return,i=i.sibling;i.tag!==5&&i.tag!==6&&i.tag!==18;){if(i.flags&2||i.child===null||i.tag===4)continue t;i.child.return=i,i=i.child}if(!(i.flags&2)){i=i.stateNode;break e}}l?ll(r,i,n):Bo(r,i,n)}function ll(r,n,i){var l=r.tag,a=l===5||l===6;if(a)r=a?r.stateNode:r.stateNode.instance,n?i.nodeType===8?i.parentNode.insertBefore(r,n):i.insertBefore(r,n):(i.nodeType===8?(n=i.parentNode,n.insertBefore(r,i)):(n=i,n.appendChild(r)),i=i._reactRootContainer,i!=null||n.onclick!==null||(n.onclick=Ai));else if(l!==4&&(r=r.child,r!==null))for(ll(r,n,i),r=r.sibling;r!==null;)ll(r,n,i),r=r.sibling}function Bo(r,n,i){var l=r.tag,a=l===5||l===6;if(a)r=a?r.stateNode:r.stateNode.instance,n?i.insertBefore(r,n):i.appendChild(r);else if(l!==4&&(r=r.child,r!==null))for(Bo(r,n,i),r=r.sibling;r!==null;)Bo(r,n,i),r=r.sibling}function Fo(r,n){for(var i=n,l=!1,a,m;;){if(!l){l=i.return;e:for(;;){if(l===null)throw Error(U(160));switch(a=l.stateNode,l.tag){case 5:m=!1;break e;case 3:a=a.containerInfo,m=!0;break e;case 4:a=a.containerInfo,m=!0;break e}l=l.return}l=!0}if(i.tag===5||i.tag===6){e:for(var y=r,g=i,T=g;;)if(Uu(y,T),T.child!==null&&T.tag!==4)T.child.return=T,T=T.child;else{if(T===g)break e;for(;T.sibling===null;){if(T.return===null||T.return===g)break e;T=T.return}T.sibling.return=T.return,T=T.sibling}m?(y=a,g=i.stateNode,y.nodeType===8?y.parentNode.removeChild(g):y.removeChild(g)):a.removeChild(i.stateNode)}else if(i.tag===4){if(i.child!==null){a=i.stateNode.containerInfo,m=!0,i.child.return=i,i=i.child;continue}}else if(Uu(r,i),i.child!==null){i.child.return=i,i=i.child;continue}if(i===n)break;for(;i.sibling===null;){if(i.return===null||i.return===n)return;i=i.return,i.tag===4&&(l=!1)}i.sibling.return=i.return,i=i.sibling}}function Do(r,n){switch(n.tag){case 0:case 11:case 14:case 15:case 22:var i=n.updateQueue;if(i=i!==null?i.lastEffect:null,i!==null){var l=i=i.next;do(l.tag&3)===3&&(r=l.destroy,l.destroy=void 0,r!==void 0&&r()),l=l.next;while(l!==i)}return;case 1:return;case 5:if(i=n.stateNode,i!=null){l=n.memoizedProps;var a=r!==null?r.memoizedProps:l;r=n.type;var m=n.updateQueue;if(n.updateQueue=null,m!==null){for(i[Ms]=l,r==="input"&&l.type==="radio"&&l.name!=null&&oc(i,l),wn(r,a),n=wn(r,l),a=0;a<m.length;a+=2){var y=m[a],g=m[a+1];y==="style"?ha(i,g):y==="dangerouslySetInnerHTML"?pa(i,g):y==="children"?bi(i,g):Et(i,y,g,n)}switch(r){case"input":xl(i,l);break;case"textarea":Jr(i,l);break;case"select":r=i._wrapperState.wasMultiple,i._wrapperState.wasMultiple=!!l.multiple,m=l.value,m!=null?gi(i,!!l.multiple,m,!1):r!==!!l.multiple&&(l.defaultValue!=null?gi(i,!!l.multiple,l.defaultValue,!0):gi(i,!!l.multiple,l.multiple?[]:"",!1))}}}return;case 6:if(n.stateNode===null)throw Error(U(162));n.stateNode.nodeValue=n.memoizedProps;return;case 3:i=n.stateNode,i.hydrate&&(i.hydrate=!1,Kr(i.containerInfo));return;case 12:return;case 13:n.memoizedState!==null&&(al=It(),Wu(n.child,!0)),Gu(n);return;case 19:Gu(n);return;case 17:return;case 23:case 24:Wu(n,n.memoizedState!==null);return}throw Error(U(163))}function Gu(r){var n=r.updateQueue;if(n!==null){r.updateQueue=null;var i=r.stateNode;i===null&&(i=r.stateNode=new Zc),n.forEach(function(l){var a=cf.bind(null,r,l);i.has(l)||(i.add(l),l.then(a,a))})}}function tf(r,n){return r!==null&&(r=r.memoizedState,r===null||r.dehydrated!==null)?(n=n.memoizedState,n!==null&&n.dehydrated===null):!1}var rf=Math.ceil,ol=At.ReactCurrentDispatcher,oi=At.ReactCurrentOwner,Ne=0,Ht=null,Nt=null,Xt=0,fn=0,ai=sn(0),zt=0,ss=null,Or=0,ui=0,In=0,zo=0,ci=null,al=0,ls=1/0;function fi(){ls=It()+500}var ve=null,os=!1,ul=null,Vr=null,mn=!1,as=null,us=90,Wo=[],Uo=[],Ur=null,cs=0,Ho=null,cl=-1,Hr=0,fl=0,fs=null,ml=!1;function ar(){return(Ne&48)!==0?It():cl!==-1?cl:cl=It()}function pn(r){if(r=r.mode,(r&2)===0)return 1;if((r&4)===0)return on()===99?1:2;if(Hr===0&&(Hr=Or),Qc.transition!==0){fl!==0&&(fl=ci!==null?ci.pendingLanes:0),r=Hr;var n=4186112&~fl;return n&=-n,n===0&&(r=4186112&~r,n=r&-r,n===0&&(n=8192)),n}return r=on(),(Ne&4)!==0&&r===98?r=Vl(12,Hr):(r=Lf(r),r=Vl(r,Hr)),r}function hn(r,n,i){if(50<cs)throw cs=0,Ho=null,Error(U(185));if(r=pl(r,n),r===null)return null;Ml(r,n,i),r===Ht&&(In|=n,zt===4&&mi(r,Xt));var l=on();n===1?(Ne&8)!==0&&(Ne&48)===0?qo(r):(yr(r,i),Ne===0&&(fi(),Rr())):((Ne&4)===0||l!==98&&l!==99||(Ur===null?Ur=new Set([r]):Ur.add(r)),yr(r,i)),ci=r}function pl(r,n){r.lanes|=n;var i=r.alternate;for(i!==null&&(i.lanes|=n),i=r,r=r.return;r!==null;)r.childLanes|=n,i=r.alternate,i!==null&&(i.childLanes|=n),i=r,r=r.return;return i.tag===3?i.stateNode:null}function yr(r,n){for(var i=r.callbackNode,l=r.suspendedLanes,a=r.pingedLanes,m=r.expirationTimes,y=r.pendingLanes;0<y;){var g=31-_n(y),T=1<<g,B=m[g];if(B===-1){if((T&l)===0||(T&a)!==0){B=n,Si(T);var de=pt;m[g]=10<=de?B+250:6<=de?B+5e3:-1}}else B<=n&&(r.expiredLanes|=T);y&=~T}if(l=Es(r,r===Ht?Xt:0),n=pt,l===0)i!==null&&(i!==zs&&Pn(i),r.callbackNode=null,r.callbackPriority=0);else{if(i!==null){if(r.callbackPriority===n)return;i!==zs&&Pn(i)}n===15?(i=qo.bind(null,r),Br===null?(Br=[i],Ii=He(Ds,pu)):Br.push(i),i=zs):n===14?i=Bi(99,qo.bind(null,r)):(i=jf(n),i=Bi(i,Yu.bind(null,r))),r.callbackPriority=n,r.callbackNode=i}}function Yu(r){if(cl=-1,fl=Hr=0,(Ne&48)!==0)throw Error(U(327));var n=r.callbackNode;if(dn()&&r.callbackNode!==n)return null;var i=Es(r,r===Ht?Xt:0);if(i===0)return null;var l=i,a=Ne;Ne|=16;var m=Ku();(Ht!==r||Xt!==l)&&(fi(),pi(r,l));do try{Ye();break}catch(g){Xu(r,g)}while(1);if(Us(),ol.current=m,Ne=a,Nt!==null?l=0:(Ht=null,Xt=0,l=zt),(Or&In)!==0)pi(r,0);else if(l!==0){if(l===2&&(Ne|=64,r.hydrate&&(r.hydrate=!1,As(r.containerInfo)),i=kc(r),i!==0&&(l=ms(r,i))),l===1)throw n=ss,pi(r,0),mi(r,i),yr(r,It()),n;switch(r.finishedWork=r.current.alternate,r.finishedLanes=i,l){case 0:case 1:throw Error(U(345));case 2:Bn(r);break;case 3:if(mi(r,i),(i&62914560)===i&&(l=al+500-It(),10<l)){if(Es(r,0)!==0)break;if(a=r.suspendedLanes,(a&i)!==i){ar(),r.pingedLanes|=r.suspendedLanes&a;break}r.timeoutHandle=eu(Bn.bind(null,r),l);break}Bn(r);break;case 4:if(mi(r,i),(i&4186112)===i)break;for(l=r.eventTimes,a=-1;0<i;){var y=31-_n(i);m=1<<y,y=l[y],y>a&&(a=y),i&=~m}if(i=a,i=It()-i,i=(120>i?120:480>i?480:1080>i?1080:1920>i?1920:3e3>i?3e3:4320>i?4320:1960*rf(i/1960))-i,10<i){r.timeoutHandle=eu(Bn.bind(null,r),i);break}Bn(r);break;case 5:Bn(r);break;default:throw Error(U(329))}}return yr(r,It()),r.callbackNode===n?Yu.bind(null,r):null}function mi(r,n){for(n&=~zo,n&=~In,r.suspendedLanes|=n,r.pingedLanes&=~n,r=r.expirationTimes;0<n;){var i=31-_n(n),l=1<<i;r[i]=-1,n&=~l}}function qo(r){if((Ne&48)!==0)throw Error(U(327));if(dn(),r===Ht&&(r.expiredLanes&Xt)!==0){var n=Xt,i=ms(r,n);(Or&In)!==0&&(n=Es(r,n),i=ms(r,n))}else n=Es(r,0),i=ms(r,n);if(r.tag!==0&&i===2&&(Ne|=64,r.hydrate&&(r.hydrate=!1,As(r.containerInfo)),n=kc(r),n!==0&&(i=ms(r,n))),i===1)throw i=ss,pi(r,0),mi(r,n),yr(r,It()),i;return r.finishedWork=r.current.alternate,r.finishedLanes=n,Bn(r),yr(r,It()),null}function nf(){if(Ur!==null){var r=Ur;Ur=null,r.forEach(function(n){n.expiredLanes|=24&n.pendingLanes,yr(n,It())})}Rr()}function Ju(r,n){var i=Ne;Ne|=1;try{return r(n)}finally{Ne=i,Ne===0&&(fi(),Rr())}}function Qu(r,n){var i=Ne;Ne&=-2,Ne|=8;try{return r(n)}finally{Ne=i,Ne===0&&(fi(),Rr())}}function hl(r,n){xt(ai,fn),fn|=n,Or|=n}function Go(){fn=ai.current,dt(ai)}function pi(r,n){r.finishedWork=null,r.finishedLanes=0;var i=r.timeoutHandle;if(i!==-1&&(r.timeoutHandle=-1,uo(i)),Nt!==null)for(i=Nt.return;i!==null;){var l=i;switch(l.tag){case 1:l=l.type.childContextTypes,l!=null&&Bs();break;case 3:un(),dt(rr),dt(Yt),Ks();break;case 5:xo(l);break;case 4:un();break;case 13:dt(St);break;case 19:dt(St);break;case 10:vo(l);break;case 23:case 24:Go()}i=i.return}Ht=r,Nt=Lr(r.current,null),Xt=fn=Or=n,zt=0,ss=null,zo=In=ui=0}function Xu(r,n){do{var i=Nt;try{if(Us(),Nn.current=rs,Zs){for(var l=Pt.memoizedState;l!==null;){var a=l.queue;a!==null&&(a.pending=null),l=l.next}Zs=!1}if(Qi=0,Dt=Jt=Pt=null,Xi=!1,oi.current=null,i===null||i.return===null){zt=1,ss=n,Nt=null;break}e:{var m=r,y=i.return,g=i,T=n;if(n=Xt,g.flags|=2048,g.firstEffect=g.lastEffect=null,T!==null&&typeof T=="object"&&typeof T.then=="function"){var B=T;if((g.mode&2)===0){var de=g.alternate;de?(g.updateQueue=de.updateQueue,g.memoizedState=de.memoizedState,g.lanes=de.lanes):(g.updateQueue=null,g.memoizedState=null)}var Ve=(St.current&1)!==0,Z=y;do{var Ee;if(Ee=Z.tag===13){var Ae=Z.memoizedState;if(Ae!==null)Ee=Ae.dehydrated!==null;else{var je=Z.memoizedProps;Ee=je.fallback===void 0?!1:je.unstable_avoidThisFallback!==!0?!0:!Ve}}if(Ee){var N=Z.updateQueue;if(N===null){var C=new Set;C.add(B),Z.updateQueue=C}else N.add(B);if((Z.mode&2)===0){if(Z.flags|=64,g.flags|=16384,g.flags&=-2981,g.tag===1)if(g.alternate===null)g.tag=17;else{var L=Bt(-1,1);L.tag=2,an(g,L)}g.lanes|=1;break e}T=void 0,g=n;var q=m.pingCache;if(q===null?(q=m.pingCache=new Kc,T=new Set,q.set(B,T)):(T=q.get(B),T===void 0&&(T=new Set,q.set(B,T))),!T.has(g)){T.add(g);var Q=uf.bind(null,m,B,g);B.then(Q,Q)}Z.flags|=4096,Z.lanes=n;break e}Z=Z.return}while(Z!==null);T=Error((ue(g.type)||"A React component")+` suspended while rendering, but no fallback UI was specified.

Add a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.`)}zt!==5&&(zt=2),T=Ao(T,g),Z=y;do{switch(Z.tag){case 3:m=T,Z.flags|=4096,n&=-n,Z.lanes|=n;var Me=Fu(Z,m,n);Rn(Z,Me);break e;case 1:m=T;var xe=Z.type,Ie=Z.stateNode;if((Z.flags&64)===0&&(typeof xe.getDerivedStateFromError=="function"||Ie!==null&&typeof Ie.componentDidCatch=="function"&&(Vr===null||!Vr.has(Ie)))){Z.flags|=4096,n&=-n,Z.lanes|=n;var We=Mo(Z,m,n);Rn(Z,We);break e}}Z=Z.return}while(Z!==null)}Zu(i)}catch(Be){n=Be,Nt===i&&i!==null&&(Nt=i=i.return);continue}break}while(1)}function Ku(){var r=ol.current;return ol.current=rs,r===null?rs:r}function ms(r,n){var i=Ne;Ne|=16;var l=Ku();Ht===r&&Xt===n||pi(r,n);do try{sf();break}catch(a){Xu(r,a)}while(1);if(Us(),Ne=i,ol.current=l,Nt!==null)throw Error(U(261));return Ht=null,Xt=0,zt}function sf(){for(;Nt!==null;)hi(Nt)}function Ye(){for(;Nt!==null&&!Gc();)hi(Nt)}function hi(r){var n=Yo(r.alternate,r,fn);r.memoizedProps=r.pendingProps,n===null?Zu(r):Nt=n,oi.current=null}function Zu(r){var n=r;do{var i=n.alternate;if(r=n.return,(n.flags&2048)===0){if(i=Bu(i,n,fn),i!==null){Nt=i;return}if(i=n,i.tag!==24&&i.tag!==23||i.memoizedState===null||(fn&1073741824)!==0||(i.mode&4)===0){for(var l=0,a=i.child;a!==null;)l|=a.lanes|a.childLanes,a=a.sibling;i.childLanes=l}r!==null&&(r.flags&2048)===0&&(r.firstEffect===null&&(r.firstEffect=n.firstEffect),n.lastEffect!==null&&(r.lastEffect!==null&&(r.lastEffect.nextEffect=n.firstEffect),r.lastEffect=n.lastEffect),1<n.flags&&(r.lastEffect!==null?r.lastEffect.nextEffect=n:r.firstEffect=n,r.lastEffect=n))}else{if(i=No(n),i!==null){i.flags&=2047,Nt=i;return}r!==null&&(r.firstEffect=r.lastEffect=null,r.flags|=2048)}if(n=n.sibling,n!==null){Nt=n;return}Nt=n=r}while(n!==null);zt===0&&(zt=5)}function Bn(r){var n=on();return On(99,lf.bind(null,r,n)),null}function lf(r,n){do dn();while(as!==null);if((Ne&48)!==0)throw Error(U(327));var i=r.finishedWork;if(i===null)return null;if(r.finishedWork=null,r.finishedLanes=0,i===r.current)throw Error(U(177));r.callbackNode=null;var l=i.lanes|i.childLanes,a=l,m=r.pendingLanes&~a;r.pendingLanes=a,r.suspendedLanes=0,r.pingedLanes=0,r.expiredLanes&=a,r.mutableReadLanes&=a,r.entangledLanes&=a,a=r.entanglements;for(var y=r.eventTimes,g=r.expirationTimes;0<m;){var T=31-_n(m),B=1<<T;a[T]=0,y[T]=-1,g[T]=-1,m&=~B}if(Ur!==null&&(l&24)===0&&Ur.has(r)&&Ur.delete(r),r===Ht&&(Nt=Ht=null,Xt=0),1<i.flags?i.lastEffect!==null?(i.lastEffect.nextEffect=i,l=i.firstEffect):l=i:l=i.firstEffect,l!==null){if(a=Ne,Ne|=32,oi.current=null,oo=Ir,y=Ya(),eo(y)){if("selectionStart"in y)g={start:y.selectionStart,end:y.selectionEnd};else e:if(g=(g=y.ownerDocument)&&g.defaultView||window,(B=g.getSelection&&g.getSelection())&&B.rangeCount!==0){g=B.anchorNode,m=B.anchorOffset,T=B.focusNode,B=B.focusOffset;try{g.nodeType,T.nodeType}catch(Be){g=null;break e}var de=0,Ve=-1,Z=-1,Ee=0,Ae=0,je=y,N=null;t:for(;;){for(var C;je!==g||m!==0&&je.nodeType!==3||(Ve=de+m),je!==T||B!==0&&je.nodeType!==3||(Z=de+B),je.nodeType===3&&(de+=je.nodeValue.length),(C=je.firstChild)!==null;)N=je,je=C;for(;;){if(je===y)break t;if(N===g&&++Ee===m&&(Ve=de),N===T&&++Ae===B&&(Z=de),(C=je.nextSibling)!==null)break;je=N,N=je.parentNode}je=C}g=Ve===-1||Z===-1?null:{start:Ve,end:Z}}else g=null;g=g||{start:0,end:0}}else g=null;Qn={focusedElem:y,selectionRange:g},Ir=!1,fs=null,ml=!1,ve=l;do try{of()}catch(Be){if(ve===null)throw Error(U(330));qr(ve,Be),ve=ve.nextEffect}while(ve!==null);fs=null,ve=l;do try{for(y=r;ve!==null;){var L=ve.flags;if(L&16&&bi(ve.stateNode,""),L&128){var q=ve.alternate;if(q!==null){var Q=q.ref;Q!==null&&(typeof Q=="function"?Q(null):Q.current=null)}}switch(L&1038){case 2:qu(ve),ve.flags&=-3;break;case 6:qu(ve),ve.flags&=-3,Do(ve.alternate,ve);break;case 1024:ve.flags&=-1025;break;case 1028:ve.flags&=-1025,Do(ve.alternate,ve);break;case 4:Do(ve.alternate,ve);break;case 8:g=ve,Fo(y,g);var Me=g.alternate;Hu(g),Me!==null&&Hu(Me)}ve=ve.nextEffect}}catch(Be){if(ve===null)throw Error(U(330));qr(ve,Be),ve=ve.nextEffect}while(ve!==null);if(Q=Qn,q=Ya(),L=Q.focusedElem,y=Q.selectionRange,q!==L&&L&&L.ownerDocument&&Zl(L.ownerDocument.documentElement,L)){for(y!==null&&eo(L)&&(q=y.start,Q=y.end,Q===void 0&&(Q=q),"selectionStart"in L?(L.selectionStart=q,L.selectionEnd=Math.min(Q,L.value.length)):(Q=(q=L.ownerDocument||document)&&q.defaultView||window,Q.getSelection&&(Q=Q.getSelection(),g=L.textContent.length,Me=Math.min(y.start,g),y=y.end===void 0?Me:Math.min(y.end,g),!Q.extend&&Me>y&&(g=y,y=Me,Me=g),g=Ga(L,Me),m=Ga(L,y),g&&m&&(Q.rangeCount!==1||Q.anchorNode!==g.node||Q.anchorOffset!==g.offset||Q.focusNode!==m.node||Q.focusOffset!==m.offset)&&(q=q.createRange(),q.setStart(g.node,g.offset),Q.removeAllRanges(),Me>y?(Q.addRange(q),Q.extend(m.node,m.offset)):(q.setEnd(m.node,m.offset),Q.addRange(q)))))),q=[],Q=L;Q=Q.parentNode;)Q.nodeType===1&&q.push({element:Q,left:Q.scrollLeft,top:Q.scrollTop});for(typeof L.focus=="function"&&L.focus(),L=0;L<q.length;L++)Q=q[L],Q.element.scrollLeft=Q.left,Q.element.scrollTop=Q.top}Ir=!!oo,Qn=oo=null,r.current=i,ve=l;do try{for(L=r;ve!==null;){var xe=ve.flags;if(xe&36&&zu(L,ve.alternate,ve),xe&128){q=void 0;var Ie=ve.ref;if(Ie!==null){var We=ve.stateNode;switch(ve.tag){case 5:q=We;break;default:q=We}typeof Ie=="function"?Ie(q):Ie.current=q}}ve=ve.nextEffect}}catch(Be){if(ve===null)throw Error(U(330));qr(ve,Be),ve=ve.nextEffect}while(ve!==null);ve=null,Jc(),Ne=a}else r.current=i;if(mn)mn=!1,as=r,us=n;else for(ve=l;ve!==null;)n=ve.nextEffect,ve.nextEffect=null,ve.flags&8&&(xe=ve,xe.sibling=null,xe.stateNode=null),ve=n;if(l=r.pendingLanes,l===0&&(Vr=null),l===1?r===Ho?cs++:(cs=0,Ho=r):cs=0,i=i.stateNode,Cn&&typeof Cn.onCommitFiberRoot=="function")try{Cn.onCommitFiberRoot(mo,i,void 0,(i.current.flags&64)===64)}catch(Be){}if(yr(r,It()),os)throw os=!1,r=ul,ul=null,r;return(Ne&8)!==0||Rr(),null}function of(){for(;ve!==null;){var r=ve.alternate;ml||fs===null||((ve.flags&8)!==0?hc(ve,fs)&&(ml=!0):ve.tag===13&&tf(r,ve)&&hc(ve,fs)&&(ml=!0));var n=ve.flags;(n&256)!==0&&ef(r,ve),(n&512)===0||mn||(mn=!0,Bi(97,function(){return dn(),null})),ve=ve.nextEffect}}function dn(){if(us!==90){var r=97<us?97:us;return us=90,On(r,tc)}return!1}function af(r,n){Wo.push(n,r),mn||(mn=!0,Bi(97,function(){return dn(),null}))}function ec(r,n){Uo.push(n,r),mn||(mn=!0,Bi(97,function(){return dn(),null}))}function tc(){if(as===null)return!1;var r=as;if(as=null,(Ne&48)!==0)throw Error(U(331));var n=Ne;Ne|=32;var i=Uo;Uo=[];for(var l=0;l<i.length;l+=2){var a=i[l],m=i[l+1],y=a.destroy;if(a.destroy=void 0,typeof y=="function")try{y()}catch(T){if(m===null)throw Error(U(330));qr(m,T)}}for(i=Wo,Wo=[],l=0;l<i.length;l+=2){a=i[l],m=i[l+1];try{var g=a.create;a.destroy=g()}catch(T){if(m===null)throw Error(U(330));qr(m,T)}}for(g=r.current.firstEffect;g!==null;)r=g.nextEffect,g.nextEffect=null,g.flags&8&&(g.sibling=null,g.stateNode=null),g=r;return Ne=n,Rr(),!0}function rc(r,n,i){n=Ao(i,n),n=Fu(r,n,1),an(r,n),n=ar(),r=pl(r,1),r!==null&&(Ml(r,1,n),yr(r,n))}function qr(r,n){if(r.tag===3)rc(r,r,n);else for(var i=r.return;i!==null;){if(i.tag===3){rc(i,r,n);break}else if(i.tag===1){var l=i.stateNode;if(typeof i.type.getDerivedStateFromError=="function"||typeof l.componentDidCatch=="function"&&(Vr===null||!Vr.has(l))){r=Ao(n,r);var a=Mo(i,r,1);if(an(i,a),a=ar(),i=pl(i,1),i!==null)Ml(i,1,a),yr(i,a);else if(typeof l.componentDidCatch=="function"&&(Vr===null||!Vr.has(l)))try{l.componentDidCatch(n,r)}catch(m){}break}}i=i.return}}function uf(r,n,i){var l=r.pingCache;l!==null&&l.delete(n),n=ar(),r.pingedLanes|=r.suspendedLanes&i,Ht===r&&(Xt&i)===i&&(zt===4||zt===3&&(Xt&62914560)===Xt&&500>It()-al?pi(r,0):zo|=i),yr(r,n)}function cf(r,n){var i=r.stateNode;i!==null&&i.delete(n),n=0,n===0&&(n=r.mode,(n&2)===0?n=1:(n&4)===0?n=on()===99?1:2:(Hr===0&&(Hr=Or),n=ki(62914560&~Hr),n===0&&(n=4194304))),i=ar(),r=pl(r,n),r!==null&&(Ml(r,n,i),yr(r,i))}var Yo;Yo=function(r,n,i){var l=n.lanes;if(r!==null)if(r.memoizedProps!==n.pendingProps||rr.current)dr=!0;else if((i&l)!==0)dr=(r.flags&16384)!==0;else{switch(dr=!1,n.tag){case 3:il(n),Xs();break;case 5:Js(n);break;case 1:nr(n.type)&&Fs(n);break;case 4:Yi(n,n.stateNode.containerInfo);break;case 10:l=n.memoizedProps.value;var a=n.type._context;xt(Ws,a._currentValue),a._currentValue=l;break;case 13:if(n.memoizedState!==null)return(i&n.child.childLanes)!==0?Ru(r,n,i):(xt(St,St.current&1),n=Wr(r,n,i),n!==null?n.sibling:null);xt(St,St.current&1);break;case 19:if(l=(i&n.childLanes)!==0,(r.flags&64)!==0){if(l)return Mu(r,n,i);n.flags|=64}if(a=n.memoizedState,a!==null&&(a.rendering=null,a.tail=null,a.lastEffect=null),xt(St,St.current),l)break;return null;case 23:case 24:return n.lanes=0,Po(r,n,i)}return Wr(r,n,i)}else dr=!1;switch(n.lanes=0,n.tag){case 2:if(l=n.type,r!==null&&(r.alternate=null,n.alternate=null,n.flags|=2),r=n.pendingProps,a=ei(n,Yt.current),jn(n,i),a=ko(null,n,l,r,a,i),n.flags|=1,typeof a=="object"&&a!==null&&typeof a.render=="function"&&a.$$typeof===void 0){if(n.tag=1,n.memoizedState=null,n.updateQueue=null,nr(l)){var m=!0;Fs(n)}else m=!1;n.memoizedState=a.state!==null&&a.state!==void 0?a.state:null,bo(n);var y=l.getDerivedStateFromProps;typeof y=="function"&&Ft(n,l,y,r),a.updater=Hs,n.stateNode=a,a._reactInternals=n,Gs(n,l,r,i),n=ns(null,n,l,!0,m,i)}else n.tag=0,lr(null,n,a,i),n=n.child;return n;case 16:a=n.elementType;e:{switch(r!==null&&(r.alternate=null,n.alternate=null,n.flags|=2),r=n.pendingProps,m=a._init,a=m(a._payload),n.type=a,m=n.tag=mf(a),r=Tr(a,r),m){case 0:n=zr(null,n,a,r,i);break e;case 1:n=nl(null,n,a,r,i);break e;case 11:n=Pu(null,n,a,r,i);break e;case 14:n=Ou(null,n,a,Tr(a.type,r),l,i);break e}throw Error(U(306,a,""))}return n;case 0:return l=n.type,a=n.pendingProps,a=n.elementType===l?a:Tr(l,a),zr(r,n,l,a,i);case 1:return l=n.type,a=n.pendingProps,a=n.elementType===l?a:Tr(l,a),nl(r,n,l,a,i);case 3:if(il(n),l=n.updateQueue,r===null||l===null)throw Error(U(282));if(l=n.pendingProps,a=n.memoizedState,a=a!==null?a.element:null,zi(r,n),ti(n,l,null,i),l=n.memoizedState.element,l===a)Xs(),n=Wr(r,n,i);else{if(a=n.stateNode,(m=a.hydrate)&&(cn=En(n.stateNode.containerInfo.firstChild),Cr=n,m=Ar=!0),m){if(r=a.mutableSourceEagerHydrationData,r!=null)for(a=0;a<r.length;a+=2)m=r[a],m._workInProgressVersionPrimary=r[a+1],ni.push(m);for(i=yu(n,null,l,i),n.child=i;i;)i.flags=i.flags&-3|1024,i=i.sibling}else lr(r,n,l,i),Xs();n=n.child}return n;case 5:return Js(n),r===null&&So(n),l=n.type,a=n.pendingProps,m=r!==null?r.memoizedProps:null,y=a.children,Vi(l,a)?y=null:m!==null&&Vi(l,m)&&(n.flags|=16),ju(r,n),lr(r,n,y,i),n.child;case 6:return r===null&&So(n),null;case 13:return Ru(r,n,i);case 4:return Yi(n,n.stateNode.containerInfo),l=n.pendingProps,r===null?n.child=Ys(n,null,l,i):lr(r,n,l,i),n.child;case 11:return l=n.type,a=n.pendingProps,a=n.elementType===l?a:Tr(l,a),Pu(r,n,l,a,i);case 7:return lr(r,n,n.pendingProps,i),n.child;case 8:return lr(r,n,n.pendingProps.children,i),n.child;case 12:return lr(r,n,n.pendingProps.children,i),n.child;case 10:e:{l=n.type._context,a=n.pendingProps,y=n.memoizedProps,m=a.value;var g=n.type._context;if(xt(Ws,g._currentValue),g._currentValue=m,y!==null)if(g=y.value,m=mr(g,m)?0:(typeof l._calculateChangedBits=="function"?l._calculateChangedBits(g,m):1073741823)|0,m===0){if(y.children===a.children&&!rr.current){n=Wr(r,n,i);break e}}else for(g=n.child,g!==null&&(g.return=n);g!==null;){var T=g.dependencies;if(T!==null){y=g.child;for(var B=T.firstContext;B!==null;){if(B.context===l&&(B.observedBits&m)!==0){g.tag===1&&(B=Bt(-1,i&-i),B.tag=2,an(g,B)),g.lanes|=i,B=g.alternate,B!==null&&(B.lanes|=i),go(g.return,i),T.lanes|=i;break}B=B.next}}else y=g.tag===10&&g.type===n.type?null:g.child;if(y!==null)y.return=g;else for(y=g;y!==null;){if(y===n){y=null;break}if(g=y.sibling,g!==null){g.return=y.return,y=g;break}y=y.return}g=y}lr(r,n,a.children,i),n=n.child}return n;case 9:return a=n.type,m=n.pendingProps,l=m.children,jn(n,i),a=pr(a,m.unstable_observedBits),l=l(a),n.flags|=1,lr(r,n,l,i),n.child;case 14:return a=n.type,m=Tr(a,n.pendingProps),m=Tr(a.type,m),Ou(r,n,a,m,l,i);case 15:return Lu(r,n,n.type,n.pendingProps,l,i);case 17:return l=n.type,a=n.pendingProps,a=n.elementType===l?a:Tr(l,a),r!==null&&(r.alternate=null,n.alternate=null,n.flags|=2),n.tag=1,nr(l)?(r=!0,Fs(n)):r=!1,jn(n,i),wo(n,l,a),Gs(n,l,a,i),ns(null,n,l,!0,r,i);case 19:return Mu(r,n,i);case 23:return Po(r,n,i);case 24:return Po(r,n,i)}throw Error(U(156,n.tag))};function ff(r,n,i,l){this.tag=r,this.key=i,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=n,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=l,this.flags=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childLanes=this.lanes=0,this.alternate=null}function vr(r,n,i,l){return new ff(r,n,i,l)}function Jo(r){return r=r.prototype,!(!r||!r.isReactComponent)}function mf(r){if(typeof r=="function")return Jo(r)?1:0;if(r!=null){if(r=r.$$typeof,r===Ut)return 11;if(r===$t)return 14}return 2}function Lr(r,n){var i=r.alternate;return i===null?(i=vr(r.tag,n,r.key,r.mode),i.elementType=r.elementType,i.type=r.type,i.stateNode=r.stateNode,i.alternate=r,r.alternate=i):(i.pendingProps=n,i.type=r.type,i.flags=0,i.nextEffect=null,i.firstEffect=null,i.lastEffect=null),i.childLanes=r.childLanes,i.lanes=r.lanes,i.child=r.child,i.memoizedProps=r.memoizedProps,i.memoizedState=r.memoizedState,i.updateQueue=r.updateQueue,n=r.dependencies,i.dependencies=n===null?null:{lanes:n.lanes,firstContext:n.firstContext},i.sibling=r.sibling,i.index=r.index,i.ref=r.ref,i}function dl(r,n,i,l,a,m){var y=2;if(l=r,typeof r=="function")Jo(r)&&(y=1);else if(typeof r=="string")y=5;else e:switch(r){case Tt:return yn(i.children,a,m,n);case ae:y=8,a|=16;break;case wr:y=8,a|=1;break;case it:return r=vr(12,i,n,a|8),r.elementType=it,r.type=it,r.lanes=m,r;case Mt:return r=vr(13,i,n,a),r.type=Mt,r.elementType=Mt,r.lanes=m,r;case jt:return r=vr(19,i,n,a),r.elementType=jt,r.lanes=m,r;case he:return Qo(i,a,m,n);case Re:return r=vr(24,i,n,a),r.elementType=Re,r.lanes=m,r;default:if(typeof r=="object"&&r!==null)switch(r.$$typeof){case ot:y=10;break e;case Vt:y=9;break e;case Ut:y=11;break e;case $t:y=14;break e;case M:y=16,l=null;break e;case se:y=22;break e}throw Error(U(130,r==null?r:typeof r,""))}return n=vr(y,i,n,a),n.elementType=r,n.type=l,n.lanes=m,n}function yn(r,n,i,l){return r=vr(7,r,l,n),r.lanes=i,r}function Qo(r,n,i,l){return r=vr(23,r,l,n),r.elementType=he,r.lanes=i,r}function Xo(r,n,i){return r=vr(6,r,null,n),r.lanes=i,r}function yl(r,n,i){return n=vr(4,r.children!==null?r.children:[],r.key,n),n.lanes=i,n.stateNode={containerInfo:r.containerInfo,pendingChildren:null,implementation:r.implementation},n}function vl(r,n,i){this.tag=n,this.containerInfo=r,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=i,this.callbackNode=null,this.callbackPriority=0,this.eventTimes=Ta(0),this.expirationTimes=Ta(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=Ta(0),this.mutableSourceEagerHydrationData=null}function nc(r,n,i){var l=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{$$typeof:gt,key:l==null?null:""+l,children:r,containerInfo:n,implementation:i}}function ps(r,n,i,l){var a=n.current,m=ar(),y=pn(a);e:if(i){i=i._reactInternals;t:{if(zn(i)!==i||i.tag!==1)throw Error(U(170));var g=i;do{switch(g.tag){case 3:g=g.stateNode.context;break t;case 1:if(nr(g.type)){g=g.stateNode.__reactInternalMemoizedMergedChildContext;break t}}g=g.return}while(g!==null);throw Error(U(171))}if(i.tag===1){var T=i.type;if(nr(T)){i=su(i,T,g);break e}}i=g}else i=ln;return n.context===null?n.context=i:n.pendingContext=i,n=Bt(m,y),n.payload={element:r},l=l===void 0?null:l,l!==null&&(n.callback=l),an(a,n),hn(a,y,m),y}function vn(r){if(r=r.current,!r.child)return null;switch(r.child.tag){case 5:return r.child.stateNode;default:return r.child.stateNode}}function Ko(r,n){if(r=r.memoizedState,r!==null&&r.dehydrated!==null){var i=r.retryLane;r.retryLane=i!==0&&i<n?i:n}}function gl(r,n){Ko(r,n),(r=r.alternate)&&Ko(r,n)}function pf(){return null}function di(r,n,i){var l=i!=null&&i.hydrationOptions!=null&&i.hydrationOptions.mutableSources||null;if(i=new vl(r,n,i!=null&&i.hydrate===!0),n=vr(3,null,null,n===2?7:n===1?3:0),i.current=n,n.stateNode=i,bo(n),r[Xn]=i.current,Ka(r.nodeType===8?r.parentNode:r),l)for(r=0;r<l.length;r++){n=l[r];var a=n._getVersion;a=a(n._source),i.mutableSourceEagerHydrationData==null?i.mutableSourceEagerHydrationData=[n,a]:i.mutableSourceEagerHydrationData.push(n,a)}this._internalRoot=i}di.prototype.render=function(r){ps(r,this._internalRoot,null,null)},di.prototype.unmount=function(){var r=this._internalRoot,n=r.containerInfo;ps(null,r,null,function(){n[Xn]=null})};function yi(r){return!(!r||r.nodeType!==1&&r.nodeType!==9&&r.nodeType!==11&&(r.nodeType!==8||r.nodeValue!==" react-mount-point-unstable "))}function Zo(r,n){if(n||(n=r?r.nodeType===9?r.documentElement:r.firstChild:null,n=!(!n||n.nodeType!==1||!n.hasAttribute("data-reactroot"))),!n)for(var i;i=r.lastChild;)r.removeChild(i);return new di(r,0,n?{hydrate:!0}:void 0)}function bl(r,n,i,l,a){var m=i._reactRootContainer;if(m){var y=m._internalRoot;if(typeof a=="function"){var g=a;a=function(){var B=vn(y);g.call(B)}}ps(n,y,r,a)}else{if(m=i._reactRootContainer=Zo(i,l),y=m._internalRoot,typeof a=="function"){var T=a;a=function(){var B=vn(y);T.call(B)}}Qu(function(){ps(n,y,r,a)})}return vn(y)}dc=function(r){if(r.tag===13){var n=ar();hn(r,4,n),gl(r,4)}},_a=function(r){if(r.tag===13){var n=ar();hn(r,67108864,n),gl(r,67108864)}},yc=function(r){if(r.tag===13){var n=ar(),i=pn(r);hn(r,i,n),gl(r,i)}},xa=function(r,n){return n()},Tl=function(r,n,i){switch(n){case"input":if(xl(r,i),n=i.name,i.type==="radio"&&n!=null){for(i=r;i.parentNode;)i=i.parentNode;for(i=i.querySelectorAll("input[name="+JSON.stringify(""+n)+'][type="radio"]'),n=0;n<i.length;n++){var l=i[n];if(l!==r&&l.form===r.form){var a=Is(l);if(!a)throw Error(U(90));wt(l),xl(l,a)}}}break;case"textarea":Jr(r,i);break;case"select":n=i.value,n!=null&&gi(r,!!i.multiple,n,!1)}},ur=Ju,Dn=function(r,n,i,l,a){var m=Ne;Ne|=4;try{return On(98,r.bind(null,n,i,l,a))}finally{Ne=m,Ne===0&&(fi(),Rr())}},cr=function(){(Ne&49)===0&&(nf(),dn())},$l=function(r,n){var i=Ne;Ne|=2;try{return r(n)}finally{Ne=i,Ne===0&&(fi(),Rr())}};function wl(r,n){var i=2<arguments.length&&arguments[2]!==void 0?arguments[2]:null;if(!yi(n))throw Error(U(200));return nc(r,n,null,i)}var ic={Events:[Mi,Kn,Is,ya,va,dn,{current:!1}]},vi={findFiberByHostInstance:Tn,bundleType:0,version:"17.0.2",rendererPackageName:"react-dom"},hf={bundleType:vi.bundleType,version:vi.version,rendererPackageName:vi.rendererPackageName,rendererConfig:vi.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:At.ReactCurrentDispatcher,findHostInstanceByFiber:function(r){return r=pc(r),r===null?null:r.stateNode},findFiberByHostInstance:vi.findFiberByHostInstance||pf,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null};if(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__!="undefined"){var _l=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!_l.isDisabled&&_l.supportsFiber)try{mo=_l.inject(hf),Cn=_l}catch(r){}}P.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=ic,P.createPortal=wl,P.findDOMNode=function(r){if(r==null)return null;if(r.nodeType===1)return r;var n=r._reactInternals;if(n===void 0)throw typeof r.render=="function"?Error(U(188)):Error(U(268,Object.keys(r)));return r=pc(n),r=r===null?null:r.stateNode,r},P.flushSync=function(r,n){var i=Ne;if((i&48)!==0)return r(n);Ne|=1;try{if(r)return On(99,r.bind(null,n))}finally{Ne=i,Rr()}},P.hydrate=function(r,n,i){if(!yi(n))throw Error(U(200));return bl(null,r,n,!0,i)},P.render=function(r,n,i){if(!yi(n))throw Error(U(200));return bl(null,r,n,!1,i)},P.unmountComponentAtNode=function(r){if(!yi(r))throw Error(U(40));return r._reactRootContainer?(Qu(function(){bl(null,null,r,!1,function(){r._reactRootContainer=null,r[Xn]=null})}),!0):!1},P.unstable_batchedUpdates=Ju,P.unstable_createPortal=function(r,n){return wl(r,n,2<arguments.length&&arguments[2]!==void 0?arguments[2]:null)},P.unstable_renderSubtreeIntoContainer=function(r,n,i,l){if(!yi(i))throw Error(U(200));if(r==null||r._reactInternals===void 0)throw Error(U(38));return bl(r,n,i,!1,l)},P.version="17.0.2"},194:(Oe,P,X)=>{"use strict";function ke(){if(!(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__=="undefined"||typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE!="function"))try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(ke)}catch(pe){console.error(pe)}}ke(),Oe.exports=X(760)},736:(Oe,P,X)=>{"use strict";/** @license React v17.0.2
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var ke=X(0),pe=60103,oe=60106;P.Fragment=60107,P.StrictMode=60108,P.Profiler=60114;var U=60109,ct=60110,qe=60112;P.Suspense=60113;var Qe=60115,nt=60116;if(typeof Symbol=="function"&&Symbol.for){var ze=Symbol.for;pe=ze("react.element"),oe=ze("react.portal"),P.Fragment=ze("react.fragment"),P.StrictMode=ze("react.strict_mode"),P.Profiler=ze("react.profiler"),U=ze("react.provider"),ct=ze("react.context"),qe=ze("react.forward_ref"),P.Suspense=ze("react.suspense"),Qe=ze("react.memo"),nt=ze("react.lazy")}var br=typeof Symbol=="function"&&Symbol.iterator;function qt(M){return M===null||typeof M!="object"?null:(M=br&&M[br]||M["@@iterator"],typeof M=="function"?M:null)}function Rt(M){for(var se="https://reactjs.org/docs/error-decoder.html?invariant="+M,Y=1;Y<arguments.length;Y++)se+="&args[]="+encodeURIComponent(arguments[Y]);return"Minified React error #"+M+"; visit "+se+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var Ot={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},Kt={};function Lt(M,se,Y){this.props=M,this.context=se,this.refs=Kt,this.updater=Y||Ot}Lt.prototype.isReactComponent={},Lt.prototype.setState=function(M,se){if(typeof M!="object"&&typeof M!="function"&&M!=null)throw Error(Rt(85));this.updater.enqueueSetState(this,M,se,"setState")},Lt.prototype.forceUpdate=function(M){this.updater.enqueueForceUpdate(this,M,"forceUpdate")};function lt(){}lt.prototype=Lt.prototype;function at(M,se,Y){this.props=M,this.context=se,this.refs=Kt,this.updater=Y||Ot}var Ze=at.prototype=new lt;Ze.constructor=at,ke(Ze,Lt.prototype),Ze.isPureReactComponent=!0;var kt={current:null},ft=Object.prototype.hasOwnProperty,Et={key:!0,ref:!0,__self:!0,__source:!0};function At(M,se,Y){var ae,he={},Re=null,Te=null;if(se!=null)for(ae in se.ref!==void 0&&(Te=se.ref),se.key!==void 0&&(Re=""+se.key),se)ft.call(se,ae)&&!Et.hasOwnProperty(ae)&&(he[ae]=se[ae]);var Ge=arguments.length-2;if(Ge===1)he.children=Y;else if(1<Ge){for(var Ue=Array(Ge),yt=0;yt<Ge;yt++)Ue[yt]=arguments[yt+2];he.children=Ue}if(M&&M.defaultProps)for(ae in Ge=M.defaultProps,Ge)he[ae]===void 0&&(he[ae]=Ge[ae]);return{$$typeof:pe,type:M,key:Re,ref:Te,props:he,_owner:kt.current}}function Zt(M,se){return{$$typeof:pe,type:M.type,key:se,ref:M.ref,props:M.props,_owner:M._owner}}function gt(M){return typeof M=="object"&&M!==null&&M.$$typeof===pe}function Tt(M){var se={"=":"=0",":":"=2"};return"$"+M.replace(/[=:]/g,function(Y){return se[Y]})}var wr=/\/+/g;function it(M,se){return typeof M=="object"&&M!==null&&M.key!=null?Tt(""+M.key):se.toString(36)}function ot(M,se,Y,ae,he){var Re=typeof M;(Re==="undefined"||Re==="boolean")&&(M=null);var Te=!1;if(M===null)Te=!0;else switch(Re){case"string":case"number":Te=!0;break;case"object":switch(M.$$typeof){case pe:case oe:Te=!0}}if(Te)return Te=M,he=he(Te),M=ae===""?"."+it(Te,0):ae,Array.isArray(he)?(Y="",M!=null&&(Y=M.replace(wr,"$&/")+"/"),ot(he,se,Y,"",function(yt){return yt})):he!=null&&(gt(he)&&(he=Zt(he,Y+(!he.key||Te&&Te.key===he.key?"":(""+he.key).replace(wr,"$&/")+"/")+M)),se.push(he)),1;if(Te=0,ae=ae===""?".":ae+":",Array.isArray(M))for(var Ge=0;Ge<M.length;Ge++){Re=M[Ge];var Ue=ae+it(Re,Ge);Te+=ot(Re,se,Y,Ue,he)}else if(Ue=qt(M),typeof Ue=="function")for(M=Ue.call(M),Ge=0;!(Re=M.next()).done;)Re=Re.value,Ue=ae+it(Re,Ge++),Te+=ot(Re,se,Y,Ue,he);else if(Re==="object")throw se=""+M,Error(Rt(31,se==="[object Object]"?"object with keys {"+Object.keys(M).join(", ")+"}":se));return Te}function Vt(M,se,Y){if(M==null)return M;var ae=[],he=0;return ot(M,ae,"","",function(Re){return se.call(Y,Re,he++)}),ae}function Ut(M){if(M._status===-1){var se=M._result;se=se(),M._status=0,M._result=se,se.then(function(Y){M._status===0&&(Y=Y.default,M._status=1,M._result=Y)},function(Y){M._status===0&&(M._status=2,M._result=Y)})}if(M._status===1)return M._result;throw M._result}var Mt={current:null};function jt(){var M=Mt.current;if(M===null)throw Error(Rt(321));return M}var $t={ReactCurrentDispatcher:Mt,ReactCurrentBatchConfig:{transition:0},ReactCurrentOwner:kt,IsSomeRendererActing:{current:!1},assign:ke};P.Children={map:Vt,forEach:function(M,se,Y){Vt(M,function(){se.apply(this,arguments)},Y)},count:function(M){var se=0;return Vt(M,function(){se++}),se},toArray:function(M){return Vt(M,function(se){return se})||[]},only:function(M){if(!gt(M))throw Error(Rt(143));return M}},P.Component=Lt,P.PureComponent=at,P.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=$t,P.cloneElement=function(M,se,Y){if(M==null)throw Error(Rt(267,M));var ae=ke({},M.props),he=M.key,Re=M.ref,Te=M._owner;if(se!=null){if(se.ref!==void 0&&(Re=se.ref,Te=kt.current),se.key!==void 0&&(he=""+se.key),M.type&&M.type.defaultProps)var Ge=M.type.defaultProps;for(Ue in se)ft.call(se,Ue)&&!Et.hasOwnProperty(Ue)&&(ae[Ue]=se[Ue]===void 0&&Ge!==void 0?Ge[Ue]:se[Ue])}var Ue=arguments.length-2;if(Ue===1)ae.children=Y;else if(1<Ue){Ge=Array(Ue);for(var yt=0;yt<Ue;yt++)Ge[yt]=arguments[yt+2];ae.children=Ge}return{$$typeof:pe,type:M.type,key:he,ref:Re,props:ae,_owner:Te}},P.createContext=function(M,se){return se===void 0&&(se=null),M={$$typeof:ct,_calculateChangedBits:se,_currentValue:M,_currentValue2:M,_threadCount:0,Provider:null,Consumer:null},M.Provider={$$typeof:U,_context:M},M.Consumer=M},P.createElement=At,P.createFactory=function(M){var se=At.bind(null,M);return se.type=M,se},P.createRef=function(){return{current:null}},P.forwardRef=function(M){return{$$typeof:qe,render:M}},P.isValidElement=gt,P.lazy=function(M){return{$$typeof:nt,_payload:{_status:-1,_result:M},_init:Ut}},P.memo=function(M,se){return{$$typeof:Qe,type:M,compare:se===void 0?null:se}},P.useCallback=function(M,se){return jt().useCallback(M,se)},P.useContext=function(M,se){return jt().useContext(M,se)},P.useDebugValue=function(){},P.useEffect=function(M,se){return jt().useEffect(M,se)},P.useImperativeHandle=function(M,se,Y){return jt().useImperativeHandle(M,se,Y)},P.useLayoutEffect=function(M,se){return jt().useLayoutEffect(M,se)},P.useMemo=function(M,se){return jt().useMemo(M,se)},P.useReducer=function(M,se,Y){return jt().useReducer(M,se,Y)},P.useRef=function(M){return jt().useRef(M)},P.useState=function(M){return jt().useState(M)},P.version="17.0.2"},898:(Oe,P,X)=>{"use strict";Oe.exports=X(736)},48:(Oe,P)=>{"use strict";/** @license React v0.20.2
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var X,ke,pe,oe;if(typeof performance=="object"&&typeof performance.now=="function"){var U=performance;P.unstable_now=function(){return U.now()}}else{var ct=Date,qe=ct.now();P.unstable_now=function(){return ct.now()-qe}}if(typeof window=="undefined"||typeof MessageChannel!="function"){var Qe=null,nt=null,ze=function(){if(Qe!==null)try{var Y=P.unstable_now();Qe(!0,Y),Qe=null}catch(ae){throw setTimeout(ze,0),ae}};X=function(Y){Qe!==null?setTimeout(X,0,Y):(Qe=Y,setTimeout(ze,0))},ke=function(Y,ae){nt=setTimeout(Y,ae)},pe=function(){clearTimeout(nt)},P.unstable_shouldYield=function(){return!1},oe=P.unstable_forceFrameRate=function(){}}else{var br=window.setTimeout,qt=window.clearTimeout;if(typeof console!="undefined"){var Rt=window.cancelAnimationFrame;typeof window.requestAnimationFrame!="function"&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills"),typeof Rt!="function"&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills")}var Ot=!1,Kt=null,Lt=-1,lt=5,at=0;P.unstable_shouldYield=function(){return P.unstable_now()>=at},oe=function(){},P.unstable_forceFrameRate=function(Y){0>Y||125<Y?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):lt=0<Y?Math.floor(1e3/Y):5};var Ze=new MessageChannel,kt=Ze.port2;Ze.port1.onmessage=function(){if(Kt!==null){var Y=P.unstable_now();at=Y+lt;try{Kt(!0,Y)?kt.postMessage(null):(Ot=!1,Kt=null)}catch(ae){throw kt.postMessage(null),ae}}else Ot=!1},X=function(Y){Kt=Y,Ot||(Ot=!0,kt.postMessage(null))},ke=function(Y,ae){Lt=br(function(){Y(P.unstable_now())},ae)},pe=function(){qt(Lt),Lt=-1}}function ft(Y,ae){var he=Y.length;Y.push(ae);e:for(;;){var Re=he-1>>>1,Te=Y[Re];if(Te!==void 0&&0<Zt(Te,ae))Y[Re]=ae,Y[he]=Te,he=Re;else break e}}function Et(Y){return Y=Y[0],Y===void 0?null:Y}function At(Y){var ae=Y[0];if(ae!==void 0){var he=Y.pop();if(he!==ae){Y[0]=he;e:for(var Re=0,Te=Y.length;Re<Te;){var Ge=2*(Re+1)-1,Ue=Y[Ge],yt=Ge+1,er=Y[yt];if(Ue!==void 0&&0>Zt(Ue,he))er!==void 0&&0>Zt(er,Ue)?(Y[Re]=er,Y[yt]=he,Re=yt):(Y[Re]=Ue,Y[Ge]=he,Re=Ge);else if(er!==void 0&&0>Zt(er,he))Y[Re]=er,Y[yt]=he,Re=yt;else break e}}return ae}return null}function Zt(Y,ae){var he=Y.sortIndex-ae.sortIndex;return he!==0?he:Y.id-ae.id}var gt=[],Tt=[],wr=1,it=null,ot=3,Vt=!1,Ut=!1,Mt=!1;function jt(Y){for(var ae=Et(Tt);ae!==null;){if(ae.callback===null)At(Tt);else if(ae.startTime<=Y)At(Tt),ae.sortIndex=ae.expirationTime,ft(gt,ae);else break;ae=Et(Tt)}}function $t(Y){if(Mt=!1,jt(Y),!Ut)if(Et(gt)!==null)Ut=!0,X(M);else{var ae=Et(Tt);ae!==null&&ke($t,ae.startTime-Y)}}function M(Y,ae){Ut=!1,Mt&&(Mt=!1,pe()),Vt=!0;var he=ot;try{for(jt(ae),it=Et(gt);it!==null&&(!(it.expirationTime>ae)||Y&&!P.unstable_shouldYield());){var Re=it.callback;if(typeof Re=="function"){it.callback=null,ot=it.priorityLevel;var Te=Re(it.expirationTime<=ae);ae=P.unstable_now(),typeof Te=="function"?it.callback=Te:it===Et(gt)&&At(gt),jt(ae)}else At(gt);it=Et(gt)}if(it!==null)var Ge=!0;else{var Ue=Et(Tt);Ue!==null&&ke($t,Ue.startTime-ae),Ge=!1}return Ge}finally{it=null,ot=he,Vt=!1}}var se=oe;P.unstable_IdlePriority=5,P.unstable_ImmediatePriority=1,P.unstable_LowPriority=4,P.unstable_NormalPriority=3,P.unstable_Profiling=null,P.unstable_UserBlockingPriority=2,P.unstable_cancelCallback=function(Y){Y.callback=null},P.unstable_continueExecution=function(){Ut||Vt||(Ut=!0,X(M))},P.unstable_getCurrentPriorityLevel=function(){return ot},P.unstable_getFirstCallbackNode=function(){return Et(gt)},P.unstable_next=function(Y){switch(ot){case 1:case 2:case 3:var ae=3;break;default:ae=ot}var he=ot;ot=ae;try{return Y()}finally{ot=he}},P.unstable_pauseExecution=function(){},P.unstable_requestPaint=se,P.unstable_runWithPriority=function(Y,ae){switch(Y){case 1:case 2:case 3:case 4:case 5:break;default:Y=3}var he=ot;ot=Y;try{return ae()}finally{ot=he}},P.unstable_scheduleCallback=function(Y,ae,he){var Re=P.unstable_now();switch(typeof he=="object"&&he!==null?(he=he.delay,he=typeof he=="number"&&0<he?Re+he:Re):he=Re,Y){case 1:var Te=-1;break;case 2:Te=250;break;case 5:Te=1073741823;break;case 4:Te=1e4;break;default:Te=5e3}return Te=he+Te,Y={id:wr++,callback:ae,priorityLevel:Y,startTime:he,expirationTime:Te,sortIndex:-1},he>Re?(Y.sortIndex=he,ft(Tt,Y),Et(gt)===null&&Y===Et(Tt)&&(Mt?pe():Mt=!0,ke($t,he-Re))):(Y.sortIndex=Te,ft(gt,Y),Ut||Vt||(Ut=!0,X(M))),Y},P.unstable_wrapCallback=function(Y){var ae=ot;return function(){var he=ot;ot=ae;try{return Y.apply(this,arguments)}finally{ot=he}}}},595:(Oe,P,X)=>{"use strict";Oe.exports=X(48)},977:(Oe,P,X)=>{"use strict";X.r(P),X.d(P,{TypeStyle:()=>Mt,classes:()=>wr,createTypeStyle:()=>er,cssRaw:()=>se,cssRule:()=>Y,extend:()=>it,fontFace:()=>he,forceRenderStyles:()=>ae,getStyles:()=>Re,keyframes:()=>Te,media:()=>ot,reinit:()=>Ge,setStylesTarget:()=>M,style:()=>Ue,stylesheet:()=>yt,types:()=>jt});let ke=0;const pe=Object.create(null),oe=["animation-iteration-count","border-image-outset","border-image-slice","border-image-width","box-flex","box-flex-group","box-ordinal-group","column-count","columns","counter-increment","counter-reset","flex","flex-grow","flex-positive","flex-shrink","flex-negative","flex-order","font-weight","grid-area","grid-column","grid-column-end","grid-column-span","grid-column-start","grid-row","grid-row-end","grid-row-span","grid-row-start","line-clamp","line-height","opacity","order","orphans","tab-size","widows","z-index","zoom","fill-opacity","flood-opacity","stop-opacity","stroke-dasharray","stroke-dashoffset","stroke-miterlimit","stroke-opacity","stroke-width"];for(const ie of oe)for(const z of["-webkit-","-ms-","-moz-","-o-",""])pe[z+ie]=!0;function U(ie){return ie.replace(/[ !#$%&()*+,./;<=>?@[\]^`{|}~"'\\]/g,"\\$&")}function ct(ie){return ie.replace(/[A-Z]/g,z=>`-${z.toLowerCase()}`).replace(/^ms-/,"-ms-")}function qe(ie){let z=5381,J=ie.length;for(;J--;)z=z*33^ie.charCodeAt(J);return(z>>>0).toString(36)}function Qe(ie,z){return z&&typeof z=="number"&&!pe[ie]?`${ie}:${z}px`:`${ie}:${z}`}function nt(ie){return ie.sort((z,J)=>z[0]>J[0]?1:-1)}function ze(ie,z){const J=[],ue=[];for(const $e of Object.keys(ie)){const Se=$e.trim(),Ce=ie[$e];Se.charCodeAt(0)!==36&&Ce!=null&&(typeof Ce=="object"&&!Array.isArray(Ce)?ue.push([Se,Ce]):J.push([ct(Se),Ce]))}return{style:br(nt(J)),nested:z?ue:nt(ue),isUnique:!!ie.$unique}}function br(ie){return ie.map(([z,J])=>Array.isArray(J)?J.map(ue=>Qe(z,ue)).join(";"):Qe(z,J)).join(";")}function qt(ie,z){return ie.indexOf("&")===-1?`${z} ${ie}`:ie.replace(/&/g,z)}function Rt(ie,z,J,ue,$e){const{style:Se,nested:Ce,isUnique:Fe}=ze(z,ie!=="");let wt=Se;if(ie.charCodeAt(0)===64){const _t={selector:ie,styles:[],rules:[],style:$e?"":Se};J.push(_t),Se&&$e&&_t.styles.push({selector:$e,style:Se,isUnique:Fe});for(const[Ct,tr]of Ce)wt+=Ct+Rt(Ct,tr,_t.rules,_t.styles,$e)}else{const _t=$e?qt(ie,$e):ie;Se&&ue.push({selector:_t,style:Se,isUnique:Fe});for(const[Ct,tr]of Ce)wt+=Ct+Rt(Ct,tr,J,ue,_t)}return wt}function Ot(ie,z,J,ue,$e,Se){for(const{selector:Ce,style:Fe,isUnique:wt}of ue){const _t=Se?qt(Ce,$e):Ce,Ct=wt?`u\0${(++ke).toString(36)}`:`s\0${z}\0${Fe}`,tr=new Ze(Fe,Ct);tr.add(new at(_t,`k\0${z}\0${_t}`)),ie.add(tr)}for(const{selector:Ce,style:Fe,rules:wt,styles:_t}of J){const Ct=new kt(Ce,Fe,`r\0${z}\0${Ce}\0${Fe}`);Ot(Ct,z,wt,_t,$e,Se),ie.add(Ct)}}function Kt(ie){let z="";for(let J=0;J<ie.length;J++)z+=ie[J];return z}const Lt={add:()=>{},change:()=>{},remove:()=>{}};class lt{constructor(z=Lt){this.changes=z,this.sheet=[],this.changeId=0,this._keys=[],this._children=Object.create(null),this._counters=Object.create(null)}add(z){const J=this._counters[z.id]||0,ue=this._children[z.id]||z.clone();if(this._counters[z.id]=J+1,J===0)this._children[ue.id]=ue,this._keys.push(ue.id),this.sheet.push(ue.getStyles()),this.changeId++,this.changes.add(ue,this._keys.length-1);else if(ue instanceof lt&&z instanceof lt){const $e=this._keys.indexOf(z.id),Se=ue.changeId;ue.merge(z),ue.changeId!==Se&&(this.sheet.splice($e,1,ue.getStyles()),this.changeId++,this.changes.change(ue,$e,$e))}}remove(z){const J=this._counters[z.id];if(J){this._counters[z.id]=J-1;const ue=this._children[z.id],$e=this._keys.indexOf(ue.id);if(J===1)delete this._counters[z.id],delete this._children[z.id],this._keys.splice($e,1),this.sheet.splice($e,1),this.changeId++,this.changes.remove(ue,$e);else if(ue instanceof lt&&z instanceof lt){const Se=ue.changeId;ue.unmerge(z),ue.changeId!==Se&&(this.sheet.splice($e,1,ue.getStyles()),this.changeId++,this.changes.change(ue,$e,$e))}}}values(){return this._keys.map(z=>this._children[z])}merge(z){for(const J of z.values())this.add(J);return this}unmerge(z){for(const J of z.values())this.remove(J);return this}clone(){return new lt().merge(this)}}class at{constructor(z,J){this.selector=z,this.id=J}getStyles(){return this.selector}clone(){return this}}class Ze extends lt{constructor(z,J){super(),this.style=z,this.id=J}getStyles(){return`${this.sheet.join(",")}{${this.style}}`}clone(){return new Ze(this.style,this.id).merge(this)}}class kt extends lt{constructor(z,J,ue){super(),this.rule=z,this.style=J,this.id=ue}getStyles(){return`${this.rule}{${this.style}${Kt(this.sheet)}}`}clone(){return new kt(this.rule,this.style,this.id).merge(this)}}function ft(ie,z){const J=`f${qe(ie)}`;return J}class Et extends lt{constructor(z,J){super(J),this.id=z}registerStyle(z){const J=[],ue=[],$e=Rt("&",z,J,ue),Se=ft($e,z),Ce=`.${Se}`;return Ot(this,$e,J,ue,Ce,!0),Se}registerKeyframes(z){return this.registerHashRule("@keyframes",z)}registerHashRule(z,J){const ue=[],$e=[],Se=Rt("",J,ue,$e),Ce=ft(Se,J),Fe=`${z} ${Ce}`,wt=new kt(Fe,"",`h\0${Se}\0${z}`);return Ot(wt,Se,ue,$e,"",!1),this.add(wt),Ce}registerRule(z,J){const ue=[],$e=[],Se=Rt(z,J,ue,$e);Ot(this,Se,ue,$e,"",!1)}registerCss(z){return this.registerRule("",z)}getStyles(){return Kt(this.sheet)}clone(){return new Et(this.id,this.changes).merge(this)}}function At(ie){return new Et(`f${(++ke).toString(36)}`,ie)}function Zt(ie){var z={};for(var J in ie){var ue=ie[J];if(J==="$nest"){var $e=ue;for(var Se in $e){var Ce=$e[Se];z[Se]=Zt(Ce)}}else J==="$debugName"?z.$displayName=ue:z[J]=ue}return z}function gt(ie){var z={};for(var J in ie)J!=="$debugName"&&(z[J]=ie[J]);return ie.$debugName&&(z.$displayName=ie.$debugName),z}var Tt=typeof requestAnimationFrame=="undefined"?function(ie){return setTimeout(ie)}:typeof window=="undefined"?requestAnimationFrame:requestAnimationFrame.bind(window);function wr(){for(var ie=[],z=0;z<arguments.length;z++)ie[z]=arguments[z];return ie.map(function(J){return J&&typeof J=="object"?Object.keys(J).map(function(ue){return!!J[ue]&&ue}):[J]}).reduce(function(J,ue){return J.concat(ue)},[]).filter(function(J){return!!J}).join(" ")}function it(){for(var ie=[],z=0;z<arguments.length;z++)ie[z]=arguments[z];for(var J={},ue=0,$e=ie;ue<$e.length;ue++){var Se=$e[ue];if(!(Se==null||Se===!1))for(var Ce in Se){var Fe=Se[Ce];!Fe&&Fe!==0||(Ce==="$nest"&&Fe?J[Ce]=J.$nest?it(J.$nest,Fe):Fe:Ce.indexOf("&")!==-1||Ce.indexOf("@media")===0?J[Ce]=J[Ce]?it(J[Ce],Fe):Fe:J[Ce]=Fe)}}return J}var ot=function(ie){for(var z,J=[],ue=1;ue<arguments.length;ue++)J[ue-1]=arguments[ue];var $e=[];ie.type&&$e.push(ie.type),ie.orientation&&$e.push("(orientation: "+ie.orientation+")"),ie.minWidth&&$e.push("(min-width: "+Vt(ie.minWidth)+")"),ie.maxWidth&&$e.push("(max-width: "+Vt(ie.maxWidth)+")"),ie.minHeight&&$e.push("(min-height: "+Vt(ie.minHeight)+")"),ie.maxHeight&&$e.push("(max-height: "+Vt(ie.maxHeight)+")");var Se="@media "+$e.join(" and "),Ce={$nest:(z={},z[Se]=it.apply(void 0,J),z)};return Ce},Vt=function(ie){return typeof ie=="string"?ie:ie+"px"},Ut=function(){return At()},Mt=function(){function ie(z){var J=this,ue=z.autoGenerateTag;this.cssRaw=function(Se){!Se||(J._raw+=Se||"",J._pendingRawChange=!0,J._styleUpdated())},this.cssRule=function(Se){for(var Ce=[],Fe=1;Fe<arguments.length;Fe++)Ce[Fe-1]=arguments[Fe];var wt=Zt(it.apply(void 0,Ce));J._freeStyle.registerRule(Se,wt),J._styleUpdated()},this.forceRenderStyles=function(){var Se=J._getTag();!Se||(Se.textContent=J.getStyles())},this.fontFace=function(){for(var Se=[],Ce=0;Ce<arguments.length;Ce++)Se[Ce]=arguments[Ce];for(var Fe=J._freeStyle,wt=0,_t=Se;wt<_t.length;wt++){var Ct=_t[wt];Fe.registerRule("@font-face",Ct)}J._styleUpdated()},this.getStyles=function(){return(J._raw||"")+J._freeStyle.getStyles()},this.keyframes=function(Se){var Ce=gt(Se),Fe=J._freeStyle.registerKeyframes(Ce);return J._styleUpdated(),Fe},this.reinit=function(){var Se=Ut();J._freeStyle=Se,J._lastFreeStyleChangeId=Se.changeId,J._raw="",J._pendingRawChange=!1;var Ce=J._getTag();Ce&&(Ce.textContent="")},this.setStylesTarget=function(Se){J._tag&&(J._tag.textContent=""),J._tag=Se,J.forceRenderStyles()},this.stylesheet=function(Se){for(var Ce=Object.getOwnPropertyNames(Se),Fe={},wt=0,_t=Ce;wt<_t.length;wt++){var Ct=_t[wt],tr=Se[Ct];tr&&(tr.$debugName=Ct,Fe[Ct]=J.style(tr))}return Fe};var $e=Ut();this._autoGenerateTag=ue,this._freeStyle=$e,this._lastFreeStyleChangeId=$e.changeId,this._pending=0,this._pendingRawChange=!1,this._raw="",this._tag=void 0,this.style=this.style.bind(this)}return ie.prototype._afterAllSync=function(z){var J=this;this._pending++;var ue=this._pending;Tt(function(){ue===J._pending&&z()})},ie.prototype._getTag=function(){if(this._tag)return this._tag;if(this._autoGenerateTag){var z=typeof window=="undefined"?{textContent:""}:document.createElement("style");return typeof document!="undefined"&&document.head.appendChild(z),this._tag=z,z}},ie.prototype._styleUpdated=function(){var z=this,J=this._freeStyle.changeId,ue=this._lastFreeStyleChangeId;!this._pendingRawChange&&J===ue||(this._lastFreeStyleChangeId=J,this._pendingRawChange=!1,this._afterAllSync(function(){return z.forceRenderStyles()}))},ie.prototype.style=function(){var z=this._freeStyle.registerStyle(Zt(it.apply(void 0,arguments)));return this._styleUpdated(),z},ie}(),jt=X(341),$t=new Mt({autoGenerateTag:!0}),M=$t.setStylesTarget,se=$t.cssRaw,Y=$t.cssRule,ae=$t.forceRenderStyles,he=$t.fontFace,Re=$t.getStyles,Te=$t.keyframes,Ge=$t.reinit,Ue=$t.style,yt=$t.stylesheet;function er(ie){var z=new Mt({autoGenerateTag:!1});return ie&&z.setStylesTarget(ie),z}},341:()=>{}},Sf={};function Ke(Oe){var P=Sf[Oe];if(P!==void 0)return P.exports;var X=Sf[Oe]={exports:{}};return Hf[Oe](X,X.exports,Ke),X.exports}Ke.amdO={},Ke.d=(Oe,P)=>{for(var X in P)Ke.o(P,X)&&!Ke.o(Oe,X)&&Object.defineProperty(Oe,X,{enumerable:!0,get:P[X]})},Ke.o=(Oe,P)=>Object.prototype.hasOwnProperty.call(Oe,P),Ke.r=Oe=>{typeof Symbol!="undefined"&&Symbol.toStringTag&&Object.defineProperty(Oe,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(Oe,"__esModule",{value:!0})};var cp={};(()=>{"use strict";var Oe=Ke(322),P=Ke(194),X=Ke(898);function ke(){return ke=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var s=arguments[t];for(var o in s)Object.prototype.hasOwnProperty.call(s,o)&&(e[o]=s[o])}return e},ke.apply(this,arguments)}var pe;(function(e){e.Pop="POP",e.Push="PUSH",e.Replace="REPLACE"})(pe||(pe={}));var oe=function(e){return e};function U(e,t){if(!e){typeof console!="undefined"&&console.warn(t);try{throw new Error(t)}catch(s){}}}var ct="beforeunload",qe="hashchange",Qe="popstate";function nt(e){e===void 0&&(e={});var t=e,s=t.window,o=s===void 0?document.defaultView:s,c=o.history;function f(){var _e=o.location,ne=_e.pathname,ye=_e.search,d=_e.hash,w=c.state||{};return[w.idx,oe({pathname:ne,search:ye,hash:d,state:w.usr||null,key:w.key||"default"})]}var p=null;function k(){if(p)x.call(p),p=null;else{var _e=pe.Pop,ne=f(),ye=ne[0],d=ne[1];if(x.length){if(ye!=null){var w=h-ye;w&&(p={action:_e,location:d,retry:function(){Pe(w*-1)}},Pe(w))}}else ce(_e)}}o.addEventListener(Qe,k);var R=pe.Pop,W=f(),h=W[0],v=W[1],S=Ot(),x=Ot();h==null&&(h=0,c.replaceState(_extends({},c.state,{idx:h}),""));function j(_e){return typeof _e=="string"?_e:Lt(_e)}function A(_e,ne){return ne===void 0&&(ne=null),oe(_extends({pathname:v.pathname,hash:"",search:""},typeof _e=="string"?lt(_e):_e,{state:ne,key:Kt()}))}function K(_e,ne){return[{usr:_e.state,key:_e.key,idx:ne},j(_e)]}function te(_e,ne,ye){return!x.length||(x.call({action:_e,location:ne,retry:ye}),!1)}function ce(_e){R=_e;var ne=f();h=ne[0],v=ne[1],S.call({action:R,location:v})}function G(_e,ne){var ye=pe.Push,d=A(_e,ne);function w(){G(_e,ne)}if(te(ye,d,w)){var $=K(d,h+1),O=$[0],D=$[1];try{c.pushState(O,"",D)}catch(V){o.location.assign(D)}ce(ye)}}function le(_e,ne){var ye=pe.Replace,d=A(_e,ne);function w(){le(_e,ne)}if(te(ye,d,w)){var $=K(d,h),O=$[0],D=$[1];c.replaceState(O,"",D),ce(ye)}}function Pe(_e){c.go(_e)}var re={get action(){return R},get location(){return v},createHref:j,push:G,replace:le,go:Pe,back:function(){Pe(-1)},forward:function(){Pe(1)},listen:function(ne){return S.push(ne)},block:function(ne){var ye=x.push(ne);return x.length===1&&o.addEventListener(ct,Rt),function(){ye(),x.length||o.removeEventListener(ct,Rt)}}};return re}function ze(e){e===void 0&&(e={});var t=e,s=t.window,o=s===void 0?document.defaultView:s,c=o.history;function f(){var ne=lt(o.location.hash.substr(1)),ye=ne.pathname,d=ye===void 0?"/":ye,w=ne.search,$=w===void 0?"":w,O=ne.hash,D=O===void 0?"":O,V=c.state||{};return[V.idx,oe({pathname:d,search:$,hash:D,state:V.usr||null,key:V.key||"default"})]}var p=null;function k(){if(p)x.call(p),p=null;else{var ne=pe.Pop,ye=f(),d=ye[0],w=ye[1];if(x.length){if(d!=null){var $=h-d;$&&(p={action:ne,location:w,retry:function(){re($*-1)}},re($))}}else G(ne)}}o.addEventListener(Qe,k),o.addEventListener(qe,function(){var ne=f(),ye=ne[1];Lt(ye)!==Lt(v)&&k()});var R=pe.Pop,W=f(),h=W[0],v=W[1],S=Ot(),x=Ot();h==null&&(h=0,c.replaceState(ke({},c.state,{idx:h}),""));function j(){var ne=document.querySelector("base"),ye="";if(ne&&ne.getAttribute("href")){var d=o.location.href,w=d.indexOf("#");ye=w===-1?d:d.slice(0,w)}return ye}function A(ne){return j()+"#"+(typeof ne=="string"?ne:Lt(ne))}function K(ne,ye){return ye===void 0&&(ye=null),oe(ke({pathname:v.pathname,hash:"",search:""},typeof ne=="string"?lt(ne):ne,{state:ye,key:Kt()}))}function te(ne,ye){return[{usr:ne.state,key:ne.key,idx:ye},A(ne)]}function ce(ne,ye,d){return!x.length||(x.call({action:ne,location:ye,retry:d}),!1)}function G(ne){R=ne;var ye=f();h=ye[0],v=ye[1],S.call({action:R,location:v})}function le(ne,ye){var d=pe.Push,w=K(ne,ye);function $(){le(ne,ye)}if(ce(d,w,$)){var O=te(w,h+1),D=O[0],V=O[1];try{c.pushState(D,"",V)}catch(H){o.location.assign(V)}G(d)}}function Pe(ne,ye){var d=pe.Replace,w=K(ne,ye);function $(){Pe(ne,ye)}if(ce(d,w,$)){var O=te(w,h),D=O[0],V=O[1];c.replaceState(D,"",V),G(d)}}function re(ne){c.go(ne)}var _e={get action(){return R},get location(){return v},createHref:A,push:le,replace:Pe,go:re,back:function(){re(-1)},forward:function(){re(1)},listen:function(ye){return S.push(ye)},block:function(ye){var d=x.push(ye);return x.length===1&&o.addEventListener(ct,Rt),function(){d(),x.length||o.removeEventListener(ct,Rt)}}};return _e}function br(e){e===void 0&&(e={});var t=e,s=t.initialEntries,o=s===void 0?["/"]:s,c=t.initialIndex,f=o.map(function(G){var le=oe(_extends({pathname:"/",search:"",hash:"",state:null,key:Kt()},typeof G=="string"?lt(G):G));return le}),p=qt(c==null?f.length-1:c,0,f.length-1),k=pe.Pop,R=f[p],W=Ot(),h=Ot();function v(G){return typeof G=="string"?G:Lt(G)}function S(G,le){return le===void 0&&(le=null),oe(_extends({pathname:R.pathname,search:"",hash:""},typeof G=="string"?lt(G):G,{state:le,key:Kt()}))}function x(G,le,Pe){return!h.length||(h.call({action:G,location:le,retry:Pe}),!1)}function j(G,le){k=G,R=le,W.call({action:k,location:R})}function A(G,le){var Pe=pe.Push,re=S(G,le);function _e(){A(G,le)}x(Pe,re,_e)&&(p+=1,f.splice(p,f.length,re),j(Pe,re))}function K(G,le){var Pe=pe.Replace,re=S(G,le);function _e(){K(G,le)}x(Pe,re,_e)&&(f[p]=re,j(Pe,re))}function te(G){var le=qt(p+G,0,f.length-1),Pe=pe.Pop,re=f[le];function _e(){te(G)}x(Pe,re,_e)&&(p=le,j(Pe,re))}var ce={get index(){return p},get action(){return k},get location(){return R},createHref:v,push:A,replace:K,go:te,back:function(){te(-1)},forward:function(){te(1)},listen:function(le){return W.push(le)},block:function(le){return h.push(le)}};return ce}function qt(e,t,s){return Math.min(Math.max(e,t),s)}function Rt(e){e.preventDefault(),e.returnValue=""}function Ot(){var e=[];return{get length(){return e.length},push:function(s){return e.push(s),function(){e=e.filter(function(o){return o!==s})}},call:function(s){e.forEach(function(o){return o&&o(s)})}}}function Kt(){return Math.random().toString(36).substr(2,8)}function Lt(e){var t=e.pathname,s=t===void 0?"/":t,o=e.search,c=o===void 0?"":o,f=e.hash,p=f===void 0?"":f;return c&&c!=="?"&&(s+=c.charAt(0)==="?"?c:"?"+c),p&&p!=="#"&&(s+=p.charAt(0)==="#"?p:"#"+p),s}function lt(e){var t={};if(e){var s=e.indexOf("#");s>=0&&(t.hash=e.substr(s),e=e.substr(0,s));var o=e.indexOf("?");o>=0&&(t.search=e.substr(o),e=e.substr(0,o)),e&&(t.pathname=e)}return t}/**
 * React Router v6.3.0
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */const at=(0,X.createContext)(null),Ze=(0,X.createContext)(null),kt=(0,X.createContext)({outlet:null,matches:[]});function ft(e,t){if(!e)throw new Error(t)}function Et(e,t){if(!e){typeof console!="undefined"&&console.warn(t);try{throw new Error(t)}catch(s){}}}const At={};function Zt(e,t,s){!t&&!At[e]&&(At[e]=!0)}function gt(e,t){return t===void 0&&(t={}),e.replace(/:(\w+)/g,(s,o)=>(t[o]==null&&ft(!1),t[o])).replace(/\/*\*$/,s=>t["*"]==null?"":t["*"].replace(/^\/*/,"/"))}function Tt(e,t,s){s===void 0&&(s="/");let o=typeof t=="string"?lt(t):t,c=ie(o.pathname||"/",s);if(c==null)return null;let f=wr(e);it(f);let p=null;for(let k=0;p==null&&k<f.length;++k)p=ae(f[k],c);return p}function wr(e,t,s,o){return t===void 0&&(t=[]),s===void 0&&(s=[]),o===void 0&&(o=""),e.forEach((c,f)=>{let p={relativePath:c.path||"",caseSensitive:c.caseSensitive===!0,childrenIndex:f,route:c};p.relativePath.startsWith("/")&&(p.relativePath.startsWith(o)||ft(!1),p.relativePath=p.relativePath.slice(o.length));let k=z([o,p.relativePath]),R=s.concat(p);c.children&&c.children.length>0&&(c.index===!0&&ft(!1),wr(c.children,t,R,k)),!(c.path==null&&!c.index)&&t.push({path:k,score:se(k,c.index),routesMeta:R})}),t}function it(e){e.sort((t,s)=>t.score!==s.score?s.score-t.score:Y(t.routesMeta.map(o=>o.childrenIndex),s.routesMeta.map(o=>o.childrenIndex)))}const ot=/^:\w+$/,Vt=3,Ut=2,Mt=1,jt=10,$t=-2,M=e=>e==="*";function se(e,t){let s=e.split("/"),o=s.length;return s.some(M)&&(o+=$t),t&&(o+=Ut),s.filter(c=>!M(c)).reduce((c,f)=>c+(ot.test(f)?Vt:f===""?Mt:jt),o)}function Y(e,t){return e.length===t.length&&e.slice(0,-1).every((o,c)=>o===t[c])?e[e.length-1]-t[t.length-1]:0}function ae(e,t){let{routesMeta:s}=e,o={},c="/",f=[];for(let p=0;p<s.length;++p){let k=s[p],R=p===s.length-1,W=c==="/"?t:t.slice(c.length)||"/",h=he({path:k.relativePath,caseSensitive:k.caseSensitive,end:R},W);if(!h)return null;Object.assign(o,h.params);let v=k.route;f.push({params:o,pathname:z([c,h.pathname]),pathnameBase:J(z([c,h.pathnameBase])),route:v}),h.pathnameBase!=="/"&&(c=z([c,h.pathnameBase]))}return f}function he(e,t){typeof e=="string"&&(e={path:e,caseSensitive:!1,end:!0});let[s,o]=Re(e.path,e.caseSensitive,e.end),c=t.match(s);if(!c)return null;let f=c[0],p=f.replace(/(.)\/+$/,"$1"),k=c.slice(1);return{params:o.reduce((W,h,v)=>{if(h==="*"){let S=k[v]||"";p=f.slice(0,f.length-S.length).replace(/(.)\/+$/,"$1")}return W[h]=Te(k[v]||"",h),W},{}),pathname:f,pathnameBase:p,pattern:e}}function Re(e,t,s){t===void 0&&(t=!1),s===void 0&&(s=!0);let o=[],c="^"+e.replace(/\/*\*?$/,"").replace(/^\/*/,"/").replace(/[\\.*+^$?{}|()[\]]/g,"\\$&").replace(/:(\w+)/g,(p,k)=>(o.push(k),"([^\\/]+)"));return e.endsWith("*")?(o.push("*"),c+=e==="*"||e==="/*"?"(.*)$":"(?:\\/(.+)|\\/*)$"):c+=s?"\\/*$":"(?:(?=[.~-]|%[0-9A-F]{2})|\\b|\\/|$)",[new RegExp(c,t?void 0:"i"),o]}function Te(e,t){try{return decodeURIComponent(e)}catch(s){return e}}function Ge(e,t){t===void 0&&(t="/");let{pathname:s,search:o="",hash:c=""}=typeof e=="string"?lt(e):e;return{pathname:s?s.startsWith("/")?s:Ue(s,t):t,search:ue(o),hash:$e(c)}}function Ue(e,t){let s=t.replace(/\/+$/,"").split("/");return e.split("/").forEach(c=>{c===".."?s.length>1&&s.pop():c!=="."&&s.push(c)}),s.length>1?s.join("/"):"/"}function yt(e,t,s){let o=typeof e=="string"?lt(e):e,c=e===""||o.pathname===""?"/":o.pathname,f;if(c==null)f=s;else{let k=t.length-1;if(c.startsWith("..")){let R=c.split("/");for(;R[0]==="..";)R.shift(),k-=1;o.pathname=R.join("/")}f=k>=0?t[k]:"/"}let p=Ge(o,f);return c&&c!=="/"&&c.endsWith("/")&&!p.pathname.endsWith("/")&&(p.pathname+="/"),p}function er(e){return e===""||e.pathname===""?"/":typeof e=="string"?lt(e).pathname:e.pathname}function ie(e,t){if(t==="/")return e;if(!e.toLowerCase().startsWith(t.toLowerCase()))return null;let s=e.charAt(t.length);return s&&s!=="/"?null:e.slice(t.length)||"/"}const z=e=>e.join("/").replace(/\/\/+/g,"/"),J=e=>e.replace(/\/+$/,"").replace(/^\/*/,"/"),ue=e=>!e||e==="?"?"":e.startsWith("?")?e:"?"+e,$e=e=>!e||e==="#"?"":e.startsWith("#")?e:"#"+e;function Se(e){Ce()||ft(!1);let{basename:t,navigator:s}=(0,X.useContext)(at),{hash:o,pathname:c,search:f}=hs(e),p=c;if(t!=="/"){let k=er(e),R=k!=null&&k.endsWith("/");p=c==="/"?t+(R?"/":""):z([t,c])}return s.createHref({pathname:p,search:f,hash:o})}function Ce(){return(0,X.useContext)(Ze)!=null}function Fe(){return Ce()||ft(!1),(0,X.useContext)(Ze).location}function wt(){return useContext(Ze).navigationType}function _t(e){Ce()||ft(!1);let{pathname:t}=Fe();return useMemo(()=>he(e,t),[t,e])}function Ct(){Ce()||ft(!1);let{basename:e,navigator:t}=(0,X.useContext)(at),{matches:s}=(0,X.useContext)(kt),{pathname:o}=Fe(),c=JSON.stringify(s.map(k=>k.pathnameBase)),f=(0,X.useRef)(!1);return(0,X.useEffect)(()=>{f.current=!0}),(0,X.useCallback)(function(k,R){if(R===void 0&&(R={}),!f.current)return;if(typeof k=="number"){t.go(k);return}let W=yt(k,JSON.parse(c),o);e!=="/"&&(W.pathname=z([e,W.pathname])),(R.replace?t.replace:t.push)(W,R.state)},[e,t,c,o])}const tr=(0,X.createContext)(null);function oc(){return useContext(tr)}function xl(e){let t=(0,X.useContext)(kt).outlet;return t&&(0,X.createElement)(tr.Provider,{value:e},t)}function ac(){let{matches:e}=useContext(kt),t=e[e.length-1];return t?t.params:{}}function hs(e){let{matches:t}=(0,X.useContext)(kt),{pathname:s}=Fe(),o=JSON.stringify(t.map(c=>c.pathnameBase));return(0,X.useMemo)(()=>yt(e,JSON.parse(o),s),[e,o,s])}function uc(e,t){Ce()||ft(!1);let{matches:s}=(0,X.useContext)(kt),o=s[s.length-1],c=o?o.params:{},f=o?o.pathname:"/",p=o?o.pathnameBase:"/",k=o&&o.route,R=Fe(),W;if(t){var h;let j=typeof t=="string"?lt(t):t;p==="/"||((h=j.pathname)==null?void 0:h.startsWith(p))||ft(!1),W=j}else W=R;let v=W.pathname||"/",S=p==="/"?v:v.slice(p.length)||"/",x=Tt(e,{pathname:S});return ds(x&&x.map(j=>Object.assign({},j,{params:Object.assign({},c,j.params),pathname:z([p,j.pathname]),pathnameBase:j.pathnameBase==="/"?p:z([p,j.pathnameBase])})),s)}function ds(e,t){return t===void 0&&(t=[]),e==null?null:e.reduceRight((s,o,c)=>(0,X.createElement)(kt.Provider,{children:o.route.element!==void 0?o.route.element:s,value:{outlet:s,matches:t.concat(e.slice(0,c+1))}}),null)}function gi(e){let{basename:t,children:s,initialEntries:o,initialIndex:c}=e,f=useRef();f.current==null&&(f.current=createMemoryHistory({initialEntries:o,initialIndex:c}));let p=f.current,[k,R]=useState({action:p.action,location:p.location});return useLayoutEffect(()=>p.listen(R),[p]),createElement(Sl,{basename:t,children:s,location:k.location,navigationType:k.action,navigator:p})}function ca(e){let{to:t,replace:s,state:o}=e;Ce()||ft(!1);let c=Ct();return useEffect(()=>{c(t,{replace:s,state:o})}),null}function fa(e){return xl(e.context)}function Jr(e){ft(!1)}function Sl(e){let{basename:t="/",children:s=null,location:o,navigationType:c=pe.Pop,navigator:f,static:p=!1}=e;Ce()&&ft(!1);let k=J(t),R=(0,X.useMemo)(()=>({basename:k,navigator:f,static:p}),[k,f,p]);typeof o=="string"&&(o=lt(o));let{pathname:W="/",search:h="",hash:v="",state:S=null,key:x="default"}=o,j=(0,X.useMemo)(()=>{let A=ie(W,k);return A==null?null:{pathname:A,search:h,hash:v,state:S,key:x}},[k,W,h,v,S,x]);return j==null?null:(0,X.createElement)(at.Provider,{value:R},(0,X.createElement)(Ze.Provider,{children:s,value:{location:j,navigationType:c}}))}function kl(e){let{children:t,location:s}=e;return uc(ys(t),s)}function ys(e){let t=[];return X.Children.forEach(e,s=>{if(!(0,X.isValidElement)(s))return;if(s.type===X.Fragment){t.push.apply(t,ys(s.props.children));return}s.type!==Jr&&ft(!1);let o={caseSensitive:s.props.caseSensitive,element:s.props.element,index:s.props.index,path:s.props.path};s.props.children&&(o.children=ys(s.props.children)),t.push(o)}),t}function ma(e){return ds(e)}/**
 * React Router DOM v6.3.0
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */function Fn(){return Fn=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var s=arguments[t];for(var o in s)Object.prototype.hasOwnProperty.call(s,o)&&(e[o]=s[o])}return e},Fn.apply(this,arguments)}function pa(e,t){if(e==null)return{};var s={},o=Object.keys(e),c,f;for(f=0;f<o.length;f++)c=o[f],!(t.indexOf(c)>=0)&&(s[c]=e[c]);return s}const bi=["onClick","reloadDocument","replace","state","target","to"],vs=null;function kf(e,t){if(!e){typeof console!="undefined"&&console.warn(t);try{throw new Error(t)}catch(s){}}}function cc(e){let{basename:t,children:s,window:o}=e,c=useRef();c.current==null&&(c.current=createBrowserHistory({window:o}));let f=c.current,[p,k]=useState({action:f.action,location:f.location});return useLayoutEffect(()=>f.listen(k),[f]),createElement(Router,{basename:t,children:s,location:p.location,navigationType:p.action,navigator:f})}function ha(e){let{basename:t,children:s,window:o}=e,c=(0,X.useRef)();c.current==null&&(c.current=ze({window:o}));let f=c.current,[p,k]=(0,X.useState)({action:f.action,location:f.location});return(0,X.useLayoutEffect)(()=>f.listen(k),[f]),(0,X.createElement)(Sl,{basename:t,children:s,location:p.location,navigationType:p.action,navigator:f})}function Ef(e){let{basename:t,children:s,history:o}=e;const[c,f]=useState({action:o.action,location:o.location});return useLayoutEffect(()=>o.listen(f),[o]),createElement(Router,{basename:t,children:s,location:c.location,navigationType:c.action,navigator:o})}function El(e){return!!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)}const wn=(0,X.forwardRef)(function(t,s){let{onClick:o,reloadDocument:c,replace:f=!1,state:p,target:k,to:R}=t,W=pa(t,bi),h=Se(R),v=Tl(R,{replace:f,state:p,target:k});function S(x){o&&o(x),!x.defaultPrevented&&!c&&v(x)}return(0,X.createElement)("a",Fn({},W,{href:h,onClick:S,ref:s,target:k}))}),da=null;function Tl(e,t){let{target:s,replace:o,state:c}=t===void 0?{}:t,f=Ct(),p=Fe(),k=hs(e);return(0,X.useCallback)(R=>{if(R.button===0&&(!s||s==="_self")&&!El(R)){R.preventDefault();let W=!!o||Lt(p)===Lt(k);f(e,{replace:W,state:c})}},[p,f,k,o,c,s,e])}function wi(e){let t=useRef(Qr(e)),s=useLocation(),o=useMemo(()=>{let p=Qr(s.search);for(let k of t.current.keys())p.has(k)||t.current.getAll(k).forEach(R=>{p.append(k,R)});return p},[s.search]),c=useNavigate(),f=useCallback((p,k)=>{c("?"+Qr(p),k)},[c]);return[o,f]}function Qr(e){return e===void 0&&(e=""),new URLSearchParams(typeof e=="string"||Array.isArray(e)||e instanceof URLSearchParams?e:Object.keys(e).reduce((t,s)=>{let o=e[s];return t.concat(Array.isArray(o)?o.map(c=>[s,c]):[[s,o]])},[]))}var vt=Ke(977),ya=/[\s]*([a-z-]+)[\s]*\([\s]*([^\)]+)[\s]*\)[\s]*/i,va=/^(\-?\d+\.?\d{0,5})/,ur=function(e){return function(t){return t+e}},Dn=parseFloat;function cr(e){return typeof e=="number"?e:Dn(e)*.01}function $l(e){return Xr(e*100)+"%"}function Xr(e){return va.exec(e.toString())[1]}function ga(e){if(e!=null){var t=+e;return t===t?e+"px":e}}function Cl(e){var t=ya.exec(e);if(!(!t||!t.length))return[t[1]].concat(t[2].split(","))}function ba(e,t){var s=Array.prototype.join.call(t,", ");return e+"("+s+")"}function mt(e){return function(){return ba(e,arguments)}}var Pl=function(e,t){return Array.prototype.filter.call(e,t)},gs=function(e,t){return Array.prototype.map.call(e,t)},fc=ur("%"),bs=ur("deg"),Ol=ur("em"),Ll=ur("ex"),ut=ur("px"),Tf=ur("rad"),$f=ur("rem"),wa=ur("vh"),zn=ur("vw"),mc=ur("turn"),jl=function(e){return function(){return Pl(arguments,function(t){return t||t===0}).map(function(t){return typeof t=="number"?ut(t):t.toString()}).join(e)}},Cf=jl(" "),pc=jl(",");function hc(e){return params(e.color,e.style,ensureLength(e.width))}var dc=null,_a=null,yc=null,xa=Math,_r=xa.round;function fr(e,t){return _r(e*t)/t}var xr,st="rgb",Xe="hsl",_i=(xr={},xr[st+Xe]=gc,xr[Xe+st]=xi,xr),Mr={r:255,g:255,b:255,h:360,s:1,l:1,a:1};function Wn(e){return Hn(e)||Rl(e)||_s(255,0,0)}function vc(e,t,s,o){return new Sr(Xe,Ss(e),ensurePercent(t),ensurePercent(s),o===void 0?1:ensurePercent(o),o!==void 0)}function Sa(e,t,s,o){return new Sr(Xe,Ss(e),ensurePercent(t),ensurePercent(s),ensurePercent(o),!0)}function _s(e,t,s,o){return new Sr(st,e,t,s,o===void 0?1:cr(o),o!==void 0)}function xs(e,t,s,o){return new Sr(st,e,t,s,ensurePercent(o),!0)}function bt(e,t,s){var o=t.f,c=t.r,f=t.g,p=t.b,k=t.a,R=s===void 0?t.o:s;return o!==e?_i[o+e](c,f,p,k,R):s===void 0?t:new Sr(o,c,f,p,k,R)}var Sr=function(){function e(t,s,o,c,f,p){var k=this;k.f=t,k.o=p;var R=t===Xe;k.r=Kr(R?"h":"r",s),k.g=Kr(R?"s":"g",o),k.b=Kr(R?"l":"b",c),k.a=Kr("a",f)}return e.prototype.toString=function(){var t=this,s=t.o,o=t.f,c=t.r,f=t.g,p=t.b,k=t.a,R,W;if(o===st)R=s?"rgba":st,W=[_r(c),_r(f),_r(p)];else if(o===Xe)R=s?"hsla":Xe,W=[_r(c),$l(fr(f,100)),$l(fr(p,100))];else throw new Error("Invalid color format");return s&&W.push(Xr(fr(k,1e5))),ba(R,W)},e.prototype.toHexString=function(){var t=bt(st,this);return"#"+(Un(t.r)+Un(t.g)+Un(t.b)).toUpperCase()},e.prototype.toHSL=function(){return bt(Xe,this,!1)},e.prototype.toHSLA=function(){return bt(Xe,this,!0)},e.prototype.toRGB=function(){return bt(st,this,!1)},e.prototype.toRGBA=function(){return bt(st,this,!0)},e.prototype.red=function(){var t=this;return(t.f===st?t:t.toRGB()).r},e.prototype.green=function(){var t=this;return(t.f===st?t:t.toRGB()).g},e.prototype.blue=function(){var t=this;return(t.f===st?t:t.toRGB()).b},e.prototype.hue=function(){var t=this;return(t.f===Xe?t:t.toHSL()).r},e.prototype.saturation=function(){var t=this;return(t.f===Xe?t:t.toHSL()).g},e.prototype.lightness=function(){var t=this;return(t.f===Xe?t:t.toHSL()).b},e.prototype.alpha=function(){return this.a},e.prototype.opacity=function(){return this.a},e.prototype.invert=function(){var t=this,s=bt(st,t);return bt(t.f,new e(st,255-s.r,255-s.g,255-s.b,t.a,t.o))},e.prototype.lighten=function(t,s){var o=this,c=bt(Xe,o),f=Mr.l,p=c.b+(s?f-c.b:f)*cr(t);return bt(o.f,new e(Xe,c.r,c.g,p,o.a,o.o))},e.prototype.darken=function(t,s){var o=this,c=bt(Xe,o),f=c.b-(s?c.b:Mr.l)*cr(t);return bt(o.f,new e(Xe,c.r,c.g,f,o.a,o.o))},e.prototype.saturate=function(t,s){var o=this,c=bt(Xe,o),f=Mr.s,p=c.g+(s?f-c.g:f)*cr(t);return bt(o.f,new e(Xe,c.r,p,c.b,o.a,o.o))},e.prototype.desaturate=function(t,s){var o=this,c=bt(Xe,o),f=Mr.s,p=c.g-(s?c.g:f)*cr(t);return bt(o.f,new e(Xe,c.r,p,c.b,o.a,o.o))},e.prototype.grayscale=function(){return this.desaturate(1)},e.prototype.fade=function(t){var s=this,o=Kr("a",cr(t));return bt(s.f,new e(s.f,s.r,s.g,s.b,o,!0))},e.prototype.fadeOut=function(t,s){var o=this,c=1,f=Kr("a",o.a-(s?o.a:c)*cr(t));return bt(o.f,new e(o.f,o.r,o.g,o.b,f,!0))},e.prototype.fadeIn=function(t,s){var o=this,c=1,f=Kr("a",o.a+(s?o.a:c)*cr(t));return bt(o.f,new e(o.f,o.r,o.g,o.b,f,!0))},e.prototype.mix=function(t,s){var o=this,c=ks(t),f=bt(st,o),p=bt(st,c),k=s===void 0?.5:s,R=2*k-1,W=Math.abs(f.a-p.a),h=((R*W===-1?R:(R+W)/(1+R*W))+1)/2,v=1-h,S=new e(st,_r(f.r*h+p.r*v),_r(f.g*h+p.g*v),_r(f.b*h+p.b*v),f.a*k+p.a*(1-k),o.o||c.o);return bt(this.f,S)},e.prototype.tint=function(t){return _s(255,255,255).mix(this,t)},e.prototype.shade=function(t){return _s(0,0,0).mix(this,t)},e.prototype.spin=function(t){var s=this,o=bt(Xe,s);return bt(s.f,new e(Xe,Ss(o.r+t),o.g,o.b,s.a,s.o))},e}();function Un(e){var t=_r(e);return(t<16?"0":"")+t.toString(16)}function Ss(e){return((e<0?360:0)+e%360)%360}function gc(e,t,s,o,c){var f=e/255,p=t/255,k=s/255,R=Math.min(f,p,k),W=Math.max(f,p,k),h=(R+W)/2,v=W-R,S;W===R?S=0:f===W?S=(p-k)/v:p===W?S=2+(k-f)/v:k===W?S=4+(f-p)/v:S=0,S=Math.min(S*60,360),S<0&&(S+=360);var x;return W===R?x=0:h<=.5?x=v/(W+R):x=v/(2-W-R),new Sr(Xe,S,x,h,o,c)}function xi(e,t,s,o,c){var f=e/360,p=t,k=s;if(p===0){var R=k*255;return new Sr(st,R,R,R,o,c)}for(var W=k<.5?k*(1+p):k+p-k*p,h=2*k-W,v=0,S=0,x=0,j=0;j<3;j++){var A=f+.3333333333333333*-(j-1);A<0&&A++,A>1&&A--;var R=void 0;6*A<1?R=h+(W-h)*6*A:2*A<1?R=W:3*A<2?R=h+(W-h)*(2/3-A)*6:R=h,R*=255,j===0?v=R:j===1?S=R:x=R}return new Sr(st,v,S,x,o,c)}function Kr(e,t){var s=0,o=Mr[e];return t<s?s:t>o?o:t}function ks(e){return e instanceof Sr?e:Wn(e)}function Hn(e){var t=e.match(/#(([a-f0-9]{6})|([a-f0-9]{3}))$/i);if(!!t){var s=t[1],o=parseInt(s.length===3?s[0]+s[0]+s[1]+s[1]+s[2]+s[2]:s,16),c=o>>16&255,f=o>>8&255,p=o&255;return new Sr(st,c,f,p,1,!1)}}function Rl(e){var t=Cl(e);if(!(!t||!(t.length===4||t.length===5))){var s=t[0],o=s==="rgba",c=s==="hsla",f=s===st,p=s===Xe,k=c||o,R;if(f||o)R=st;else if(p||c)R=Xe;else throw new Error("unsupported color string");var W=Dn(t[1]),h=f||o?Dn(t[2]):cr(t[2]),v=f||o?Dn(t[3]):cr(t[3]),S=k?Dn(t[4]):1;return new Sr(R,W,h,v,S,k)}}function bc(e){for(var t=[],s=1;s<arguments.length;s++)t[s-1]=arguments[s];return cssFunction("linear-gradient",[e].concat(t.map(Al)))}function Nl(e){for(var t=[],s=1;s<arguments.length;s++)t[s-1]=arguments[s];return cssFunction("repeating-linear-gradient",[e].concat(t.map(Al)))}function Al(e){return Array.isArray(e)?e.map(function(t){return t.toString()}).join(" "):e.toString()}var wc=null,_c=null;function xc(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return e.length?e.join(" "):"none"}var Sc=mt("matrix"),ka=mt("matrix3d"),Pf=mt("perspective"),Ea=mt("rotate"),Of=mt("rotate3d"),pt=mt("rotateX"),Si=mt("rotateY"),Lf=mt("rotateZ"),jf=mt("scale"),Es=mt("scale3d"),kc=mt("scaleX"),Vl=mt("scaleY"),ki=mt("scaleZ"),Ta=mt("skew"),Ml=mt("skewX"),_n=mt("skewY"),Rf=mt("translate"),Nf=mt("translate3d"),Af=mt("translateX"),Vf=mt("translateY"),Mf=mt("translateZ"),Ir=Ke(898);const Ec=(0,vt.style)(Oe.horizontal,Oe.center,Oe.horizontallySpaced(ut(27)),Oe.height(ut(50)),{paddingLeft:ut(20)}),Tc=(0,vt.style)({fontSize:ut(24)}),qn=(0,vt.style)({fontSize:ut(18),lineHeight:ut(24.51),color:"#000000",textDecoration:"none"});function Il(){return Ir.createElement("div",{className:Ec},Ir.createElement("div",{className:Tc},"\u{1F60E} CoolScript"),Ir.createElement(wn,{to:"/",className:qn},"Home"),Ir.createElement(wn,{to:"/install",className:qn},"Install"),Ir.createElement(wn,{to:"/docs",className:qn},"Docs"),Ir.createElement(wn,{to:"/play",className:qn},"Playground"))}var jr=Ke(898);const Bl=(0,vt.style)(Oe.flex);function Ts(){return jr.createElement("div",{className:Bl},jr.createElement(Il,null),jr.createElement(fa,null))}const Fl=(0,X.createContext)(void 0);function Zr(){return(0,X.useContext)(Fl)}var Ei=Ke(898);const $a=(0,vt.style)(Oe.flex),or=(0,vt.style)((0,vt.media)({maxWidth:ut(699)},{height:wa(70)}),(0,vt.media)({minWidth:ut(700)},{height:wa(90)}),{resize:"none",backgroundColor:"#FFFFFF",color:"#000000",width:fc(100),borderColor:Wn("#CCCCCC").toHexString(),borderStyle:"solid",borderWidth:ut(1),outline:"none"});function Gn(){const{editorText:e,setEditorText:t}=Zr(),s=o=>{t(o.target.value)};return Ei.createElement("div",{className:$a},Ei.createElement("textarea",{value:e,className:or,onChange:s}))}var $s=Ke(898);const Ti=(0,vt.style)({});function $c(){const{runScript:e}=Zr();return $s.createElement("div",{className:Ti},$s.createElement("button",{onClick:()=>e()},"Run"))}var xn=Ke(898);const Dl=(0,vt.style)(Oe.flex1,Oe.vertical),$i=(0,vt.style)(Oe.content),Cs=(0,vt.style)(Oe.flex);function Ca(){return xn.createElement("div",{className:Dl},xn.createElement("div",{className:$i},xn.createElement($c,null)),xn.createElement("div",{className:Cs},xn.createElement(Gn,null)))}var Ps=Ke(898);const Cc=(0,vt.style)(Oe.flex,{backgroundColor:"#FFFFFF",color:"#000000"}),Pc=(0,vt.style)({overflow:"hidden",borderWidth:ut(1),borderTopStyle:"solid",borderBottomStyle:"none",borderLeftStyle:"solid",borderRightStyle:"solid",borderColor:"#CCCCCC"}),zl=(0,vt.style)({backgroundColor:"inherit",borderTopStyle:"none",borderBottomStyle:"none",borderLeftStyle:"none",borderRightStyle:"solid",borderWidth:ut(1),borderColor:"#CCCCCC",outline:"none",cursor:"pointer",minWidth:ut(75),height:ut(40)}),Oc=(0,vt.style)({backgroundColor:"#CCCCCC",borderStyle:"none",cursor:"default",minWidth:ut(75),height:ut(40)}),Lc=e=>(0,vt.style)({display:e?"block":"none",borderWidth:ut(1),borderStyle:"solid",borderColor:"#CCCCCC",backgroundColor:"#FFFFFF",paddingTop:ut(20),paddingLeft:ut(10),paddingRight:ut(10)});function Wl(e,t){return{label:e,element:t}}function jc(e){const t=e.tabs,[s,o]=(0,X.useState)(t[0].label);return Ps.createElement("div",{className:Cc},Ps.createElement("div",{className:Pc},t.map(c=>{const f=c.label==s;return Ps.createElement("button",{key:c.label,className:f?Oc:zl,onClick:()=>o(c.label)},c.label)})),t.map(c=>Ps.createElement("div",{key:c.label,className:Lc(c.label==s)},c.element)))}function Rc(e,t,s,o){return{tag:"ConditionalTerm",condition:e,body:t,branch:s,span:o}}function Pa(e,t,s,o){return{tag:"IfStatement",condition:e,body:t,branch:s,span:o}}var{stringify:Nc}=JSON;if(!String.prototype.repeat)throw new Error("String.prototype.repeat is undefined, see https://github.com/davidbonnet/astring#installation");if(!String.prototype.endsWith)throw new Error("String.prototype.endsWith is undefined, see https://github.com/davidbonnet/astring#installation");var Os={"||":3,"&&":4,"|":5,"??":5,"^":6,"&":7,"==":8,"!=":8,"===":8,"!==":8,"<":9,">":9,"<=":9,">=":9,in:9,instanceof:9,"<<":10,">>":10,">>>":10,"+":11,"-":11,"*":12,"%":12,"/":12,"**":13},kr=17,Ac={ArrayExpression:20,TaggedTemplateExpression:20,ThisExpression:20,Identifier:20,PrivateIdentifier:20,Literal:18,TemplateLiteral:20,Super:20,SequenceExpression:20,MemberExpression:19,ChainExpression:19,CallExpression:19,NewExpression:19,ArrowFunctionExpression:kr,ClassExpression:kr,FunctionExpression:kr,ObjectExpression:kr,UpdateExpression:16,UnaryExpression:15,AwaitExpression:15,BinaryExpression:14,LogicalExpression:13,ConditionalExpression:4,AssignmentExpression:3,YieldExpression:2,RestElement:1};function en(e,t){let{generator:s}=e;if(e.write("("),t!=null&&t.length>0){s[t[0].type](t[0],e);let{length:o}=t;for(let c=1;c<o;c++){let f=t[c];e.write(", "),s[f.type](f,e)}}e.write(")")}function Oa(e,t,s,o){let c=e.expressionsPrecedence[t.type];if(c===kr)return!0;let f=e.expressionsPrecedence[s.type];return c!==f?!o&&c===15&&f===14&&s.operator==="**"||c<f:c!==13&&c!==14?!1:t.operator==="**"&&s.operator==="**"?!o:o?Os[t.operator]<=Os[s.operator]:Os[t.operator]<Os[s.operator]}function Ls(e,t,s,o){let{generator:c}=e;Oa(e,t,s,o)?(e.write("("),c[t.type](t,e),e.write(")")):c[t.type](t,e)}function Vc(e,t,s,o){let c=t.split(`
`),f=c.length-1;if(e.write(c[0].trim()),f>0){e.write(o);for(let p=1;p<f;p++)e.write(s+c[p].trim()+o);e.write(s+c[f].trim())}}function Gt(e,t,s,o){let{length:c}=t;for(let f=0;f<c;f++){let p=t[f];e.write(s),p.type[0]==="L"?e.write("// "+p.value.trim()+`
`,p):(e.write("/*"),Vc(e,p.value,s,o),e.write("*/"+o))}}function Mc(e){let t=e;for(;t!=null;){let{type:s}=t;if(s[0]==="C"&&s[1]==="a")return!0;if(s[0]==="M"&&s[1]==="e"&&s[2]==="m")t=t.object;else return!1}}function Ul(e,t){let{generator:s}=e,{declarations:o}=t;e.write(t.kind+" ");let{length:c}=o;if(c>0){s.VariableDeclarator(o[0],e);for(let f=1;f<c;f++)e.write(", "),s.VariableDeclarator(o[f],e)}}var La,ja,Ra,Na,Aa,js,Ci={Program(e,t){let s=t.indent.repeat(t.indentLevel),{lineEnd:o,writeComments:c}=t;c&&e.comments!=null&&Gt(t,e.comments,s,o);let f=e.body,{length:p}=f;for(let k=0;k<p;k++){let R=f[k];c&&R.comments!=null&&Gt(t,R.comments,s,o),t.write(s),this[R.type](R,t),t.write(o)}c&&e.trailingComments!=null&&Gt(t,e.trailingComments,s,o)},BlockStatement:js=function(e,t){let s=t.indent.repeat(t.indentLevel++),{lineEnd:o,writeComments:c}=t,f=s+t.indent;t.write("{");let p=e.body;if(p!=null&&p.length>0){t.write(o),c&&e.comments!=null&&Gt(t,e.comments,f,o);let{length:k}=p;for(let R=0;R<k;R++){let W=p[R];c&&W.comments!=null&&Gt(t,W.comments,f,o),t.write(f),this[W.type](W,t),t.write(o)}t.write(s)}else c&&e.comments!=null&&(t.write(o),Gt(t,e.comments,f,o),t.write(s));c&&e.trailingComments!=null&&Gt(t,e.trailingComments,f,o),t.write("}"),t.indentLevel--},ClassBody:js,StaticBlock(e,t){t.write("static "),this.BlockStatement(e,t)},EmptyStatement(e,t){t.write(";")},ExpressionStatement(e,t){let s=t.expressionsPrecedence[e.expression.type];s===kr||s===3&&e.expression.left.type[0]==="O"?(t.write("("),this[e.expression.type](e.expression,t),t.write(")")):this[e.expression.type](e.expression,t),t.write(";")},IfStatement(e,t){t.write("if ("),this[e.test.type](e.test,t),t.write(") "),this[e.consequent.type](e.consequent,t),e.alternate!=null&&(t.write(" else "),this[e.alternate.type](e.alternate,t))},LabeledStatement(e,t){this[e.label.type](e.label,t),t.write(": "),this[e.body.type](e.body,t)},BreakStatement(e,t){t.write("break"),e.label!=null&&(t.write(" "),this[e.label.type](e.label,t)),t.write(";")},ContinueStatement(e,t){t.write("continue"),e.label!=null&&(t.write(" "),this[e.label.type](e.label,t)),t.write(";")},WithStatement(e,t){t.write("with ("),this[e.object.type](e.object,t),t.write(") "),this[e.body.type](e.body,t)},SwitchStatement(e,t){let s=t.indent.repeat(t.indentLevel++),{lineEnd:o,writeComments:c}=t;t.indentLevel++;let f=s+t.indent,p=f+t.indent;t.write("switch ("),this[e.discriminant.type](e.discriminant,t),t.write(") {"+o);let{cases:k}=e,{length:R}=k;for(let W=0;W<R;W++){let h=k[W];c&&h.comments!=null&&Gt(t,h.comments,f,o),h.test?(t.write(f+"case "),this[h.test.type](h.test,t),t.write(":"+o)):t.write(f+"default:"+o);let{consequent:v}=h,{length:S}=v;for(let x=0;x<S;x++){let j=v[x];c&&j.comments!=null&&Gt(t,j.comments,p,o),t.write(p),this[j.type](j,t),t.write(o)}}t.indentLevel-=2,t.write(s+"}")},ReturnStatement(e,t){t.write("return"),e.argument&&(t.write(" "),this[e.argument.type](e.argument,t)),t.write(";")},ThrowStatement(e,t){t.write("throw "),this[e.argument.type](e.argument,t),t.write(";")},TryStatement(e,t){if(t.write("try "),this[e.block.type](e.block,t),e.handler){let{handler:s}=e;s.param==null?t.write(" catch "):(t.write(" catch ("),this[s.param.type](s.param,t),t.write(") ")),this[s.body.type](s.body,t)}e.finalizer&&(t.write(" finally "),this[e.finalizer.type](e.finalizer,t))},WhileStatement(e,t){t.write("while ("),this[e.test.type](e.test,t),t.write(") "),this[e.body.type](e.body,t)},DoWhileStatement(e,t){t.write("do "),this[e.body.type](e.body,t),t.write(" while ("),this[e.test.type](e.test,t),t.write(");")},ForStatement(e,t){if(t.write("for ("),e.init!=null){let{init:s}=e;s.type[0]==="V"?Ul(t,s):this[s.type](s,t)}t.write("; "),e.test&&this[e.test.type](e.test,t),t.write("; "),e.update&&this[e.update.type](e.update,t),t.write(") "),this[e.body.type](e.body,t)},ForInStatement:La=function(e,t){t.write(`for ${e.await?"await ":""}(`);let{left:s}=e;s.type[0]==="V"?Ul(t,s):this[s.type](s,t),t.write(e.type[3]==="I"?" in ":" of "),this[e.right.type](e.right,t),t.write(") "),this[e.body.type](e.body,t)},ForOfStatement:La,DebuggerStatement(e,t){t.write("debugger;",e)},FunctionDeclaration:ja=function(e,t){t.write((e.async?"async ":"")+(e.generator?"function* ":"function ")+(e.id?e.id.name:""),e),en(t,e.params),t.write(" "),this[e.body.type](e.body,t)},FunctionExpression:ja,VariableDeclaration(e,t){Ul(t,e),t.write(";")},VariableDeclarator(e,t){this[e.id.type](e.id,t),e.init!=null&&(t.write(" = "),this[e.init.type](e.init,t))},ClassDeclaration(e,t){if(t.write("class "+(e.id?`${e.id.name} `:""),e),e.superClass){t.write("extends ");let{superClass:s}=e,{type:o}=s,c=t.expressionsPrecedence[o];(o[0]!=="C"||o[1]!=="l"||o[5]!=="E")&&(c===kr||c<t.expressionsPrecedence.ClassExpression)?(t.write("("),this[e.superClass.type](s,t),t.write(")")):this[s.type](s,t),t.write(" ")}this.ClassBody(e.body,t)},ImportDeclaration(e,t){t.write("import ");let{specifiers:s}=e,{length:o}=s,c=0;if(o>0){for(;c<o;){c>0&&t.write(", ");let f=s[c],p=f.type[6];if(p==="D")t.write(f.local.name,f),c++;else if(p==="N")t.write("* as "+f.local.name,f),c++;else break}if(c<o){for(t.write("{");;){let f=s[c],{name:p}=f.imported;if(t.write(p,f),p!==f.local.name&&t.write(" as "+f.local.name),++c<o)t.write(", ");else break}t.write("}")}t.write(" from ")}this.Literal(e.source,t),t.write(";")},ImportExpression(e,t){t.write("import("),this[e.source.type](e.source,t),t.write(")")},ExportDefaultDeclaration(e,t){t.write("export default "),this[e.declaration.type](e.declaration,t),t.expressionsPrecedence[e.declaration.type]!=null&&e.declaration.type[0]!=="F"&&t.write(";")},ExportNamedDeclaration(e,t){if(t.write("export "),e.declaration)this[e.declaration.type](e.declaration,t);else{t.write("{");let{specifiers:s}=e,{length:o}=s;if(o>0)for(let c=0;;){let f=s[c],{name:p}=f.local;if(t.write(p,f),p!==f.exported.name&&t.write(" as "+f.exported.name),++c<o)t.write(", ");else break}t.write("}"),e.source&&(t.write(" from "),this.Literal(e.source,t)),t.write(";")}},ExportAllDeclaration(e,t){e.exported!=null?t.write("export * as "+e.exported.name+" from "):t.write("export * from "),this.Literal(e.source,t),t.write(";")},MethodDefinition(e,t){e.static&&t.write("static ");let s=e.kind[0];(s==="g"||s==="s")&&t.write(e.kind+" "),e.value.async&&t.write("async "),e.value.generator&&t.write("*"),e.computed?(t.write("["),this[e.key.type](e.key,t),t.write("]")):this[e.key.type](e.key,t),en(t,e.value.params),t.write(" "),this[e.value.body.type](e.value.body,t)},ClassExpression(e,t){this.ClassDeclaration(e,t)},ArrowFunctionExpression(e,t){t.write(e.async?"async ":"",e);let{params:s}=e;s!=null&&(s.length===1&&s[0].type[0]==="I"?t.write(s[0].name,s[0]):en(t,e.params)),t.write(" => "),e.body.type[0]==="O"?(t.write("("),this.ObjectExpression(e.body,t),t.write(")")):this[e.body.type](e.body,t)},ThisExpression(e,t){t.write("this",e)},Super(e,t){t.write("super",e)},RestElement:Ra=function(e,t){t.write("..."),this[e.argument.type](e.argument,t)},SpreadElement:Ra,YieldExpression(e,t){t.write(e.delegate?"yield*":"yield"),e.argument&&(t.write(" "),this[e.argument.type](e.argument,t))},AwaitExpression(e,t){t.write("await ",e),Ls(t,e.argument,e)},TemplateLiteral(e,t){let{quasis:s,expressions:o}=e;t.write("`");let{length:c}=o;for(let p=0;p<c;p++){let k=o[p],R=s[p];t.write(R.value.raw,R),t.write("${"),this[k.type](k,t),t.write("}")}let f=s[s.length-1];t.write(f.value.raw,f),t.write("`")},TemplateElement(e,t){t.write(e.value.raw,e)},TaggedTemplateExpression(e,t){Ls(t,e.tag,e),this[e.quasi.type](e.quasi,t)},ArrayExpression:Aa=function(e,t){if(t.write("["),e.elements.length>0){let{elements:s}=e,{length:o}=s;for(let c=0;;){let f=s[c];if(f!=null&&this[f.type](f,t),++c<o)t.write(", ");else{f==null&&t.write(", ");break}}}t.write("]")},ArrayPattern:Aa,ObjectExpression(e,t){let s=t.indent.repeat(t.indentLevel++),{lineEnd:o,writeComments:c}=t,f=s+t.indent;if(t.write("{"),e.properties.length>0){t.write(o),c&&e.comments!=null&&Gt(t,e.comments,f,o);let p=","+o,{properties:k}=e,{length:R}=k;for(let W=0;;){let h=k[W];if(c&&h.comments!=null&&Gt(t,h.comments,f,o),t.write(f),this[h.type](h,t),++W<R)t.write(p);else break}t.write(o),c&&e.trailingComments!=null&&Gt(t,e.trailingComments,f,o),t.write(s+"}")}else c?e.comments!=null?(t.write(o),Gt(t,e.comments,f,o),e.trailingComments!=null&&Gt(t,e.trailingComments,f,o),t.write(s+"}")):e.trailingComments!=null?(t.write(o),Gt(t,e.trailingComments,f,o),t.write(s+"}")):t.write("}"):t.write("}");t.indentLevel--},Property(e,t){e.method||e.kind[0]!=="i"?this.MethodDefinition(e,t):(e.shorthand||(e.computed?(t.write("["),this[e.key.type](e.key,t),t.write("]")):this[e.key.type](e.key,t),t.write(": ")),this[e.value.type](e.value,t))},PropertyDefinition(e,t){e.static&&t.write("static "),this[e.key.type](e.key,t),e.value!=null&&(t.write(" = "),this[e.value.type](e.value,t))},ObjectPattern(e,t){if(t.write("{"),e.properties.length>0){let{properties:s}=e,{length:o}=s;for(let c=0;this[s[c].type](s[c],t),++c<o;)t.write(", ")}t.write("}")},SequenceExpression(e,t){en(t,e.expressions)},UnaryExpression(e,t){if(e.prefix){let{operator:s,argument:o,argument:{type:c}}=e;t.write(s);let f=Oa(t,o,e);!f&&(s.length>1||c[0]==="U"&&(c[1]==="n"||c[1]==="p")&&o.prefix&&o.operator[0]===s&&(s==="+"||s==="-"))&&t.write(" "),f?(t.write(s.length>1?" (":"("),this[c](o,t),t.write(")")):this[c](o,t)}else this[e.argument.type](e.argument,t),t.write(e.operator)},UpdateExpression(e,t){e.prefix?(t.write(e.operator),this[e.argument.type](e.argument,t)):(this[e.argument.type](e.argument,t),t.write(e.operator))},AssignmentExpression(e,t){this[e.left.type](e.left,t),t.write(" "+e.operator+" "),this[e.right.type](e.right,t)},AssignmentPattern(e,t){this[e.left.type](e.left,t),t.write(" = "),this[e.right.type](e.right,t)},BinaryExpression:Na=function(e,t){let s=e.operator==="in";s&&t.write("("),Ls(t,e.left,e,!1),t.write(" "+e.operator+" "),Ls(t,e.right,e,!0),s&&t.write(")")},LogicalExpression:Na,ConditionalExpression(e,t){let{test:s}=e,o=t.expressionsPrecedence[s.type];o===kr||o<=t.expressionsPrecedence.ConditionalExpression?(t.write("("),this[s.type](s,t),t.write(")")):this[s.type](s,t),t.write(" ? "),this[e.consequent.type](e.consequent,t),t.write(" : "),this[e.alternate.type](e.alternate,t)},NewExpression(e,t){t.write("new ");let s=t.expressionsPrecedence[e.callee.type];s===kr||s<t.expressionsPrecedence.CallExpression||Mc(e.callee)?(t.write("("),this[e.callee.type](e.callee,t),t.write(")")):this[e.callee.type](e.callee,t),en(t,e.arguments)},CallExpression(e,t){let s=t.expressionsPrecedence[e.callee.type];s===kr||s<t.expressionsPrecedence.CallExpression?(t.write("("),this[e.callee.type](e.callee,t),t.write(")")):this[e.callee.type](e.callee,t),e.optional&&t.write("?."),en(t,e.arguments)},ChainExpression(e,t){this[e.expression.type](e.expression,t)},MemberExpression(e,t){let s=t.expressionsPrecedence[e.object.type];s===kr||s<t.expressionsPrecedence.MemberExpression?(t.write("("),this[e.object.type](e.object,t),t.write(")")):this[e.object.type](e.object,t),e.computed?(e.optional&&t.write("?."),t.write("["),this[e.property.type](e.property,t),t.write("]")):(e.optional?t.write("?."):t.write("."),this[e.property.type](e.property,t))},MetaProperty(e,t){t.write(e.meta.name+"."+e.property.name,e)},Identifier(e,t){t.write(e.name,e)},PrivateIdentifier(e,t){t.write(`#${e.name}`,e)},Literal(e,t){e.raw!=null?t.write(e.raw,e):e.regex!=null?this.RegExpLiteral(e,t):e.bigint!=null?t.write(e.bigint+"n",e):t.write(Nc(e.value),e)},RegExpLiteral(e,t){let{regex:s}=e;t.write(`/${s.pattern}/${s.flags}`,e)}},Ic={},Va=class{constructor(e){let t=e==null?Ic:e;this.output="",t.output!=null?(this.output=t.output,this.write=this.writeToStream):this.output="",this.generator=t.generator!=null?t.generator:Ci,this.expressionsPrecedence=t.expressionsPrecedence!=null?t.expressionsPrecedence:Ac,this.indent=t.indent!=null?t.indent:"  ",this.lineEnd=t.lineEnd!=null?t.lineEnd:`
`,this.indentLevel=t.startingIndentLevel!=null?t.startingIndentLevel:0,this.writeComments=t.comments?t.comments:!1,t.sourceMap!=null&&(this.write=t.output==null?this.writeAndMap:this.writeToStreamAndMap,this.sourceMap=t.sourceMap,this.line=1,this.column=0,this.lineEndSize=this.lineEnd.split(`
`).length-1,this.mapping={original:null,generated:this,name:void 0,source:t.sourceMap.file||t.sourceMap._file})}write(e){this.output+=e}writeToStream(e){this.output.write(e)}writeAndMap(e,t){this.output+=e,this.map(e,t)}writeToStreamAndMap(e,t){this.output.write(e),this.map(e,t)}map(e,t){if(t!=null){let{type:c}=t;if(c[0]==="L"&&c[2]==="n"){this.column=0,this.line++;return}if(t.loc!=null){let{mapping:f}=this;f.original=t.loc.start,f.name=t.name,this.sourceMap.addMapping(f)}if(c[0]==="T"&&c[8]==="E"||c[0]==="L"&&c[1]==="i"&&typeof t.value=="string"){let{length:f}=e,{column:p,line:k}=this;for(let R=0;R<f;R++)e[R]===`
`?(p=0,k++):p++;this.column=p,this.line=k;return}}let{length:s}=e,{lineEnd:o}=this;s>0&&(this.lineEndSize>0&&(o.length===1?e[s-1]===o:e.endsWith(o))?(this.line+=this.lineEndSize,this.column=0):this.column+=s)}toString(){return this.output}};function Ma(e,t){let s=new Va(t);return s.generator[e.type](e,s),s.output}function Ia(e,t){return{type:"Program",sourceType:e,body:t}}function Ba(e){return Ia("script",e)}function tn(e){return{type:"Identifier",name:e}}function rn(e){return tn(e)}function Hl(e){return{type:"ExpressionStatement",expression:e}}function ql(e){return{type:"BlockStatement",body:e}}function Gl(e,t){return{type:"CallExpression",callee:e,arguments:t,optional:!1}}function Fa(e,t){return Hl(Gl(e,t))}function Da(e){return{type:"ThrowStatement",argument:e}}function Pi(e){return Da(qa("Error",[Zl(e)]))}function Sn(e=null){return{type:"ReturnStatement",argument:e}}function Bc(e,t,s){return Hl(kn(e,t,s))}function Rs(e,t){return Bc("=",tn(e),t)}function Fc(e,t,s){return{type:"IfStatement",test:e,consequent:t,alternate:s}}function za(e,t){return{type:"WhileStatement",test:e,body:t}}function Yl(e,t){return{type:"DoWhileStatement",body:e,test:t}}function Jl(e,t,s,o){return{type:"ForStatement",init:e,test:t,update:s,body:o}}function Ql(e,t){return{type:"VariableDeclaration",declarations:e,kind:t}}function Xl(e,t){return{type:"VariableDeclarator",id:e,init:t}}function Wa(e,t){let s=Xl(tn(e),t);return Ql([s],"const")}function Ua(e,t){let s=Xl(tn(e),t);return Ql([s],"let")}function Kl(e){let t=Ha([],ql(e));return Gl(t,[])}function Dc(e){return{type:"ArrayExpression",elements:e}}function zc(e){return{type:"ObjectExpression",properties:e}}function Wc(e,t){return{type:"Property",key:tn(e),value:t,kind:"init",method:!1,shorthand:!1,computed:!1}}function mr(e,t,s){return{type:"FunctionExpression",id:e,params:t,body:s}}function Ha(e,t){return mr(null,e,t)}function Oi(e,t){return{type:"NewExpression",callee:e,arguments:t}}function qa(e,t){return Oi(tn(e),t)}function Ga(e){return{type:"Literal",value:e}}function Zl(e){return Ga(e)}function Ya(e){return{type:"Literal",value:e}}function eo(e){return{type:"Literal",value:e}}function Uc(){return{type:"Literal",value:null}}function kn(e,t,s){return{type:"AssignmentExpression",operator:e,left:t,right:s}}function to(e,t){return kn("=",tn(e),t)}function Yn(e,t){return{type:"MemberExpression",object:e,property:t,computed:!1,optional:!1}}function ro(e,t,s){return{type:"ConditionalExpression",test:e,alternate:t,consequent:s}}var no=class{constructor(e=[],t=null){this.locals=new Set,this.declarations=[],this.statements=[],this.parent=t,e.forEach(s=>this.locals.add(s))}declareLet(e,t){this.resolveLocal(e)||(this.locals.add(e),this.declarations.push(Ua(e,t)))}declareConst(e,t){this.resolveLocal(e)||(this.locals.add(e),this.declarations.push(Wa(e,t)))}resolveLocal(e){return this.locals.has(e)}resolveOuter(e){return this.parent&&this.parent.resolve(e)}resolve(e){return this.resolveLocal(e)||this.resolveOuter(e)}append(e){this.statements.push(e)}build(){return ql([...this.declarations,...this.statements])}},Ja=class{constructor(){this.block=new no}enter(e=[]){this.block=new no(e,this.block)}exit(){let e=this.block.parent;if(!e)return;let t=this.block.build();return this.block=e,t}freshen(e){let t=e,s=0;for(;this.block.resolve(t);)t=`${e}_${s++}`;return t}generate(e){let t=this.visitTerm(e),s=this.block.build().body,o=Hl(t);return s.push(o),Ba(s)}visitTerm(e){switch(e.tag){case"ErrorTerm":return this.visitErrorTerm(e);case"ValueTerm":return this.visitValueTerm(e);case"VariableTerm":return this.visitVariableTerm(e);case"AssignmentTerm":return this.visitAssignmentTerm(e);case"LambdaTerm":return this.visitLambdaTerm(e);case"CallTerm":return this.visitCallTerm(e);case"ParentheticalTerm":return this.visitParentheticalTerm(e);case"ArrayTerm":return this.visitArrayTerm(e);case"ObjectTerm":return this.visitObjectTerm(e);case"MemberAccessTerm":return this.visitMemberAccessTerm(e);case"IndexAccessTerm":return this.visitIndexAccessTerm(e);case"LetTerm":return this.visitLetTerm(e);case"DoTerm":return this.visitDoTerm(e);case"ConditionalTerm":return this.visitConditionalTerm(e);default:throw new Error(`Unknown term tag encountered: ${e}`)}}visitErrorTerm(e){let t=Pi(e.msg);return Kl([t])}visitValueTerm(e){return this.visitAtomicValue(e.value)}visitAtomicValue(e){switch(e.tag){case"NullValue":return Uc();case"NumberValue":return eo(e.num);case"StringValue":return Zl(e.str);case"BooleanValue":return Ya(e.bool);default:throw new Error(`Unknown value tag encountered in: ${e}`)}}visitVariableTerm(e){return rn(e.variable)}visitAssignmentTerm(e){let t=e.lhs;this.block.resolve(t)||this.block.declareLet(t);let s=this.visitTerm(e.rhs);return to(t,s)}visitLambdaTerm(e){let t=e.args.map(f=>rn(f));this.enter(e.args);let s=this.visitTerm(e.body);this.exit();let o=Sn(s),c=ql([o]);return Ha(t,c)}visitCallTerm(e){let t=this.visitTerm(e.func),s=e.args.map(o=>this.visitTerm(o));return Gl(t,s)}visitParentheticalTerm(e){return this.visitTerm(e.term)}visitArrayTerm(e){let t=e.elements.map(s=>this.visitTerm(s));return Dc(t)}visitObjectTerm(e){let t=Object.entries(e.entries).map(([s,o])=>Wc(s,this.visitTerm(o)));return zc(t)}visitMemberAccessTerm(e){let t=this.visitTerm(e.object),s=rn(e.member);return Yn(t,s)}visitIndexAccessTerm(e){let t=this.visitTerm(e.array),s=this.visitTerm(e.index);return Yn(t,s)}visitLetTerm(e){this.enter(),e.declarations.forEach(c=>{let f=this.visitTerm(c.body);this.block.declareConst(c.variable,f)});let t=this.visitTerm(e.body),s=this.exit(),o=Sn(t);return Kl([...s.body,o])}visitDoTerm(e){let{body:t}=this.visitBlockStatement(e.block);return Kl(t)}visitConditionalTerm(e){let t=this.visitTerm(e.condition),s=this.visitBranchTerm(e.branch),o=this.visitTerm(e.body);return ro(t,s,o)}visitBranchTerm(e){switch(e.tag){case"ElifTerm":{let t=Rc(e.condition,e.body,e.branch,e.span);return this.visitConditionalTerm(t)}case"ElseTerm":return this.visitTerm(e.body)}}visitStatement(e){switch(e.tag){case"AssignmentStatement":{this.visitAssignmentStatement(e);break}case"CallStatement":{this.visitCallStatement(e);break}case"ReturnStatement":{this.visitReturnStatement(e);break}case"BlockStatement":{let t=this.visitBlockStatement(e);this.block.append(t);break}case"IfStatement":{let t=this.visitIfStatement(e);this.block.append(t);break}case"WhileStatement":{this.visitWhileStatement(e);break}case"DoWhileStatement":{this.visitDoWhileStatement(e);break}case"ForStatement":{this.visitForStatement(e);break}}}visitAssignmentStatement(e){let t=e.lhs,s=this.visitTerm(e.rhs);if(!this.block.resolve(t)){this.block.declareLet(t,s);return}let o=Rs(t,s);this.block.append(o)}visitCallStatement(e){let t=this.visitTerm(e.func),s=e.args.map(c=>this.visitTerm(c)),o=Fa(t,s);this.block.append(o)}visitReturnStatement(e){let t=this.visitTerm(e.result),s=Sn(t);this.block.append(s)}visitBlockStatement(e){return this.enter(),e.statements.forEach(t=>{this.visitStatement(t)}),this.exit()}visitIfStatement(e){let t=this.visitTerm(e.condition);this.enter(),this.visitStatement(e.body);let s=this.exit(),o=null;return e.branch&&(o=this.visitBranchStatement(e.branch)),Fc(t,s,o)}visitBranchStatement(e){switch(e.tag){case"ElifStatement":{let t=Pa(e.condition,e.body,e.branch,e.span);return this.visitIfStatement(t)}case"ElseStatement":return this.enter(),this.visitStatement(e.body),this.exit()}}visitWhileStatement(e){let t=this.visitTerm(e.condition);this.enter(),this.visitStatement(e.body);let s=this.exit(),o=za(t,s);this.block.append(o)}visitDoWhileStatement(e){let t=this.visitTerm(e.condition);this.enter(),this.visitStatement(e.body);let s=this.exit(),o=Yl(s,t);this.block.append(o)}visitForStatement(e){e.declarations.forEach(f=>{let p=this.visitTerm(f.body);this.block.declareLet(f.variable,p)});let t=this.visitTerm(e.condition),s=this.visitTerm(e.update);this.enter(),this.visitStatement(e.body);let o=this.exit(),c=Jl(null,t,s,o);this.block.append(c)}visitVariableDeclaration(e){let t=this.visitTerm(e.body);return Ua(e.variable,t)}};function io(...e){return{source:null,errors:e}}function Li(e){return{source:e}}function Qa(e){let t;try{let s=new Ja().generate(e);t=Ma(s)}catch(s){return io(s)}return Li(t)}var Xa=Object.create,ji=Object.defineProperty,ht=Object.getOwnPropertyDescriptor,Ns=Object.getOwnPropertyNames,Ka=Object.getPrototypeOf,Za=Object.prototype.hasOwnProperty,so=(e,t)=>function(){return e&&(t=(0,e[Ns(e)[0]])(e=0)),t},Ri=(e,t)=>function(){return t||(0,e[Ns(e)[0]])((t={exports:{}}).exports,t),t.exports},Jn=(e,t)=>{for(var s in t)ji(e,s,{get:t[s],enumerable:!0})},Ni=(e,t,s,o)=>{if(t&&typeof t=="object"||typeof t=="function")for(let c of Ns(t))!Za.call(e,c)&&c!==s&&ji(e,c,{get:()=>t[c],enumerable:!(o=ht(t,c))||o.enumerable});return e},Er=(e,t,s)=>(s=e!=null?Xa(Ka(e)):{},Ni(t||!e||!e.__esModule?ji(s,"default",{value:e,enumerable:!0}):s,e)),lo=e=>Ni(ji({},"__esModule",{value:!0}),e),Ai=Ri({"../../node_modules/.pnpm/nearley@2.20.1/node_modules/nearley/lib/nearley.js"(e,t){(function(s,o){typeof t=="object"&&t.exports?t.exports=o():s.nearley=o()})(e,function(){function s(h,v,S){return this.id=++s.highestId,this.name=h,this.symbols=v,this.postprocess=S,this}s.highestId=0,s.prototype.toString=function(h){var v=typeof h=="undefined"?this.symbols.map(W).join(" "):this.symbols.slice(0,h).map(W).join(" ")+" \u25CF "+this.symbols.slice(h).map(W).join(" ");return this.name+" \u2192 "+v};function o(h,v,S,x){this.rule=h,this.dot=v,this.reference=S,this.data=[],this.wantedBy=x,this.isComplete=this.dot===h.symbols.length}o.prototype.toString=function(){return"{"+this.rule.toString(this.dot)+"}, from: "+(this.reference||0)},o.prototype.nextState=function(h){var v=new o(this.rule,this.dot+1,this.reference,this.wantedBy);return v.left=this,v.right=h,v.isComplete&&(v.data=v.build(),v.right=void 0),v},o.prototype.build=function(){var h=[],v=this;do h.push(v.right.data),v=v.left;while(v.left);return h.reverse(),h},o.prototype.finish=function(){this.rule.postprocess&&(this.data=this.rule.postprocess(this.data,this.reference,k.fail))};function c(h,v){this.grammar=h,this.index=v,this.states=[],this.wants={},this.scannable=[],this.completed={}}c.prototype.process=function(h){for(var v=this.states,S=this.wants,x=this.completed,j=0;j<v.length;j++){var A=v[j];if(A.isComplete){if(A.finish(),A.data!==k.fail){for(var K=A.wantedBy,te=K.length;te--;){var ce=K[te];this.complete(ce,A)}if(A.reference===this.index){var G=A.rule.name;(this.completed[G]=this.completed[G]||[]).push(A)}}}else{var G=A.rule.symbols[A.dot];if(typeof G!="string"){this.scannable.push(A);continue}if(S[G]){if(S[G].push(A),x.hasOwnProperty(G))for(var le=x[G],te=0;te<le.length;te++){var Pe=le[te];this.complete(A,Pe)}}else S[G]=[A],this.predict(G)}}},c.prototype.predict=function(h){for(var v=this.grammar.byName[h]||[],S=0;S<v.length;S++){var x=v[S],j=this.wants[h],A=new o(x,0,this.index,j);this.states.push(A)}},c.prototype.complete=function(h,v){var S=h.nextState(v);this.states.push(S)};function f(h,v){this.rules=h,this.start=v||this.rules[0].name;var S=this.byName={};this.rules.forEach(function(x){S.hasOwnProperty(x.name)||(S[x.name]=[]),S[x.name].push(x)})}f.fromCompiled=function(x,v){var S=x.Lexer;x.ParserStart&&(v=x.ParserStart,x=x.ParserRules);var x=x.map(function(A){return new s(A.name,A.symbols,A.postprocess)}),j=new f(x,v);return j.lexer=S,j};function p(){this.reset("")}p.prototype.reset=function(h,v){this.buffer=h,this.index=0,this.line=v?v.line:1,this.lastLineBreak=v?-v.col:0},p.prototype.next=function(){if(this.index<this.buffer.length){var h=this.buffer[this.index++];return h===`
`&&(this.line+=1,this.lastLineBreak=this.index),{value:h}}},p.prototype.save=function(){return{line:this.line,col:this.index-this.lastLineBreak}},p.prototype.formatError=function(h,v){var S=this.buffer;if(typeof S=="string"){var x=S.split(`
`).slice(Math.max(0,this.line-5),this.line),j=S.indexOf(`
`,this.index);j===-1&&(j=S.length);var A=this.index-this.lastLineBreak,K=String(this.line).length;return v+=" at line "+this.line+" col "+A+`:

`,v+=x.map(function(ce,G){return te(this.line-x.length+G+1,K)+" "+ce},this).join(`
`),v+=`
`+te("",K+A)+`^
`,v}else return v+" at index "+(this.index-1);function te(ce,G){var le=String(ce);return Array(G-le.length+1).join(" ")+le}};function k(h,v,x){if(h instanceof f)var j=h,x=v;else var j=f.fromCompiled(h,v);this.grammar=j,this.options={keepHistory:!1,lexer:j.lexer||new p};for(var A in x||{})this.options[A]=x[A];this.lexer=this.options.lexer,this.lexerState=void 0;var K=new c(j,0),te=this.table=[K];K.wants[j.start]=[],K.predict(j.start),K.process(),this.current=0}k.fail={},k.prototype.feed=function(h){var v=this.lexer;v.reset(h,this.lexerState);for(var S;;){try{if(S=v.next(),!S)break}catch(ne){var K=new c(this.grammar,this.current+1);this.table.push(K);var x=new Error(this.reportLexerError(ne));throw x.offset=this.current,x.token=ne.token,x}var j=this.table[this.current];this.options.keepHistory||delete this.table[this.current-1];var A=this.current+1,K=new c(this.grammar,A);this.table.push(K);for(var te=S.text!==void 0?S.text:S.value,ce=v.constructor===p?S.value:S,G=j.scannable,le=G.length;le--;){var Pe=G[le],re=Pe.rule.symbols[Pe.dot];if(re.test?re.test(ce):re.type?re.type===S.type:re.literal===te){var _e=Pe.nextState({data:ce,token:S,isToken:!0,reference:A-1});K.states.push(_e)}}if(K.process(),K.states.length===0){var x=new Error(this.reportError(S));throw x.offset=this.current,x.token=S,x}this.options.keepHistory&&(j.lexerState=v.save()),this.current++}return j&&(this.lexerState=v.save()),this.results=this.finish(),this},k.prototype.reportLexerError=function(h){var v,S,x=h.token;return x?(v="input "+JSON.stringify(x.text[0])+" (lexer error)",S=this.lexer.formatError(x,"Syntax error")):(v="input (lexer error)",S=h.message),this.reportErrorCommon(S,v)},k.prototype.reportError=function(h){var v=(h.type?h.type+" token: ":"")+JSON.stringify(h.value!==void 0?h.value:h),S=this.lexer.formatError(h,"Syntax error");return this.reportErrorCommon(S,v)},k.prototype.reportErrorCommon=function(h,v){var S=[];S.push(h);var x=this.table.length-2,j=this.table[x],A=j.states.filter(function(te){var ce=te.rule.symbols[te.dot];return ce&&typeof ce!="string"});if(A.length===0)S.push("Unexpected "+v+`. I did not expect any more input. Here is the state of my parse table:
`),this.displayStateStack(j.states,S);else{S.push("Unexpected "+v+`. Instead, I was expecting to see one of the following:
`);var K=A.map(function(te){return this.buildFirstStateStack(te,[])||[te]},this);K.forEach(function(te){var ce=te[0],G=ce.rule.symbols[ce.dot],le=this.getSymbolDisplay(G);S.push("A "+le+" based on:"),this.displayStateStack(te,S)},this)}return S.push(""),S.join(`
`)},k.prototype.displayStateStack=function(h,v){for(var S,x=0,j=0;j<h.length;j++){var A=h[j],K=A.rule.toString(A.dot);K===S?x++:(x>0&&v.push("    ^ "+x+" more lines identical to this"),x=0,v.push("    "+K)),S=K}},k.prototype.getSymbolDisplay=function(h){return R(h)},k.prototype.buildFirstStateStack=function(h,v){if(v.indexOf(h)!==-1)return null;if(h.wantedBy.length===0)return[h];var S=h.wantedBy[0],x=[h].concat(v),j=this.buildFirstStateStack(S,x);return j===null?null:[h].concat(j)},k.prototype.save=function(){var h=this.table[this.current];return h.lexerState=this.lexerState,h},k.prototype.restore=function(h){var v=h.index;this.current=v,this.table[v]=h,this.table.splice(v+1),this.lexerState=h.lexerState,this.results=this.finish()},k.prototype.rewind=function(h){if(!this.options.keepHistory)throw new Error("set option `keepHistory` to enable rewinding");this.restore(this.table[h])},k.prototype.finish=function(){var h=[],v=this.grammar.start,S=this.table[this.table.length-1];return S.states.forEach(function(x){x.rule.name===v&&x.dot===x.rule.symbols.length&&x.reference===0&&x.data!==k.fail&&h.push(x)}),h.map(function(x){return x.data})};function R(h){var v=typeof h;if(v==="string")return h;if(v==="object"){if(h.literal)return JSON.stringify(h.literal);if(h instanceof RegExp)return"character matching "+h;if(h.type)return h.type+" token";if(h.test)return"token matching "+String(h.test);throw new Error("Unknown symbol type: "+h)}}function W(h){var v=typeof h;if(v==="string")return h;if(v==="object"){if(h.literal)return JSON.stringify(h.literal);if(h instanceof RegExp)return h.toString();if(h.type)return"%"+h.type;if(h.test)return"<"+String(h.test)+">";throw new Error("Unknown symbol type: "+h)}}return{Parser:k,Grammar:f,Rule:s}})}}),oo=Ri({"../../node_modules/.pnpm/moo@0.5.1/node_modules/moo/moo.js"(e,t){(function(s,o){typeof define=="function"&&Ke.amdO?define([],o):typeof t=="object"&&t.exports?t.exports=o():s.moo=o()})(e,function(){"use strict";var s=Object.prototype.hasOwnProperty,o=Object.prototype.toString,c=typeof new RegExp().sticky=="boolean";function f(d){return d&&o.call(d)==="[object RegExp]"}function p(d){return d&&typeof d=="object"&&!f(d)&&!Array.isArray(d)}function k(d){return d.replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&")}function R(d){var w=new RegExp("|"+d);return w.exec("").length-1}function W(d){return"("+d+")"}function h(d){if(!d.length)return"(?!)";var w=d.map(function($){return"(?:"+$+")"}).join("|");return"(?:"+w+")"}function v(d){if(typeof d=="string")return"(?:"+k(d)+")";if(f(d)){if(d.ignoreCase)throw new Error("RegExp /i flag not allowed");if(d.global)throw new Error("RegExp /g flag is implied");if(d.sticky)throw new Error("RegExp /y flag is implied");if(d.multiline)throw new Error("RegExp /m flag is implied");return d.source}else throw new Error("Not a pattern: "+d)}function S(d){for(var w=Object.getOwnPropertyNames(d),$=[],O=0;O<w.length;O++){var D=w[O],V=d[D],H=[].concat(V);if(D==="include"){for(var fe=0;fe<H.length;fe++)$.push({include:H[fe]});continue}var me=[];H.forEach(function(I){p(I)?(me.length&&$.push(j(D,me)),$.push(j(D,I)),me=[]):me.push(I)}),me.length&&$.push(j(D,me))}return $}function x(d){for(var w=[],$=0;$<d.length;$++){var O=d[$];if(O.include){for(var D=[].concat(O.include),V=0;V<D.length;V++)w.push({include:D[V]});continue}if(!O.type)throw new Error("Rule has no type: "+JSON.stringify(O));w.push(j(O.type,O))}return w}function j(d,w){if(p(w)||(w={match:w}),w.include)throw new Error("Matching rules cannot also include states");var $={defaultType:d,lineBreaks:!!w.error||!!w.fallback,pop:!1,next:null,push:null,error:!1,fallback:!1,value:null,type:null,shouldThrow:!1};for(var O in w)s.call(w,O)&&($[O]=w[O]);if(typeof $.type=="string"&&d!==$.type)throw new Error("Type transform cannot be a string (type '"+$.type+"' for token '"+d+"')");var D=$.match;return $.match=Array.isArray(D)?D:D?[D]:[],$.match.sort(function(V,H){return f(V)&&f(H)?0:f(H)?-1:f(V)?1:H.length-V.length}),$}function A(d){return Array.isArray(d)?x(d):S(d)}var K=j("error",{lineBreaks:!0,shouldThrow:!0});function te(d,w){for(var $=null,O=Object.create(null),D=!0,V=null,H=[],fe=[],me=0;me<d.length;me++)d[me].fallback&&(D=!1);for(var me=0;me<d.length;me++){var I=d[me];if(I.include)throw new Error("Inheritance is not allowed in stateless lexers");if(I.error||I.fallback){if($)throw!I.fallback==!$.fallback?new Error("Multiple "+(I.fallback?"fallback":"error")+" rules not allowed (for token '"+I.defaultType+"')"):new Error("fallback and error are mutually exclusive (for token '"+I.defaultType+"')");$=I}var ge=I.match.slice();if(D)for(;ge.length&&typeof ge[0]=="string"&&ge[0].length===1;){var tt=ge.shift();O[tt.charCodeAt(0)]=I}if(I.pop||I.push||I.next){if(!w)throw new Error("State-switching options are not allowed in stateless lexers (for token '"+I.defaultType+"')");if(I.fallback)throw new Error("State-switching options are not allowed on fallback tokens (for token '"+I.defaultType+"')")}if(ge.length!==0){D=!1,H.push(I);for(var be=0;be<ge.length;be++){var we=ge[be];if(f(we)){if(V===null)V=we.unicode;else if(V!==we.unicode&&I.fallback===!1)throw new Error("If one rule is /u then all must be")}}var Je=h(ge.map(v)),u=new RegExp(Je);if(u.test(""))throw new Error("RegExp matches empty string: "+u);var E=R(Je);if(E>0)throw new Error("RegExp has capture groups: "+u+`
Use (?: \u2026 ) instead`);if(!I.lineBreaks&&u.test(`
`))throw new Error("Rule should declare lineBreaks: "+u);fe.push(W(Je))}}var ee=$&&$.fallback,De=c&&!ee?"ym":"gm",Wt=c||ee?"":"|";V===!0&&(De+="u");var Gr=new RegExp(h(fe)+Wt,De);return{regexp:Gr,groups:H,fast:O,error:$||K}}function ce(d){var w=te(A(d));return new re({start:w},"start")}function G(d,w,$){var O=d&&(d.push||d.next);if(O&&!$[O])throw new Error("Missing state '"+O+"' (in token '"+d.defaultType+"' of state '"+w+"')");if(d&&d.pop&&+d.pop!=1)throw new Error("pop must be 1 (in token '"+d.defaultType+"' of state '"+w+"')")}function le(d,w){var $=d.$all?A(d.$all):[];delete d.$all;var O=Object.getOwnPropertyNames(d);w||(w=O[0]);for(var D=Object.create(null),V=0;V<O.length;V++){var H=O[V];D[H]=A(d[H]).concat($)}for(var V=0;V<O.length;V++)for(var H=O[V],fe=D[H],me=Object.create(null),I=0;I<fe.length;I++){var ge=fe[I];if(ge.include){var tt=[I,1];if(ge.include!==H&&!me[ge.include]){me[ge.include]=!0;var be=D[ge.include];if(!be)throw new Error("Cannot include nonexistent state '"+ge.include+"' (in state '"+H+"')");for(var we=0;we<be.length;we++){var Je=be[we];fe.indexOf(Je)===-1&&tt.push(Je)}}fe.splice.apply(fe,tt),I--}}for(var u=Object.create(null),V=0;V<O.length;V++){var H=O[V];u[H]=te(D[H],!0)}for(var V=0;V<O.length;V++){for(var E=O[V],ee=u[E],De=ee.groups,I=0;I<De.length;I++)G(De[I],E,u);for(var Wt=Object.getOwnPropertyNames(ee.fast),I=0;I<Wt.length;I++)G(ee.fast[Wt[I]],E,u)}return new re(u,w)}function Pe(d){for(var w=Object.create(null),$=Object.create(null),O=Object.getOwnPropertyNames(d),D=0;D<O.length;D++){var V=O[D],H=d[V],fe=Array.isArray(H)?H:[H];fe.forEach(function(be){if(($[be.length]=$[be.length]||[]).push(be),typeof be!="string")throw new Error("keyword must be string (in keyword '"+V+"')");w[be]=V})}function me(be){return JSON.stringify(be)}var I="";I+=`switch (value.length) {
`;for(var ge in $){var tt=$[ge];I+="case "+ge+`:
`,I+=`switch (value) {
`,tt.forEach(function(be){var we=w[be];I+="case "+me(be)+": return "+me(we)+`
`}),I+=`}
`}return I+=`}
`,Function("value",I)}var re=function(d,w){this.startState=w,this.states=d,this.buffer="",this.stack=[],this.reset()};re.prototype.reset=function(d,w){return this.buffer=d||"",this.index=0,this.line=w?w.line:1,this.col=w?w.col:1,this.queuedToken=w?w.queuedToken:null,this.queuedThrow=w?w.queuedThrow:null,this.setState(w?w.state:this.startState),this.stack=w&&w.stack?w.stack.slice():[],this},re.prototype.save=function(){return{line:this.line,col:this.col,state:this.state,stack:this.stack.slice(),queuedToken:this.queuedToken,queuedThrow:this.queuedThrow}},re.prototype.setState=function(d){if(!(!d||this.state===d)){this.state=d;var w=this.states[d];this.groups=w.groups,this.error=w.error,this.re=w.regexp,this.fast=w.fast}},re.prototype.popState=function(){this.setState(this.stack.pop())},re.prototype.pushState=function(d){this.stack.push(this.state),this.setState(d)};var _e=c?function(d,w){return d.exec(w)}:function(d,w){var $=d.exec(w);return $[0].length===0?null:$};re.prototype._getGroup=function(d){for(var w=this.groups.length,$=0;$<w;$++)if(d[$+1]!==void 0)return this.groups[$];throw new Error("Cannot find token type for matched text")};function ne(){return this.value}if(re.prototype.next=function(){var d=this.index;if(this.queuedGroup){var w=this._token(this.queuedGroup,this.queuedText,d);return this.queuedGroup=null,this.queuedText="",w}var $=this.buffer;if(d!==$.length){var H=this.fast[$.charCodeAt(d)];if(H)return this._token(H,$.charAt(d),d);var O=this.re;O.lastIndex=d;var D=_e(O,$),V=this.error;if(D==null)return this._token(V,$.slice(d,$.length),d);var H=this._getGroup(D),fe=D[0];return V.fallback&&D.index!==d?(this.queuedGroup=H,this.queuedText=fe,this._token(V,$.slice(d,D.index),d)):this._token(H,fe,d)}},re.prototype._token=function(d,w,$){var O=0;if(d.lineBreaks){var D=/\n/g,V=1;if(w===`
`)O=1;else for(;D.exec(w);)O++,V=D.lastIndex}var H={type:typeof d.type=="function"&&d.type(w)||d.defaultType,value:typeof d.value=="function"?d.value(w):w,text:w,toString:ne,offset:$,lineBreaks:O,line:this.line,col:this.col},fe=w.length;if(this.index+=fe,this.line+=O,O!==0?this.col=fe-V+1:this.col+=fe,d.shouldThrow)throw new Error(this.formatError(H,"invalid syntax"));return d.pop?this.popState():d.push?this.pushState(d.push):d.next&&this.setState(d.next),H},typeof Symbol!="undefined"&&Symbol.iterator){var ye=function(d){this.lexer=d};ye.prototype.next=function(){var d=this.lexer.next();return{value:d,done:!d}},ye.prototype[Symbol.iterator]=function(){return this},re.prototype[Symbol.iterator]=function(){return new ye(this)}}return re.prototype.formatError=function(O,w){if(O==null)var $=this.buffer.slice(this.index),O={text:$,offset:this.index,lineBreaks:$.indexOf(`
`)===-1?0:1,line:this.line,col:this.col};var D=Math.max(0,O.offset-O.col+1),V=O.lineBreaks?O.text.indexOf(`
`):O.text.length,H=this.buffer.substring(D,O.offset+V);return w+=" at line "+O.line+" col "+O.col+`:

`,w+="  "+H+`
`,w+="  "+Array(O.col).join(" ")+"^",w},re.prototype.clone=function(){return new re(this.states,this.state)},re.prototype.has=function(d){return!0},{compile:ce,states:le,error:Object.freeze({error:!0}),fallback:Object.freeze({fallback:!0}),keywords:Pe}})}}),Qn=Ri({"../syntax/lib/index.cjs"(e,t){var s=Object.defineProperty,o=Object.getOwnPropertyDescriptor,c=Object.getOwnPropertyNames,f=Object.prototype.hasOwnProperty,p=(b,_)=>{for(var F in _)s(b,F,{get:_[F],enumerable:!0})},k=(b,_,F,Le)=>{if(_&&typeof _=="object"||typeof _=="function")for(let rt of c(_))!f.call(b,rt)&&rt!==F&&s(b,rt,{get:()=>_[rt],enumerable:!(Le=o(_,rt))||Le.enumerable});return b},R=b=>k(s({},"__esModule",{value:!0}),b),W={};p(W,{ArrayTerm:()=>fe,AssignmentStatement:()=>u,AssignmentTerm:()=>w,BlockStatement:()=>De,BooleanValue:()=>_e,CallStatement:()=>E,CallTerm:()=>O,ConditionalTerm:()=>be,DoTerm:()=>tt,DoWhileStatement:()=>sa,ElifStatement:()=>Gr,ElifTerm:()=>we,ElseStatement:()=>na,ElseTerm:()=>Je,ErrorTerm:()=>ne,ForStatement:()=>la,IfStatement:()=>Wt,IndexAccessTerm:()=>ge,LambdaTerm:()=>$,LetTerm:()=>D,MemberAccessTerm:()=>I,Merge:()=>te,NullValue:()=>le,NumberValue:()=>Pe,ObjectTerm:()=>me,ParentheticalTerm:()=>H,ReturnStatement:()=>ee,Span:()=>K,StringValue:()=>re,TextSpan:()=>G,ValueTerm:()=>ye,VariableDeclaration:()=>V,VariableTerm:()=>d,WhileStatement:()=>ia,lines:()=>ce,resolveFree:()=>S,resolveFreeStatement:()=>A,resolveFreeTerm:()=>j}),t.exports=R(W);function h(b){return b.tag.endsWith("Term")}function v(b){return b.tag.endsWith("Statement")}function S(b){let _=x();return h(b)?j(b,_):v(b)?A(b,_):[]}function x(){return{bound:[new Set]}}function j(b,_){return[]}function A(b,_){return[]}function K(b,_,F,Le){return{type:"Span",line:{start:b,end:_},column:{start:F,end:Le}}}function te(b,_){return{type:"Span",line:{start:b.line.start,end:_.line.end},column:{start:b.column.start,end:_.column.end}}}var ce=b=>b.split(/\r\n|\r|\n/);function G(b,_,F){let Le=b.length;if(Le==0)return K(_,_,F,F);let rt=ce(b),Yr=rt.length;if(Yr<=1)return K(_,_,F,F+Le);let oa=rt[Yr-1],aa=F+oa.length,ua=_+Yr-1;return K(_,ua,F,aa)}function le(b){return{tag:"NullValue",span:b}}function Pe(b,_){return{tag:"NumberValue",num:b,span:_}}function re(b,_){return{tag:"StringValue",str:b,span:_}}function _e(b,_){return{tag:"BooleanValue",bool:b,span:_}}function ne(b,_){return{tag:"ErrorTerm",msg:b,span:_}}function ye(b,_){return{tag:"ValueTerm",value:b,span:_}}function d(b,_){return{tag:"VariableTerm",variable:b,span:_}}function w(b,_,F){return{tag:"AssignmentTerm",lhs:b,rhs:_,span:F}}function $(b,_,F){return{tag:"LambdaTerm",args:b,body:_,span:F}}function O(b,_,F){return{tag:"CallTerm",func:b,args:_,span:F}}function D(b,_,F){return{tag:"LetTerm",declarations:b,body:_,span:F}}function V(b,_,F){return{tag:"VariableDeclaration",variable:b,body:_,span:F}}function H(b,_){return{tag:"ParentheticalTerm",term:b,span:_}}function fe(b,_){return{tag:"ArrayTerm",elements:b,span:_}}function me(b,_){return{tag:"ObjectTerm",entries:b,span:_}}function I(b,_,F){return{tag:"MemberAccessTerm",object:b,member:_,span:F}}function ge(b,_,F){return{tag:"IndexAccessTerm",array:b,index:_,span:F}}function tt(b,_){return{tag:"DoTerm",block:b,span:_}}function be(b,_,F,Le){return{tag:"ConditionalTerm",condition:b,body:_,branch:F,span:Le}}function we(b,_,F,Le){return{tag:"ElifTerm",condition:b,body:_,branch:F,span:Le}}function Je(b,_){return{tag:"ElseTerm",body:b,span:_}}function u(b,_,F){return{tag:"AssignmentStatement",lhs:b,rhs:_,span:F}}function E(b,_,F){return{tag:"CallStatement",func:b,args:_,span:F}}function ee(b,_){return{tag:"ReturnStatement",result:b,span:_}}function De(b,_){return{tag:"BlockStatement",statements:b,span:_}}function Wt(b,_,F,Le){return{tag:"IfStatement",condition:b,body:_,branch:F,span:Le}}function Gr(b,_,F,Le){return{tag:"ElifStatement",condition:b,body:_,branch:F,span:Le}}function na(b,_){return{tag:"ElseStatement",body:b,span:_}}function ia(b,_,F){return{tag:"WhileStatement",condition:b,body:_,span:F}}function sa(b,_,F){return{tag:"DoWhileStatement",body:b,condition:_,span:F}}function la(b,_,F,Le,rt){return{tag:"ForStatement",declarations:b,condition:_,update:F,body:Le,span:rt}}}}),ao={};Jn(ao,{SourceToken:()=>Vi,Token:()=>eu});function Vi(e){let t=e.text,s=e.line,o=e.col;return{type:"Token",text:t,span:(0,uo.TextSpan)(t,s,o)}}function eu(e,...t){let s=Vi(e),o=t.length;if(o<=0)return s;s.text+=t.map(k=>k.text).join("");let c=t[o-1],f=Vi(c),p=(0,uo.Merge)(s.span,f.span);return s.span=p,s}var uo,As=so({"src/coolscript/parser/token.ts"(){uo=Er(Qn())}}),En={};Jn(En,{ArrayTerm:()=>Zn,AssignmentStatement:()=>ei,AssignmentTerm:()=>Mi,BlockStatement:()=>iu,CallStatement:()=>nr,CallTerm:()=>Is,ConditionalTerm:()=>Yt,DoTerm:()=>ln,DoWhileStatement:()=>Cn,ElifStatement:()=>Fs,ElifTerm:()=>rr,ElseStatement:()=>lu,ElseTerm:()=>$n,ErrorTerm:()=>Xn,FalseValue:()=>Ms,ForStatement:()=>qc,IfStatement:()=>su,IndexAccessTerm:()=>xt,LambdaTerm:()=>Kn,LetTerm:()=>nu,MemberAccessTerm:()=>dt,NullValue:()=>co,NumberValue:()=>Hc,ObjectTerm:()=>sn,ParentheticalTerm:()=>fo,ReturnStatement:()=>Bs,StringValue:()=>Vs,TrueValue:()=>nn,ValueTerm:()=>ru,VariableDeclaration:()=>tu,VariableTerm:()=>Tn,WhileStatement:()=>mo});function tu(e,t){return He.VariableDeclaration(e.text,t,(0,Pn.Merge)(e.span,t.span))}function co(e){return He.NullValue(e.span)}function Hc(e){let t=parseFloat(e.text);return He.NumberValue(t,e.span)}function Vs(e){let t=e.text,s=t.substring(1,t.length-1);return He.StringValue(s,e.span)}function nn(e){return He.BooleanValue(!0,e.span)}function Ms(e){return He.BooleanValue(!1,e.span)}function Xn(e,t){return He.ErrorTerm(e,t)}function ru(e){return He.ValueTerm(e,e.span)}function Tn(e){return He.VariableTerm(e.text,e.span)}function Mi(e,t){return He.AssignmentTerm(e.text,t,(0,Pn.Merge)(e.span,t.span))}function Kn(e,t,s){return He.LambdaTerm(e,t,s)}function Is(e,t,s){return He.CallTerm(e,t,s)}function nu(e,t,s){return He.LetTerm(e,t,s)}function fo(e,t){return He.ParentheticalTerm(e,t)}function Zn(e,t){return He.ArrayTerm(e,t)}function sn(e,t){return He.ObjectTerm(e,t)}function dt(e,t){return He.MemberAccessTerm(e,t.text,(0,Pn.Merge)(e.span,t.span))}function xt(e,t,s){return He.IndexAccessTerm(e,t,s)}function ln(e,t){return He.DoTerm(e,t)}function Yt(e,t,s,o){return He.ConditionalTerm(e,t,s,o)}function rr(e,t,s,o){return He.ElifTerm(e,t,s,o)}function $n(e,t){return He.ElseTerm(e,t)}function ei(e,t){return He.AssignmentStatement(e.text,t,(0,Pn.Merge)(e.span,t.span))}function nr(e,t,s){return He.CallStatement(e,t,s)}function Bs(e,t){return He.ReturnStatement(e,t)}function iu(e,t){return He.BlockStatement(e,t)}function su(e,t,s,o){return He.IfStatement(e,t,s,o)}function Fs(e,t,s,o){return He.ElifStatement(e,t,s,o)}function lu(e,t){return He.ElseStatement(e,t)}function mo(e,t,s){return He.WhileStatement(e,t,s)}function Cn(e,t,s){return He.DoWhileStatement(e,t,s)}function qc(e,t,s,o,c){return He.ForStatement(e,t,s,o,c)}var He,Pn,Gc=so({"src/coolscript/parser/parser-syntax-constructors.ts"(){He=Er(Qn()),Pn=Er(Qn())}}),ou=Ri({"nearley:C:\\Users\\zetta\\code\\coolscript\\packages\\parser\\src\\coolscript\\parser\\grammar\\grammar.ne"(e,t){(function(){function s(u){return u[0]}let o=oo(),{Span:c,Merge:f}=Qn(),{Token:p}=(As(),lo(ao)),{NullValue:k,NumberValue:R,StringValue:W,TrueValue:h,FalseValue:v,ValueTerm:S,VariableTerm:x,AssignmentTerm:j,LambdaTerm:A,CallTerm:K,LetTerm:te,VariableDeclaration:ce,ParentheticalTerm:G,ArrayTerm:le,ObjectTerm:Pe,MemberAccessTerm:re,IndexAccessTerm:_e,DoTerm:ne,ConditionalTerm:ye,ElifTerm:d,ElseTerm:w,AssignmentStatement:$,CallStatement:O,ReturnStatement:D,BlockStatement:V,IfStatement:H,BranchStatement:fe,ElifStatement:me,ElseStatement:I,WhileStatement:ge,DoWhileStatement:tt,ForStatement:be}=(Gc(),lo(En)),we=o.compile({ws:/[ \t\v\f]+/,newline:{match:/[ \n]+/,lineBreaks:!0},comment:/\/\/.*?$/,identifier:/[a-zA-Z][a-zA-Z0-9]*/,number:/[0-9]+/,dqstring:{match:/"(?:\\["\\]|[^\n"\\])*"/,lineBreaks:!0},sqstring:{match:/'(?:\\['\\]|[^\n'\\])*'/,lineBreaks:!0},keyword:["null","true","false","error","let","in","do","if","else","elif","while","for",".","+","-","*","/","++","--","&&","||","==","!=","(",")","[","]","{","}",";",":",",","=","=>"]});var Je={Lexer:we,ParserRules:[{name:"main",symbols:["file"],postprocess:s},{name:"file",symbols:["_","term","_"],postprocess:([,u])=>u},{name:"_$ebnf$1",symbols:[we.has("ws")?{type:"ws"}:ws],postprocess:s},{name:"_$ebnf$1",symbols:[],postprocess:function(u){return null}},{name:"_",symbols:["_$ebnf$1"],postprocess:null},{name:"_",symbols:["_",we.has("comment")?{type:"comment"}:comment,"_"],postprocess:null},{name:"_",symbols:["_",we.has("newline")?{type:"newline"}:newline,"_"],postprocess:null},{name:"identifier_token",symbols:[we.has("identifier")?{type:"identifier"}:identifier],postprocess:([u])=>p(u)},{name:"null_token",symbols:[{literal:"null"}],postprocess:([u])=>p(u)},{name:"number_token",symbols:[we.has("number")?{type:"number"}:number],postprocess:([u])=>p(u)},{name:"number_token",symbols:[we.has("number")?{type:"number"}:number,{literal:"."},we.has("number")?{type:"number"}:number],postprocess:([u,E,ee])=>p(u,E,ee)},{name:"string_token",symbols:[we.has("sqstring")?{type:"sqstring"}:sqstring],postprocess:([u])=>p(u)},{name:"string_token",symbols:[we.has("dqstring")?{type:"dqstring"}:dqstring],postprocess:([u])=>p(u)},{name:"true_token",symbols:[{literal:"true"}],postprocess:([u])=>p(u)},{name:"false_token",symbols:[{literal:"false"}],postprocess:([u])=>p(u)},{name:"value",symbols:["null_value"],postprocess:s},{name:"value",symbols:["number_value"],postprocess:s},{name:"value",symbols:["boolean_value"],postprocess:s},{name:"value",symbols:["string_value"],postprocess:s},{name:"null_value",symbols:["null_token"],postprocess:([u])=>k(u)},{name:"number_value",symbols:["number_token"],postprocess:([u])=>R(u)},{name:"string_value",symbols:["string_token"],postprocess:([u])=>W(u)},{name:"boolean_value",symbols:["true_token"],postprocess:([u])=>h(u)},{name:"boolean_value",symbols:["false_token"],postprocess:([u])=>v(u)},{name:"term",symbols:["cterm"],postprocess:s},{name:"cterm",symbols:["let_term"],postprocess:s},{name:"cterm",symbols:["lambda_term"],postprocess:s},{name:"cterm",symbols:["do_term"],postprocess:s},{name:"cterm",symbols:["conditional_term"],postprocess:s},{name:"cterm",symbols:["assignment_term"],postprocess:s},{name:"cterm",symbols:["bterm"],postprocess:s},{name:"bterm",symbols:["call_term"],postprocess:s},{name:"bterm",symbols:["member_access_term"],postprocess:s},{name:"bterm",symbols:["index_access_term"],postprocess:s},{name:"bterm",symbols:["aterm"],postprocess:s},{name:"aterm",symbols:["value_term"],postprocess:s},{name:"aterm",symbols:["variable_term"],postprocess:s},{name:"aterm",symbols:["array_term"],postprocess:s},{name:"aterm",symbols:["object_term"],postprocess:s},{name:"aterm",symbols:["parenthetical_term"],postprocess:s},{name:"value_term",symbols:["value"],postprocess:([u])=>S(u)},{name:"variable_term",symbols:["identifier_token"],postprocess:([u])=>x(u)},{name:"assignment_term",symbols:["identifier_token","_",{literal:"="},"_","term"],postprocess:([u,,,,E])=>j(u,E)},{name:"lambda_term$ebnf$1",symbols:[]},{name:"lambda_term$ebnf$1$subexpression$1",symbols:[{literal:","},"_"]},{name:"lambda_term$ebnf$1",symbols:["lambda_term$ebnf$1","lambda_term$ebnf$1$subexpression$1"],postprocess:function(u){return u[0].concat([u[1]])}},{name:"lambda_term",symbols:[{literal:"("},"_","lambda_arguments","_","lambda_term$ebnf$1",{literal:")"},"_",{literal:"=>"},"_","term"],postprocess:([u,,E,,,,,,,ee])=>A(E,ee,f(p(u).span,ee.span))},{name:"lambda_arguments$ebnf$1",symbols:[]},{name:"lambda_arguments$ebnf$1",symbols:["lambda_arguments$ebnf$1","lambda_arguments_tail"],postprocess:function(u){return u[0].concat([u[1]])}},{name:"lambda_arguments",symbols:["identifier_token","lambda_arguments$ebnf$1"],postprocess:([u,E])=>[u.text,...E]},{name:"lambda_arguments_tail",symbols:["_",{literal:","},"_","identifier_token"],postprocess:([,,,u])=>u.text},{name:"call_term$ebnf$1",symbols:[]},{name:"call_term$ebnf$1$subexpression$1",symbols:[{literal:","},"_"]},{name:"call_term$ebnf$1",symbols:["call_term$ebnf$1","call_term$ebnf$1$subexpression$1"],postprocess:function(u){return u[0].concat([u[1]])}},{name:"call_term",symbols:["bterm","_",{literal:"("},"_","call_arguments","_","call_term$ebnf$1",{literal:")"}],postprocess:u=>K(u[0],u[4],f(u[0].span,p(u[7]).span))},{name:"call_arguments$ebnf$1",symbols:[]},{name:"call_arguments$ebnf$1",symbols:["call_arguments$ebnf$1","call_arguments_tail"],postprocess:function(u){return u[0].concat([u[1]])}},{name:"call_arguments",symbols:["bterm","call_arguments$ebnf$1"],postprocess:([u,E])=>[u,...E]},{name:"call_arguments_tail",symbols:["_",{literal:","},"_","bterm"],postprocess:([,,,u])=>u},{name:"parenthetical_term",symbols:[{literal:"("},"_","term","_",{literal:")"}],postprocess:([u,,E,,ee])=>G(E,f(p(u).span,p(ee).span))},{name:"array_term",symbols:[{literal:"["},"_",{literal:"]"}],postprocess:([u,,E])=>le([],f(p(u).span,p(E).span))},{name:"array_term$ebnf$1",symbols:[]},{name:"array_term$ebnf$1$subexpression$1",symbols:[{literal:","},"_"]},{name:"array_term$ebnf$1",symbols:["array_term$ebnf$1","array_term$ebnf$1$subexpression$1"],postprocess:function(u){return u[0].concat([u[1]])}},{name:"array_term",symbols:[{literal:"["},"_","array_term_elements","_","array_term$ebnf$1",{literal:"]"}],postprocess:([u,,E,,,ee])=>le(E,f(p(u).span,p(ee).span))},{name:"array_term_elements$ebnf$1",symbols:[]},{name:"array_term_elements$ebnf$1",symbols:["array_term_elements$ebnf$1","array_term_elements_tail"],postprocess:function(u){return u[0].concat([u[1]])}},{name:"array_term_elements",symbols:["term","array_term_elements$ebnf$1"],postprocess:([u,E])=>[u,...E]},{name:"array_term_elements_tail",symbols:["_",{literal:","},"_","term"],postprocess:([,,,u])=>u},{name:"object_term",symbols:[{literal:"{"},"_",{literal:"}"}],postprocess:()=>Pe({},f(p(t1).span,p(t2).span))},{name:"object_term$ebnf$1",symbols:[]},{name:"object_term$ebnf$1$subexpression$1",symbols:[{literal:","},"_"]},{name:"object_term$ebnf$1",symbols:["object_term$ebnf$1","object_term$ebnf$1$subexpression$1"],postprocess:function(u){return u[0].concat([u[1]])}},{name:"object_term",symbols:[{literal:"{"},"_","object_term_entries","_","object_term$ebnf$1",{literal:"}"}],postprocess:([u,,E,,,ee])=>Pe(Object.fromEntries(E),f(p(u).span,p(ee).span))},{name:"object_term_entries$ebnf$1",symbols:[]},{name:"object_term_entries$ebnf$1",symbols:["object_term_entries$ebnf$1","object_term_entries_tail"],postprocess:function(u){return u[0].concat([u[1]])}},{name:"object_term_entries",symbols:["object_term_entry","object_term_entries$ebnf$1"],postprocess:([u,E])=>[u,...E]},{name:"object_term_entries_tail",symbols:["_",{literal:","},"_","object_term_entry"],postprocess:([,,,u])=>u},{name:"object_term_entry",symbols:["identifier_token","_",{literal:":"},"_","term"],postprocess:([u,,,,E])=>[u.text,E]},{name:"member_access_term",symbols:["bterm","_",{literal:"."},"_","identifier_token"],postprocess:u=>re(u[0],u[4])},{name:"index_access_term",symbols:["bterm","_",{literal:"["},"_","bterm","_",{literal:"]"}],postprocess:([u,,,,E,,ee])=>_e(u,E,f(u.span,p(ee).span))},{name:"let_term$ebnf$1",symbols:[]},{name:"let_term$ebnf$1$subexpression$1",symbols:[{literal:";"},"_"]},{name:"let_term$ebnf$1",symbols:["let_term$ebnf$1","let_term$ebnf$1$subexpression$1"],postprocess:function(u){return u[0].concat([u[1]])}},{name:"let_term",symbols:[{literal:"let"},"_","let_declarations","_","let_term$ebnf$1",{literal:"in"},"_","term"],postprocess:([u,,E,,,,,ee])=>te(E,ee,f(p(u).span,ee.span))},{name:"let_declarations$ebnf$1",symbols:[]},{name:"let_declarations$ebnf$1",symbols:["let_declarations$ebnf$1","let_declarations_tail"],postprocess:function(u){return u[0].concat([u[1]])}},{name:"let_declarations",symbols:["declaration","let_declarations$ebnf$1"],postprocess:([u,E])=>[u,...E]},{name:"let_declarations_tail",symbols:["_",{literal:";"},"_","declaration"],postprocess:([,,,u])=>u},{name:"declaration",symbols:["variable_declaration"],postprocess:s},{name:"variable_declaration",symbols:["identifier_token","_",{literal:"="},"_","term"],postprocess:([u,,,,E])=>ce(u,E)},{name:"do_term",symbols:[{literal:"do"},"_","block_statement"],postprocess:([u,,E])=>ne(E,f(p(u).span,E.span))},{name:"conditional_term",symbols:[{literal:"if"},"_",{literal:"("},"_","term","_",{literal:")"},"_","term","_","branch_term"],postprocess:([u,,,,E,,,,ee,,De])=>ye(E,ee,De,f(p(u).span,De.span))},{name:"branch_term",symbols:[{literal:"elif"},"_",{literal:"("},"_","term","_",{literal:")"},"_","term","_","branch_term"],postprocess:([u,,,,E,,,,ee,,De])=>d(E,ee,De,f(p(u).span,De.span))},{name:"branch_term",symbols:[{literal:"else"},"_","term"],postprocess:([u,,E])=>w(E,f(p(u).span,E.span))},{name:"statement",symbols:["assignment_statement"],postprocess:s},{name:"statement",symbols:["call_statement"],postprocess:s},{name:"statement",symbols:["return_statement"],postprocess:s},{name:"statement",symbols:["block_statement"],postprocess:s},{name:"statement",symbols:["if_statement"],postprocess:s},{name:"statement",symbols:["while_statement"],postprocess:s},{name:"statement",symbols:["do_while_statement"],postprocess:s},{name:"statement",symbols:["for_statement"],postprocess:s},{name:"assignment_statement",symbols:["identifier_token","_",{literal:"="},"_","term"],postprocess:([u,,,,E])=>$(u,E)},{name:"call_statement$ebnf$1",symbols:[]},{name:"call_statement$ebnf$1$subexpression$1",symbols:[{literal:","},"_"]},{name:"call_statement$ebnf$1",symbols:["call_statement$ebnf$1","call_statement$ebnf$1$subexpression$1"],postprocess:function(u){return u[0].concat([u[1]])}},{name:"call_statement",symbols:["aterm","_",{literal:"("},"_","call_arguments","_","call_statement$ebnf$1",{literal:")"}],postprocess:([u,,,,E,,,ee])=>O(u,E,f(u.span,p(ee).span))},{name:"return_statement",symbols:[{literal:"return"},"_","term"],postprocess:([u,,E])=>D(E,f(p(u).span,E.span))},{name:"block_statement$ebnf$1",symbols:["statement_list"],postprocess:s},{name:"block_statement$ebnf$1",symbols:[],postprocess:function(u){return null}},{name:"block_statement$ebnf$2",symbols:[]},{name:"block_statement$ebnf$2$subexpression$1",symbols:[{literal:";"},"_"]},{name:"block_statement$ebnf$2",symbols:["block_statement$ebnf$2","block_statement$ebnf$2$subexpression$1"],postprocess:function(u){return u[0].concat([u[1]])}},{name:"block_statement",symbols:[{literal:"{"},"_","block_statement$ebnf$1","_","block_statement$ebnf$2",{literal:"}"}],postprocess:([u,,E,,,ee])=>V(E,f(p(u).span,p(ee).span))},{name:"statement_list$ebnf$1",symbols:[]},{name:"statement_list$ebnf$1",symbols:["statement_list$ebnf$1","statement_list_tail"],postprocess:function(u){return u[0].concat([u[1]])}},{name:"statement_list",symbols:["statement","statement_list$ebnf$1"],postprocess:([u,E])=>[u,...E]},{name:"statement_list_tail",symbols:["_",{literal:";"},"_","statement"],postprocess:([,,,u])=>u},{name:"if_statement$ebnf$1",symbols:["branch_statement"],postprocess:s},{name:"if_statement$ebnf$1",symbols:[],postprocess:function(u){return null}},{name:"if_statement",symbols:[{literal:"if"},"_",{literal:"("},"_","term","_",{literal:")"},"_","statement","_","if_statement$ebnf$1"],postprocess:u=>H(u[4],u[8],u[10],f(p(u[0]).span,u[10]?u[10].span:u[8].span))},{name:"branch_statement$ebnf$1",symbols:["branch_statement"],postprocess:s},{name:"branch_statement$ebnf$1",symbols:[],postprocess:function(u){return null}},{name:"branch_statement",symbols:[{literal:"elif"},"_",{literal:"("},"_","term","_",{literal:")"},"_","statement","_","branch_statement$ebnf$1"],postprocess:u=>me(u[4],u[8],u[10],f(p(u[0]).span,u[10]?u[10].span:u[8].span))},{name:"branch_statement",symbols:[{literal:"else"},"_","term"],postprocess:u=>I(u[2],f(p(u[0]).span,u[2].span))},{name:"while_statement",symbols:[{literal:"while"},"_",{literal:"("},"_","term","_",{literal:")"},"_","statement"],postprocess:u=>ge(u[4],u[8],f(p(u[0]).span,u[8].span))},{name:"do_while_statement",symbols:[{literal:"do"},"_","statement","_",{literal:"while"},"_",{literal:"("},"_","term","_",{literal:")"}],postprocess:u=>tt(u[2],u[8],f(p(u[0]).span,p(u[10]).span))},{name:"for_statement",symbols:[{literal:"for"},"_",{literal:"("},"_","term","_",{literal:";"},"_","term","_",{literal:";"},"_","term","_",{literal:")"},"_","statement"],postprocess:u=>be(u[4],u[8],u[12],u[16],f(p(u[0]).span,u[16].span))}],ParserStart:"main"};typeof t!="undefined"&&typeof t.exports!="undefined"?t.exports=Je:window.grammar=Je})()}}),po=Er(Ai()),Yc=Er(Ai()),Ds=Er(ou()),au=Yc.Grammar.fromCompiled(Ds.default);function uu(e,t){return{term:e,warnings:t}}function ho(e,...t){return{term:null,errors:t,warnings:e}}function cu(e){let t=new po.Parser(au),s=[];try{t.feed(e)}catch(c){let f="";c&&c.stack&&c.message&&(f=` Error message: ${c.message}`);let p=`Parser failed!${f}`,k=new Error(p);return ho(s,k)}if(!t.results||!Array.isArray(t.results)||t.results.length==0){let c=new Error("No parse results were recovered.");return ho(s,c)}if(t.results.length>1){let c=new Error("Ambiguous grammar encountered! Resolving first result.");s.push(c)}let o=t.results[0];return uu(o,s)}As();function zs(...e){return{source:null,errors:e}}function Jc(e){return{source:e}}function Br(e){let t=cu(e);if(t.errors||!t.term)return zs(...t.errors);let s=Qa(t.term);return s.errors||!s.source?zs(...s.errors):Jc(s.source)}var Ii=Ke(898);const yo=(0,vt.style)({}),fu=(0,vt.style)({});function It(e){return Ii.createElement("div",{className:yo},e.errors.map((t,s)=>Ii.createElement("div",{key:t.message,className:fu},s+1,". ",t.message)))}var on=Ke(898);function mu(){const{scriptText:e}=Zr(),t=(0,X.useMemo)(()=>e?Br(e):null,[e]);return t?Array.isArray(t.errors)?on.createElement(It,{errors:t.errors}):on.createElement("pre",null,t.source):on.createElement("p",null,"No result to report.")}function On(e){return e.tag.endsWith("Term")}function Bi(e){return e.tag.endsWith("Statement")}function Rr(e){const t=pu();return On(e)?Qc(e,t):Bi(e)?Tr(e,t):[]}function pu(){return{bound:[new Set]}}function Qc(e,t){return[]}function Tr(e,t){return[]}function Ws(e){return{tag:"NullValue",span:e}}function Fi(e,t){return{tag:"ErrorTerm",msg:e,span:t}}function Ln(e,t){return{tag:"ValueTerm",value:e,span:t}}function Di(e,t,s){return{tag:"AssignmentTerm",lhs:e,rhs:t,span:s}}function Us(e,t,s){return{tag:"LambdaTerm",args:e,body:t,span:s}}function vo(e,t,s){return{tag:"CallTerm",func:e,args:t,span:s}}function go(e,t){return{tag:"ArrayTerm",elements:e,span:t}}function jn(e,t){return{tag:"ObjectTerm",entries:e,span:t}}function pr(e,t,s,o){return{tag:"ConditionalTerm",condition:e,body:t,branch:s,span:o}}function Fr(e,t,s,o){return{tag:"IfStatement",condition:e,body:t,branch:s,span:o}}var{stringify:bo}=JSON;if(!String.prototype.repeat)throw new Error("String.prototype.repeat is undefined, see https://github.com/davidbonnet/astring#installation");if(!String.prototype.endsWith)throw new Error("String.prototype.endsWith is undefined, see https://github.com/davidbonnet/astring#installation");var zi={"||":3,"&&":4,"|":5,"??":5,"^":6,"&":7,"==":8,"!=":8,"===":8,"!==":8,"<":9,">":9,"<=":9,">=":9,in:9,instanceof:9,"<<":10,">>":10,">>>":10,"+":11,"-":11,"*":12,"%":12,"/":12,"**":13},Bt=17,an={ArrayExpression:20,TaggedTemplateExpression:20,ThisExpression:20,Identifier:20,PrivateIdentifier:20,Literal:18,TemplateLiteral:20,Super:20,SequenceExpression:20,MemberExpression:19,ChainExpression:19,CallExpression:19,NewExpression:19,ArrowFunctionExpression:Bt,ClassExpression:Bt,FunctionExpression:Bt,ObjectExpression:Bt,UpdateExpression:16,UnaryExpression:15,AwaitExpression:15,BinaryExpression:14,LogicalExpression:13,ConditionalExpression:4,AssignmentExpression:3,YieldExpression:2,RestElement:1};function Rn(e,t){const{generator:s}=e;if(e.write("("),t!=null&&t.length>0){s[t[0].type](t[0],e);const{length:o}=t;for(let c=1;c<o;c++){const f=t[c];e.write(", "),s[f.type](f,e)}}e.write(")")}function ti(e,t,s,o){const c=e.expressionsPrecedence[t.type];if(c===Bt)return!0;const f=e.expressionsPrecedence[s.type];return c!==f?!o&&c===15&&f===14&&s.operator==="**"||c<f:c!==13&&c!==14?!1:t.operator==="**"&&s.operator==="**"?!o:o?zi[t.operator]<=zi[s.operator]:zi[t.operator]<zi[s.operator]}function Wi(e,t,s,o){const{generator:c}=e;ti(e,t,s,o)?(e.write("("),c[t.type](t,e),e.write(")")):c[t.type](t,e)}function hu(e,t,s,o){const c=t.split(`
`),f=c.length-1;if(e.write(c[0].trim()),f>0){e.write(o);for(let p=1;p<f;p++)e.write(s+c[p].trim()+o);e.write(s+c[f].trim())}}function Ft(e,t,s,o){const{length:c}=t;for(let f=0;f<c;f++){const p=t[f];e.write(s),p.type[0]==="L"?e.write("// "+p.value.trim()+`
`,p):(e.write("/*"),hu(e,p.value,s,o),e.write("*/"+o))}}function Hs(e){let t=e;for(;t!=null;){const{type:s}=t;if(s[0]==="C"&&s[1]==="a")return!0;if(s[0]==="M"&&s[1]==="e"&&s[2]==="m")t=t.object;else return!1}}function qs(e,t){const{generator:s}=e,{declarations:o}=t;e.write(t.kind+" ");const{length:c}=o;if(c>0){s.VariableDeclarator(o[0],e);for(let f=1;f<c;f++)e.write(", "),s.VariableDeclarator(o[f],e)}}var wo,_o,Gs,Ui,ri,Hi,du={Program(e,t){const s=t.indent.repeat(t.indentLevel),{lineEnd:o,writeComments:c}=t;c&&e.comments!=null&&Ft(t,e.comments,s,o);const f=e.body,{length:p}=f;for(let k=0;k<p;k++){const R=f[k];c&&R.comments!=null&&Ft(t,R.comments,s,o),t.write(s),this[R.type](R,t),t.write(o)}c&&e.trailingComments!=null&&Ft(t,e.trailingComments,s,o)},BlockStatement:Hi=function(e,t){const s=t.indent.repeat(t.indentLevel++),{lineEnd:o,writeComments:c}=t,f=s+t.indent;t.write("{");const p=e.body;if(p!=null&&p.length>0){t.write(o),c&&e.comments!=null&&Ft(t,e.comments,f,o);const{length:k}=p;for(let R=0;R<k;R++){const W=p[R];c&&W.comments!=null&&Ft(t,W.comments,f,o),t.write(f),this[W.type](W,t),t.write(o)}t.write(s)}else c&&e.comments!=null&&(t.write(o),Ft(t,e.comments,f,o),t.write(s));c&&e.trailingComments!=null&&Ft(t,e.trailingComments,f,o),t.write("}"),t.indentLevel--},ClassBody:Hi,StaticBlock(e,t){t.write("static "),this.BlockStatement(e,t)},EmptyStatement(e,t){t.write(";")},ExpressionStatement(e,t){const s=t.expressionsPrecedence[e.expression.type];s===Bt||s===3&&e.expression.left.type[0]==="O"?(t.write("("),this[e.expression.type](e.expression,t),t.write(")")):this[e.expression.type](e.expression,t),t.write(";")},IfStatement(e,t){t.write("if ("),this[e.test.type](e.test,t),t.write(") "),this[e.consequent.type](e.consequent,t),e.alternate!=null&&(t.write(" else "),this[e.alternate.type](e.alternate,t))},LabeledStatement(e,t){this[e.label.type](e.label,t),t.write(": "),this[e.body.type](e.body,t)},BreakStatement(e,t){t.write("break"),e.label!=null&&(t.write(" "),this[e.label.type](e.label,t)),t.write(";")},ContinueStatement(e,t){t.write("continue"),e.label!=null&&(t.write(" "),this[e.label.type](e.label,t)),t.write(";")},WithStatement(e,t){t.write("with ("),this[e.object.type](e.object,t),t.write(") "),this[e.body.type](e.body,t)},SwitchStatement(e,t){const s=t.indent.repeat(t.indentLevel++),{lineEnd:o,writeComments:c}=t;t.indentLevel++;const f=s+t.indent,p=f+t.indent;t.write("switch ("),this[e.discriminant.type](e.discriminant,t),t.write(") {"+o);const{cases:k}=e,{length:R}=k;for(let W=0;W<R;W++){const h=k[W];c&&h.comments!=null&&Ft(t,h.comments,f,o),h.test?(t.write(f+"case "),this[h.test.type](h.test,t),t.write(":"+o)):t.write(f+"default:"+o);const{consequent:v}=h,{length:S}=v;for(let x=0;x<S;x++){const j=v[x];c&&j.comments!=null&&Ft(t,j.comments,p,o),t.write(p),this[j.type](j,t),t.write(o)}}t.indentLevel-=2,t.write(s+"}")},ReturnStatement(e,t){t.write("return"),e.argument&&(t.write(" "),this[e.argument.type](e.argument,t)),t.write(";")},ThrowStatement(e,t){t.write("throw "),this[e.argument.type](e.argument,t),t.write(";")},TryStatement(e,t){if(t.write("try "),this[e.block.type](e.block,t),e.handler){const{handler:s}=e;s.param==null?t.write(" catch "):(t.write(" catch ("),this[s.param.type](s.param,t),t.write(") ")),this[s.body.type](s.body,t)}e.finalizer&&(t.write(" finally "),this[e.finalizer.type](e.finalizer,t))},WhileStatement(e,t){t.write("while ("),this[e.test.type](e.test,t),t.write(") "),this[e.body.type](e.body,t)},DoWhileStatement(e,t){t.write("do "),this[e.body.type](e.body,t),t.write(" while ("),this[e.test.type](e.test,t),t.write(");")},ForStatement(e,t){if(t.write("for ("),e.init!=null){const{init:s}=e;s.type[0]==="V"?qs(t,s):this[s.type](s,t)}t.write("; "),e.test&&this[e.test.type](e.test,t),t.write("; "),e.update&&this[e.update.type](e.update,t),t.write(") "),this[e.body.type](e.body,t)},ForInStatement:wo=function(e,t){t.write(`for ${e.await?"await ":""}(`);const{left:s}=e;s.type[0]==="V"?qs(t,s):this[s.type](s,t),t.write(e.type[3]==="I"?" in ":" of "),this[e.right.type](e.right,t),t.write(") "),this[e.body.type](e.body,t)},ForOfStatement:wo,DebuggerStatement(e,t){t.write("debugger;",e)},FunctionDeclaration:_o=function(e,t){t.write((e.async?"async ":"")+(e.generator?"function* ":"function ")+(e.id?e.id.name:""),e),Rn(t,e.params),t.write(" "),this[e.body.type](e.body,t)},FunctionExpression:_o,VariableDeclaration(e,t){qs(t,e),t.write(";")},VariableDeclarator(e,t){this[e.id.type](e.id,t),e.init!=null&&(t.write(" = "),this[e.init.type](e.init,t))},ClassDeclaration(e,t){if(t.write("class "+(e.id?`${e.id.name} `:""),e),e.superClass){t.write("extends ");const{superClass:s}=e,{type:o}=s,c=t.expressionsPrecedence[o];(o[0]!=="C"||o[1]!=="l"||o[5]!=="E")&&(c===Bt||c<t.expressionsPrecedence.ClassExpression)?(t.write("("),this[e.superClass.type](s,t),t.write(")")):this[s.type](s,t),t.write(" ")}this.ClassBody(e.body,t)},ImportDeclaration(e,t){t.write("import ");const{specifiers:s}=e,{length:o}=s;let c=0;if(o>0){for(;c<o;){c>0&&t.write(", ");const f=s[c],p=f.type[6];if(p==="D")t.write(f.local.name,f),c++;else if(p==="N")t.write("* as "+f.local.name,f),c++;else break}if(c<o){for(t.write("{");;){const f=s[c],{name:p}=f.imported;if(t.write(p,f),p!==f.local.name&&t.write(" as "+f.local.name),++c<o)t.write(", ");else break}t.write("}")}t.write(" from ")}this.Literal(e.source,t),t.write(";")},ImportExpression(e,t){t.write("import("),this[e.source.type](e.source,t),t.write(")")},ExportDefaultDeclaration(e,t){t.write("export default "),this[e.declaration.type](e.declaration,t),t.expressionsPrecedence[e.declaration.type]!=null&&e.declaration.type[0]!=="F"&&t.write(";")},ExportNamedDeclaration(e,t){if(t.write("export "),e.declaration)this[e.declaration.type](e.declaration,t);else{t.write("{");const{specifiers:s}=e,{length:o}=s;if(o>0)for(let c=0;;){const f=s[c],{name:p}=f.local;if(t.write(p,f),p!==f.exported.name&&t.write(" as "+f.exported.name),++c<o)t.write(", ");else break}t.write("}"),e.source&&(t.write(" from "),this.Literal(e.source,t)),t.write(";")}},ExportAllDeclaration(e,t){e.exported!=null?t.write("export * as "+e.exported.name+" from "):t.write("export * from "),this.Literal(e.source,t),t.write(";")},MethodDefinition(e,t){e.static&&t.write("static ");const s=e.kind[0];(s==="g"||s==="s")&&t.write(e.kind+" "),e.value.async&&t.write("async "),e.value.generator&&t.write("*"),e.computed?(t.write("["),this[e.key.type](e.key,t),t.write("]")):this[e.key.type](e.key,t),Rn(t,e.value.params),t.write(" "),this[e.value.body.type](e.value.body,t)},ClassExpression(e,t){this.ClassDeclaration(e,t)},ArrowFunctionExpression(e,t){t.write(e.async?"async ":"",e);const{params:s}=e;s!=null&&(s.length===1&&s[0].type[0]==="I"?t.write(s[0].name,s[0]):Rn(t,e.params)),t.write(" => "),e.body.type[0]==="O"?(t.write("("),this.ObjectExpression(e.body,t),t.write(")")):this[e.body.type](e.body,t)},ThisExpression(e,t){t.write("this",e)},Super(e,t){t.write("super",e)},RestElement:Gs=function(e,t){t.write("..."),this[e.argument.type](e.argument,t)},SpreadElement:Gs,YieldExpression(e,t){t.write(e.delegate?"yield*":"yield"),e.argument&&(t.write(" "),this[e.argument.type](e.argument,t))},AwaitExpression(e,t){t.write("await ",e),Wi(t,e.argument,e)},TemplateLiteral(e,t){const{quasis:s,expressions:o}=e;t.write("`");const{length:c}=o;for(let p=0;p<c;p++){const k=o[p],R=s[p];t.write(R.value.raw,R),t.write("${"),this[k.type](k,t),t.write("}")}const f=s[s.length-1];t.write(f.value.raw,f),t.write("`")},TemplateElement(e,t){t.write(e.value.raw,e)},TaggedTemplateExpression(e,t){Wi(t,e.tag,e),this[e.quasi.type](e.quasi,t)},ArrayExpression:ri=function(e,t){if(t.write("["),e.elements.length>0){const{elements:s}=e,{length:o}=s;for(let c=0;;){const f=s[c];if(f!=null&&this[f.type](f,t),++c<o)t.write(", ");else{f==null&&t.write(", ");break}}}t.write("]")},ArrayPattern:ri,ObjectExpression(e,t){const s=t.indent.repeat(t.indentLevel++),{lineEnd:o,writeComments:c}=t,f=s+t.indent;if(t.write("{"),e.properties.length>0){t.write(o),c&&e.comments!=null&&Ft(t,e.comments,f,o);const p=","+o,{properties:k}=e,{length:R}=k;for(let W=0;;){const h=k[W];if(c&&h.comments!=null&&Ft(t,h.comments,f,o),t.write(f),this[h.type](h,t),++W<R)t.write(p);else break}t.write(o),c&&e.trailingComments!=null&&Ft(t,e.trailingComments,f,o),t.write(s+"}")}else c?e.comments!=null?(t.write(o),Ft(t,e.comments,f,o),e.trailingComments!=null&&Ft(t,e.trailingComments,f,o),t.write(s+"}")):e.trailingComments!=null?(t.write(o),Ft(t,e.trailingComments,f,o),t.write(s+"}")):t.write("}"):t.write("}");t.indentLevel--},Property(e,t){e.method||e.kind[0]!=="i"?this.MethodDefinition(e,t):(e.shorthand||(e.computed?(t.write("["),this[e.key.type](e.key,t),t.write("]")):this[e.key.type](e.key,t),t.write(": ")),this[e.value.type](e.value,t))},PropertyDefinition(e,t){e.static&&t.write("static "),this[e.key.type](e.key,t),e.value!=null&&(t.write(" = "),this[e.value.type](e.value,t))},ObjectPattern(e,t){if(t.write("{"),e.properties.length>0){const{properties:s}=e,{length:o}=s;for(let c=0;this[s[c].type](s[c],t),++c<o;)t.write(", ")}t.write("}")},SequenceExpression(e,t){Rn(t,e.expressions)},UnaryExpression(e,t){if(e.prefix){const{operator:s,argument:o,argument:{type:c}}=e;t.write(s);const f=ti(t,o,e);!f&&(s.length>1||c[0]==="U"&&(c[1]==="n"||c[1]==="p")&&o.prefix&&o.operator[0]===s&&(s==="+"||s==="-"))&&t.write(" "),f?(t.write(s.length>1?" (":"("),this[c](o,t),t.write(")")):this[c](o,t)}else this[e.argument.type](e.argument,t),t.write(e.operator)},UpdateExpression(e,t){e.prefix?(t.write(e.operator),this[e.argument.type](e.argument,t)):(this[e.argument.type](e.argument,t),t.write(e.operator))},AssignmentExpression(e,t){this[e.left.type](e.left,t),t.write(" "+e.operator+" "),this[e.right.type](e.right,t)},AssignmentPattern(e,t){this[e.left.type](e.left,t),t.write(" = "),this[e.right.type](e.right,t)},BinaryExpression:Ui=function(e,t){const s=e.operator==="in";s&&t.write("("),Wi(t,e.left,e,!1),t.write(" "+e.operator+" "),Wi(t,e.right,e,!0),s&&t.write(")")},LogicalExpression:Ui,ConditionalExpression(e,t){const{test:s}=e,o=t.expressionsPrecedence[s.type];o===Bt||o<=t.expressionsPrecedence.ConditionalExpression?(t.write("("),this[s.type](s,t),t.write(")")):this[s.type](s,t),t.write(" ? "),this[e.consequent.type](e.consequent,t),t.write(" : "),this[e.alternate.type](e.alternate,t)},NewExpression(e,t){t.write("new ");const s=t.expressionsPrecedence[e.callee.type];s===Bt||s<t.expressionsPrecedence.CallExpression||Hs(e.callee)?(t.write("("),this[e.callee.type](e.callee,t),t.write(")")):this[e.callee.type](e.callee,t),Rn(t,e.arguments)},CallExpression(e,t){const s=t.expressionsPrecedence[e.callee.type];s===Bt||s<t.expressionsPrecedence.CallExpression?(t.write("("),this[e.callee.type](e.callee,t),t.write(")")):this[e.callee.type](e.callee,t),e.optional&&t.write("?."),Rn(t,e.arguments)},ChainExpression(e,t){this[e.expression.type](e.expression,t)},MemberExpression(e,t){const s=t.expressionsPrecedence[e.object.type];s===Bt||s<t.expressionsPrecedence.MemberExpression?(t.write("("),this[e.object.type](e.object,t),t.write(")")):this[e.object.type](e.object,t),e.computed?(e.optional&&t.write("?."),t.write("["),this[e.property.type](e.property,t),t.write("]")):(e.optional?t.write("?."):t.write("."),this[e.property.type](e.property,t))},MetaProperty(e,t){t.write(e.meta.name+"."+e.property.name,e)},Identifier(e,t){t.write(e.name,e)},PrivateIdentifier(e,t){t.write(`#${e.name}`,e)},Literal(e,t){e.raw!=null?t.write(e.raw,e):e.regex!=null?this.RegExpLiteral(e,t):e.bigint!=null?t.write(e.bigint+"n",e):t.write(bo(e.value),e)},RegExpLiteral(e,t){const{regex:s}=e;t.write(`/${s.pattern}/${s.flags}`,e)}},Ys={},yu=class{constructor(e){const t=e==null?Ys:e;this.output="",t.output!=null?(this.output=t.output,this.write=this.writeToStream):this.output="",this.generator=t.generator!=null?t.generator:du,this.expressionsPrecedence=t.expressionsPrecedence!=null?t.expressionsPrecedence:an,this.indent=t.indent!=null?t.indent:"  ",this.lineEnd=t.lineEnd!=null?t.lineEnd:`
`,this.indentLevel=t.startingIndentLevel!=null?t.startingIndentLevel:0,this.writeComments=t.comments?t.comments:!1,t.sourceMap!=null&&(this.write=t.output==null?this.writeAndMap:this.writeToStreamAndMap,this.sourceMap=t.sourceMap,this.line=1,this.column=0,this.lineEndSize=this.lineEnd.split(`
`).length-1,this.mapping={original:null,generated:this,name:void 0,source:t.sourceMap.file||t.sourceMap._file})}write(e){this.output+=e}writeToStream(e){this.output.write(e)}writeAndMap(e,t){this.output+=e,this.map(e,t)}writeToStreamAndMap(e,t){this.output.write(e),this.map(e,t)}map(e,t){if(t!=null){const{type:c}=t;if(c[0]==="L"&&c[2]==="n"){this.column=0,this.line++;return}if(t.loc!=null){const{mapping:f}=this;f.original=t.loc.start,f.name=t.name,this.sourceMap.addMapping(f)}if(c[0]==="T"&&c[8]==="E"||c[0]==="L"&&c[1]==="i"&&typeof t.value=="string"){const{length:f}=e;let{column:p,line:k}=this;for(let R=0;R<f;R++)e[R]===`
`?(p=0,k++):p++;this.column=p,this.line=k;return}}const{length:s}=e,{lineEnd:o}=this;s>0&&(this.lineEndSize>0&&(o.length===1?e[s-1]===o:e.endsWith(o))?(this.line+=this.lineEndSize,this.column=0):this.column+=s)}toString(){return this.output}};function qi(e,t){const s=new yu(t);return s.generator[e.type](e,s),s.output}function Nr(e,t){return{type:"Program",sourceType:e,body:t}}function Gi(e){return Nr("script",e)}function $r(e){return{type:"Identifier",name:e}}function Dr(e){return $r(e)}function Yi(e){return{type:"ExpressionStatement",expression:e}}function un(e){return{type:"BlockStatement",body:e}}function Js(e,t){return{type:"CallExpression",callee:e,arguments:t,optional:!1}}function xo(e,t){return Yi(Js(e,t))}function St(e){return{type:"ThrowStatement",argument:e}}function Qs(e){return St(Xi("Error",[el(e)]))}function Cr(e=null){return{type:"ReturnStatement",argument:e}}function cn(e,t,s){return Yi(Pr(e,t,s))}function Ar(e,t){return cn("=",$r(e),t)}function vu(e,t,s){return{type:"IfStatement",test:e,consequent:t,alternate:s}}function gu(e,t){return{type:"WhileStatement",test:e,body:t}}function So(e,t){return{type:"DoWhileStatement",body:e,test:t}}function bu(e,t,s,o){return{type:"ForStatement",init:e,test:t,update:s,body:o}}function Ji(e,t){return{type:"VariableDeclaration",declarations:e,kind:t}}function Xs(e,t){return{type:"VariableDeclarator",id:e,init:t}}function ni(e,t){const s=Xs($r(e),t);return Ji([s],"const")}function Ks(e,t){const s=Xs($r(e),t);return Ji([s],"let")}function Nn(e){const t=Dt([],un(e));return Js(t,[])}function hr(e){return{type:"ArrayExpression",elements:e}}function Qi(e){return{type:"ObjectExpression",properties:e}}function Pt(e,t){return{type:"Property",key:$r(e),value:t,kind:"init",method:!1,shorthand:!1,computed:!1}}function Jt(e,t,s){return{type:"FunctionExpression",id:e,params:t,body:s}}function Dt(e,t){return Jt(null,e,t)}function Zs(e,t){return{type:"NewExpression",callee:e,arguments:t}}function Xi(e,t){return Zs($r(e),t)}function ir(e){return{type:"Literal",value:e}}function el(e){return ir(e)}function ko(e){return{type:"Literal",value:e}}function An(e){return{type:"Literal",value:e}}function Vn(){return{type:"Literal",value:null}}function Pr(e,t,s){return{type:"AssignmentExpression",operator:e,left:t,right:s}}function Ki(e,t){return Pr("=",$r(e),t)}function ii(e,t){return{type:"MemberExpression",object:e,property:t,computed:!1,optional:!1}}function wu(e,t,s){return{type:"ConditionalExpression",test:e,alternate:t,consequent:s}}var Eo=class{constructor(e=[],t=null){this.locals=new Set,this.declarations=[],this.statements=[],this.parent=t,e.forEach(s=>this.locals.add(s))}declareLet(e,t){this.resolveLocal(e)||(this.locals.add(e),this.declarations.push(Ks(e,t)))}declareConst(e,t){this.resolveLocal(e)||(this.locals.add(e),this.declarations.push(ni(e,t)))}resolveLocal(e){return this.locals.has(e)}resolveOuter(e){return this.parent&&this.parent.resolve(e)}resolve(e){return this.resolveLocal(e)||this.resolveOuter(e)}append(e){this.statements.push(e)}build(){return un([...this.declarations,...this.statements])}},_u=class{constructor(){this.block=new Eo}enter(e=[]){this.block=new Eo(e,this.block)}exit(){const e=this.block.parent;if(!e)return;const t=this.block.build();return this.block=e,t}freshen(e){let t=e,s=0;for(;this.block.resolve(t);)t=`${e}_${s++}`;return t}generate(e){const t=this.visitTerm(e),s=this.block.build().body,o=Yi(t);return s.push(o),Gi(s)}visitTerm(e){switch(e.tag){case"ErrorTerm":return this.visitErrorTerm(e);case"ValueTerm":return this.visitValueTerm(e);case"VariableTerm":return this.visitVariableTerm(e);case"AssignmentTerm":return this.visitAssignmentTerm(e);case"LambdaTerm":return this.visitLambdaTerm(e);case"CallTerm":return this.visitCallTerm(e);case"ParentheticalTerm":return this.visitParentheticalTerm(e);case"ArrayTerm":return this.visitArrayTerm(e);case"ObjectTerm":return this.visitObjectTerm(e);case"MemberAccessTerm":return this.visitMemberAccessTerm(e);case"IndexAccessTerm":return this.visitIndexAccessTerm(e);case"LetTerm":return this.visitLetTerm(e);case"DoTerm":return this.visitDoTerm(e);case"ConditionalTerm":return this.visitConditionalTerm(e);default:throw new Error(`Unknown term tag encountered: ${e}`)}}visitErrorTerm(e){const t=Qs(e.msg);return Nn([t])}visitValueTerm(e){return this.visitAtomicValue(e.value)}visitAtomicValue(e){switch(e.tag){case"NullValue":return Vn();case"NumberValue":return An(e.num);case"StringValue":return el(e.str);case"BooleanValue":return ko(e.bool);default:throw new Error(`Unknown value tag encountered in: ${e}`)}}visitVariableTerm(e){return Dr(e.variable)}visitAssignmentTerm(e){const t=e.lhs;this.block.resolve(t)||this.block.declareLet(t);const s=this.visitTerm(e.rhs);return Ki(t,s)}visitLambdaTerm(e){const t=e.args.map(f=>Dr(f));this.enter(e.args);const s=this.visitTerm(e.body);this.exit();const o=Cr(s),c=un([o]);return Dt(t,c)}visitCallTerm(e){const t=this.visitTerm(e.func),s=e.args.map(o=>this.visitTerm(o));return Js(t,s)}visitParentheticalTerm(e){return this.visitTerm(e.term)}visitArrayTerm(e){const t=e.elements.map(s=>this.visitTerm(s));return hr(t)}visitObjectTerm(e){const s=Object.entries(e.entries).map(([o,c])=>Pt(o,this.visitTerm(c)));return Qi(s)}visitMemberAccessTerm(e){const t=this.visitTerm(e.object),s=Dr(e.member);return ii(t,s)}visitIndexAccessTerm(e){const t=this.visitTerm(e.array),s=this.visitTerm(e.index);return ii(t,s)}visitLetTerm(e){this.enter(),e.declarations.forEach(c=>{const f=this.visitTerm(c.body);this.block.declareConst(c.variable,f)});const t=this.visitTerm(e.body),s=this.exit(),o=Cr(t);return Nn([...s.body,o])}visitDoTerm(e){const{body:t}=this.visitBlockStatement(e.block);return Nn(t)}visitConditionalTerm(e){const t=this.visitTerm(e.condition),s=this.visitBranchTerm(e.branch),o=this.visitTerm(e.body);return wu(t,s,o)}visitBranchTerm(e){switch(e.tag){case"ElifTerm":{const t=pr(e.condition,e.body,e.branch,e.span);return this.visitConditionalTerm(t)}case"ElseTerm":return this.visitTerm(e.body)}}visitStatement(e){switch(e.tag){case"AssignmentStatement":{this.visitAssignmentStatement(e);break}case"CallStatement":{this.visitCallStatement(e);break}case"ReturnStatement":{this.visitReturnStatement(e);break}case"BlockStatement":{const t=this.visitBlockStatement(e);this.block.append(t);break}case"IfStatement":{const t=this.visitIfStatement(e);this.block.append(t);break}case"WhileStatement":{this.visitWhileStatement(e);break}case"DoWhileStatement":{this.visitDoWhileStatement(e);break}case"ForStatement":{this.visitForStatement(e);break}}}visitAssignmentStatement(e){const t=e.lhs,s=this.visitTerm(e.rhs);if(!this.block.resolve(t)){this.block.declareLet(t,s);return}const o=Ar(t,s);this.block.append(o)}visitCallStatement(e){const t=this.visitTerm(e.func),s=e.args.map(c=>this.visitTerm(c)),o=xo(t,s);this.block.append(o)}visitReturnStatement(e){const t=this.visitTerm(e.result),s=Cr(t);this.block.append(s)}visitBlockStatement(e){return this.enter(),e.statements.forEach(t=>{this.visitStatement(t)}),this.exit()}visitIfStatement(e){const t=this.visitTerm(e.condition);this.enter(),this.visitStatement(e.body);const s=this.exit();let o=null;return e.branch&&(o=this.visitBranchStatement(e.branch)),vu(t,s,o)}visitBranchStatement(e){switch(e.tag){case"ElifStatement":{const t=Fr(e.condition,e.body,e.branch,e.span);return this.visitIfStatement(t)}case"ElseStatement":return this.enter(),this.visitStatement(e.body),this.exit()}}visitWhileStatement(e){const t=this.visitTerm(e.condition);this.enter(),this.visitStatement(e.body);const s=this.exit(),o=gu(t,s);this.block.append(o)}visitDoWhileStatement(e){const t=this.visitTerm(e.condition);this.enter(),this.visitStatement(e.body);const s=this.exit(),o=So(s,t);this.block.append(o)}visitForStatement(e){e.declarations.forEach(f=>{const p=this.visitTerm(f.body);this.block.declareLet(f.variable,p)});const t=this.visitTerm(e.condition),s=this.visitTerm(e.update);this.enter(),this.visitStatement(e.body);const o=this.exit(),c=bu(null,t,s,o);this.block.append(c)}visitVariableDeclaration(e){const t=this.visitTerm(e.body);return Ks(e.variable,t)}};function Zi(...e){return{source:null,errors:e}}function tl(e){return{source:e}}function xu(e){let t;try{const o=new _u().generate(e);t=qi(o)}catch(s){return Zi(s)}return tl(t)}function rl(e,t,s,o){return{tag:"ConditionalTerm",condition:e,body:t,branch:s,span:o}}function To(e,t,s,o){return{tag:"IfStatement",condition:e,body:t,branch:s,span:o}}var{stringify:$o}=JSON;if(!String.prototype.repeat)throw new Error("String.prototype.repeat is undefined, see https://github.com/davidbonnet/astring#installation");if(!String.prototype.endsWith)throw new Error("String.prototype.endsWith is undefined, see https://github.com/davidbonnet/astring#installation");var es={"||":3,"&&":4,"|":5,"??":5,"^":6,"&":7,"==":8,"!=":8,"===":8,"!==":8,"<":9,">":9,"<=":9,">=":9,in:9,instanceof:9,"<<":10,">>":10,">>>":10,"+":11,"-":11,"*":12,"%":12,"/":12,"**":13},sr=17,Su={ArrayExpression:20,TaggedTemplateExpression:20,ThisExpression:20,Identifier:20,PrivateIdentifier:20,Literal:18,TemplateLiteral:20,Super:20,SequenceExpression:20,MemberExpression:19,ChainExpression:19,CallExpression:19,NewExpression:19,ArrowFunctionExpression:sr,ClassExpression:sr,FunctionExpression:sr,ObjectExpression:sr,UpdateExpression:16,UnaryExpression:15,AwaitExpression:15,BinaryExpression:14,LogicalExpression:13,ConditionalExpression:4,AssignmentExpression:3,YieldExpression:2,RestElement:1};function Mn(e,t){let{generator:s}=e;if(e.write("("),t!=null&&t.length>0){s[t[0].type](t[0],e);let{length:o}=t;for(let c=1;c<o;c++){let f=t[c];e.write(", "),s[f.type](f,e)}}e.write(")")}function Co(e,t,s,o){let c=e.expressionsPrecedence[t.type];if(c===sr)return!0;let f=e.expressionsPrecedence[s.type];return c!==f?!o&&c===15&&f===14&&s.operator==="**"||c<f:c!==13&&c!==14?!1:t.operator==="**"&&s.operator==="**"?!o:o?es[t.operator]<=es[s.operator]:es[t.operator]<es[s.operator]}function si(e,t,s,o){let{generator:c}=e;Co(e,t,s,o)?(e.write("("),c[t.type](t,e),e.write(")")):c[t.type](t,e)}function ku(e,t,s,o){let c=t.split(`
`),f=c.length-1;if(e.write(c[0].trim()),f>0){e.write(o);for(let p=1;p<f;p++)e.write(s+c[p].trim()+o);e.write(s+c[f].trim())}}function Qt(e,t,s,o){let{length:c}=t;for(let f=0;f<c;f++){let p=t[f];e.write(s),p.type[0]==="L"?e.write("// "+p.value.trim()+`
`,p):(e.write("/*"),ku(e,p.value,s,o),e.write("*/"+o))}}function Xc(e){let t=e;for(;t!=null;){let{type:s}=t;if(s[0]==="C"&&s[1]==="a")return!0;if(s[0]==="M"&&s[1]==="e"&&s[2]==="m")t=t.object;else return!1}}function ts(e,t){let{generator:s}=e,{declarations:o}=t;e.write(t.kind+" ");let{length:c}=o;if(c>0){s.VariableDeclarator(o[0],e);for(let f=1;f<c;f++)e.write(", "),s.VariableDeclarator(o[f],e)}}var rs,Eu,Tu,$u,Cu,dr,lr={Program(e,t){let s=t.indent.repeat(t.indentLevel),{lineEnd:o,writeComments:c}=t;c&&e.comments!=null&&Qt(t,e.comments,s,o);let f=e.body,{length:p}=f;for(let k=0;k<p;k++){let R=f[k];c&&R.comments!=null&&Qt(t,R.comments,s,o),t.write(s),this[R.type](R,t),t.write(o)}c&&e.trailingComments!=null&&Qt(t,e.trailingComments,s,o)},BlockStatement:dr=function(e,t){let s=t.indent.repeat(t.indentLevel++),{lineEnd:o,writeComments:c}=t,f=s+t.indent;t.write("{");let p=e.body;if(p!=null&&p.length>0){t.write(o),c&&e.comments!=null&&Qt(t,e.comments,f,o);let{length:k}=p;for(let R=0;R<k;R++){let W=p[R];c&&W.comments!=null&&Qt(t,W.comments,f,o),t.write(f),this[W.type](W,t),t.write(o)}t.write(s)}else c&&e.comments!=null&&(t.write(o),Qt(t,e.comments,f,o),t.write(s));c&&e.trailingComments!=null&&Qt(t,e.trailingComments,f,o),t.write("}"),t.indentLevel--},ClassBody:dr,StaticBlock(e,t){t.write("static "),this.BlockStatement(e,t)},EmptyStatement(e,t){t.write(";")},ExpressionStatement(e,t){let s=t.expressionsPrecedence[e.expression.type];s===sr||s===3&&e.expression.left.type[0]==="O"?(t.write("("),this[e.expression.type](e.expression,t),t.write(")")):this[e.expression.type](e.expression,t),t.write(";")},IfStatement(e,t){t.write("if ("),this[e.test.type](e.test,t),t.write(") "),this[e.consequent.type](e.consequent,t),e.alternate!=null&&(t.write(" else "),this[e.alternate.type](e.alternate,t))},LabeledStatement(e,t){this[e.label.type](e.label,t),t.write(": "),this[e.body.type](e.body,t)},BreakStatement(e,t){t.write("break"),e.label!=null&&(t.write(" "),this[e.label.type](e.label,t)),t.write(";")},ContinueStatement(e,t){t.write("continue"),e.label!=null&&(t.write(" "),this[e.label.type](e.label,t)),t.write(";")},WithStatement(e,t){t.write("with ("),this[e.object.type](e.object,t),t.write(") "),this[e.body.type](e.body,t)},SwitchStatement(e,t){let s=t.indent.repeat(t.indentLevel++),{lineEnd:o,writeComments:c}=t;t.indentLevel++;let f=s+t.indent,p=f+t.indent;t.write("switch ("),this[e.discriminant.type](e.discriminant,t),t.write(") {"+o);let{cases:k}=e,{length:R}=k;for(let W=0;W<R;W++){let h=k[W];c&&h.comments!=null&&Qt(t,h.comments,f,o),h.test?(t.write(f+"case "),this[h.test.type](h.test,t),t.write(":"+o)):t.write(f+"default:"+o);let{consequent:v}=h,{length:S}=v;for(let x=0;x<S;x++){let j=v[x];c&&j.comments!=null&&Qt(t,j.comments,p,o),t.write(p),this[j.type](j,t),t.write(o)}}t.indentLevel-=2,t.write(s+"}")},ReturnStatement(e,t){t.write("return"),e.argument&&(t.write(" "),this[e.argument.type](e.argument,t)),t.write(";")},ThrowStatement(e,t){t.write("throw "),this[e.argument.type](e.argument,t),t.write(";")},TryStatement(e,t){if(t.write("try "),this[e.block.type](e.block,t),e.handler){let{handler:s}=e;s.param==null?t.write(" catch "):(t.write(" catch ("),this[s.param.type](s.param,t),t.write(") ")),this[s.body.type](s.body,t)}e.finalizer&&(t.write(" finally "),this[e.finalizer.type](e.finalizer,t))},WhileStatement(e,t){t.write("while ("),this[e.test.type](e.test,t),t.write(") "),this[e.body.type](e.body,t)},DoWhileStatement(e,t){t.write("do "),this[e.body.type](e.body,t),t.write(" while ("),this[e.test.type](e.test,t),t.write(");")},ForStatement(e,t){if(t.write("for ("),e.init!=null){let{init:s}=e;s.type[0]==="V"?ts(t,s):this[s.type](s,t)}t.write("; "),e.test&&this[e.test.type](e.test,t),t.write("; "),e.update&&this[e.update.type](e.update,t),t.write(") "),this[e.body.type](e.body,t)},ForInStatement:rs=function(e,t){t.write(`for ${e.await?"await ":""}(`);let{left:s}=e;s.type[0]==="V"?ts(t,s):this[s.type](s,t),t.write(e.type[3]==="I"?" in ":" of "),this[e.right.type](e.right,t),t.write(") "),this[e.body.type](e.body,t)},ForOfStatement:rs,DebuggerStatement(e,t){t.write("debugger;",e)},FunctionDeclaration:Eu=function(e,t){t.write((e.async?"async ":"")+(e.generator?"function* ":"function ")+(e.id?e.id.name:""),e),Mn(t,e.params),t.write(" "),this[e.body.type](e.body,t)},FunctionExpression:Eu,VariableDeclaration(e,t){ts(t,e),t.write(";")},VariableDeclarator(e,t){this[e.id.type](e.id,t),e.init!=null&&(t.write(" = "),this[e.init.type](e.init,t))},ClassDeclaration(e,t){if(t.write("class "+(e.id?`${e.id.name} `:""),e),e.superClass){t.write("extends ");let{superClass:s}=e,{type:o}=s,c=t.expressionsPrecedence[o];(o[0]!=="C"||o[1]!=="l"||o[5]!=="E")&&(c===sr||c<t.expressionsPrecedence.ClassExpression)?(t.write("("),this[e.superClass.type](s,t),t.write(")")):this[s.type](s,t),t.write(" ")}this.ClassBody(e.body,t)},ImportDeclaration(e,t){t.write("import ");let{specifiers:s}=e,{length:o}=s,c=0;if(o>0){for(;c<o;){c>0&&t.write(", ");let f=s[c],p=f.type[6];if(p==="D")t.write(f.local.name,f),c++;else if(p==="N")t.write("* as "+f.local.name,f),c++;else break}if(c<o){for(t.write("{");;){let f=s[c],{name:p}=f.imported;if(t.write(p,f),p!==f.local.name&&t.write(" as "+f.local.name),++c<o)t.write(", ");else break}t.write("}")}t.write(" from ")}this.Literal(e.source,t),t.write(";")},ImportExpression(e,t){t.write("import("),this[e.source.type](e.source,t),t.write(")")},ExportDefaultDeclaration(e,t){t.write("export default "),this[e.declaration.type](e.declaration,t),t.expressionsPrecedence[e.declaration.type]!=null&&e.declaration.type[0]!=="F"&&t.write(";")},ExportNamedDeclaration(e,t){if(t.write("export "),e.declaration)this[e.declaration.type](e.declaration,t);else{t.write("{");let{specifiers:s}=e,{length:o}=s;if(o>0)for(let c=0;;){let f=s[c],{name:p}=f.local;if(t.write(p,f),p!==f.exported.name&&t.write(" as "+f.exported.name),++c<o)t.write(", ");else break}t.write("}"),e.source&&(t.write(" from "),this.Literal(e.source,t)),t.write(";")}},ExportAllDeclaration(e,t){e.exported!=null?t.write("export * as "+e.exported.name+" from "):t.write("export * from "),this.Literal(e.source,t),t.write(";")},MethodDefinition(e,t){e.static&&t.write("static ");let s=e.kind[0];(s==="g"||s==="s")&&t.write(e.kind+" "),e.value.async&&t.write("async "),e.value.generator&&t.write("*"),e.computed?(t.write("["),this[e.key.type](e.key,t),t.write("]")):this[e.key.type](e.key,t),Mn(t,e.value.params),t.write(" "),this[e.value.body.type](e.value.body,t)},ClassExpression(e,t){this.ClassDeclaration(e,t)},ArrowFunctionExpression(e,t){t.write(e.async?"async ":"",e);let{params:s}=e;s!=null&&(s.length===1&&s[0].type[0]==="I"?t.write(s[0].name,s[0]):Mn(t,e.params)),t.write(" => "),e.body.type[0]==="O"?(t.write("("),this.ObjectExpression(e.body,t),t.write(")")):this[e.body.type](e.body,t)},ThisExpression(e,t){t.write("this",e)},Super(e,t){t.write("super",e)},RestElement:Tu=function(e,t){t.write("..."),this[e.argument.type](e.argument,t)},SpreadElement:Tu,YieldExpression(e,t){t.write(e.delegate?"yield*":"yield"),e.argument&&(t.write(" "),this[e.argument.type](e.argument,t))},AwaitExpression(e,t){t.write("await ",e),si(t,e.argument,e)},TemplateLiteral(e,t){let{quasis:s,expressions:o}=e;t.write("`");let{length:c}=o;for(let p=0;p<c;p++){let k=o[p],R=s[p];t.write(R.value.raw,R),t.write("${"),this[k.type](k,t),t.write("}")}let f=s[s.length-1];t.write(f.value.raw,f),t.write("`")},TemplateElement(e,t){t.write(e.value.raw,e)},TaggedTemplateExpression(e,t){si(t,e.tag,e),this[e.quasi.type](e.quasi,t)},ArrayExpression:Cu=function(e,t){if(t.write("["),e.elements.length>0){let{elements:s}=e,{length:o}=s;for(let c=0;;){let f=s[c];if(f!=null&&this[f.type](f,t),++c<o)t.write(", ");else{f==null&&t.write(", ");break}}}t.write("]")},ArrayPattern:Cu,ObjectExpression(e,t){let s=t.indent.repeat(t.indentLevel++),{lineEnd:o,writeComments:c}=t,f=s+t.indent;if(t.write("{"),e.properties.length>0){t.write(o),c&&e.comments!=null&&Qt(t,e.comments,f,o);let p=","+o,{properties:k}=e,{length:R}=k;for(let W=0;;){let h=k[W];if(c&&h.comments!=null&&Qt(t,h.comments,f,o),t.write(f),this[h.type](h,t),++W<R)t.write(p);else break}t.write(o),c&&e.trailingComments!=null&&Qt(t,e.trailingComments,f,o),t.write(s+"}")}else c?e.comments!=null?(t.write(o),Qt(t,e.comments,f,o),e.trailingComments!=null&&Qt(t,e.trailingComments,f,o),t.write(s+"}")):e.trailingComments!=null?(t.write(o),Qt(t,e.trailingComments,f,o),t.write(s+"}")):t.write("}"):t.write("}");t.indentLevel--},Property(e,t){e.method||e.kind[0]!=="i"?this.MethodDefinition(e,t):(e.shorthand||(e.computed?(t.write("["),this[e.key.type](e.key,t),t.write("]")):this[e.key.type](e.key,t),t.write(": ")),this[e.value.type](e.value,t))},PropertyDefinition(e,t){e.static&&t.write("static "),this[e.key.type](e.key,t),e.value!=null&&(t.write(" = "),this[e.value.type](e.value,t))},ObjectPattern(e,t){if(t.write("{"),e.properties.length>0){let{properties:s}=e,{length:o}=s;for(let c=0;this[s[c].type](s[c],t),++c<o;)t.write(", ")}t.write("}")},SequenceExpression(e,t){Mn(t,e.expressions)},UnaryExpression(e,t){if(e.prefix){let{operator:s,argument:o,argument:{type:c}}=e;t.write(s);let f=Co(t,o,e);!f&&(s.length>1||c[0]==="U"&&(c[1]==="n"||c[1]==="p")&&o.prefix&&o.operator[0]===s&&(s==="+"||s==="-"))&&t.write(" "),f?(t.write(s.length>1?" (":"("),this[c](o,t),t.write(")")):this[c](o,t)}else this[e.argument.type](e.argument,t),t.write(e.operator)},UpdateExpression(e,t){e.prefix?(t.write(e.operator),this[e.argument.type](e.argument,t)):(this[e.argument.type](e.argument,t),t.write(e.operator))},AssignmentExpression(e,t){this[e.left.type](e.left,t),t.write(" "+e.operator+" "),this[e.right.type](e.right,t)},AssignmentPattern(e,t){this[e.left.type](e.left,t),t.write(" = "),this[e.right.type](e.right,t)},BinaryExpression:$u=function(e,t){let s=e.operator==="in";s&&t.write("("),si(t,e.left,e,!1),t.write(" "+e.operator+" "),si(t,e.right,e,!0),s&&t.write(")")},LogicalExpression:$u,ConditionalExpression(e,t){let{test:s}=e,o=t.expressionsPrecedence[s.type];o===sr||o<=t.expressionsPrecedence.ConditionalExpression?(t.write("("),this[s.type](s,t),t.write(")")):this[s.type](s,t),t.write(" ? "),this[e.consequent.type](e.consequent,t),t.write(" : "),this[e.alternate.type](e.alternate,t)},NewExpression(e,t){t.write("new ");let s=t.expressionsPrecedence[e.callee.type];s===sr||s<t.expressionsPrecedence.CallExpression||Xc(e.callee)?(t.write("("),this[e.callee.type](e.callee,t),t.write(")")):this[e.callee.type](e.callee,t),Mn(t,e.arguments)},CallExpression(e,t){let s=t.expressionsPrecedence[e.callee.type];s===sr||s<t.expressionsPrecedence.CallExpression?(t.write("("),this[e.callee.type](e.callee,t),t.write(")")):this[e.callee.type](e.callee,t),e.optional&&t.write("?."),Mn(t,e.arguments)},ChainExpression(e,t){this[e.expression.type](e.expression,t)},MemberExpression(e,t){let s=t.expressionsPrecedence[e.object.type];s===sr||s<t.expressionsPrecedence.MemberExpression?(t.write("("),this[e.object.type](e.object,t),t.write(")")):this[e.object.type](e.object,t),e.computed?(e.optional&&t.write("?."),t.write("["),this[e.property.type](e.property,t),t.write("]")):(e.optional?t.write("?."):t.write("."),this[e.property.type](e.property,t))},MetaProperty(e,t){t.write(e.meta.name+"."+e.property.name,e)},Identifier(e,t){t.write(e.name,e)},PrivateIdentifier(e,t){t.write(`#${e.name}`,e)},Literal(e,t){e.raw!=null?t.write(e.raw,e):e.regex!=null?this.RegExpLiteral(e,t):e.bigint!=null?t.write(e.bigint+"n",e):t.write($o(e.value),e)},RegExpLiteral(e,t){let{regex:s}=e;t.write(`/${s.pattern}/${s.flags}`,e)}},Pu={},Ou=class{constructor(e){let t=e==null?Pu:e;this.output="",t.output!=null?(this.output=t.output,this.write=this.writeToStream):this.output="",this.generator=t.generator!=null?t.generator:lr,this.expressionsPrecedence=t.expressionsPrecedence!=null?t.expressionsPrecedence:Su,this.indent=t.indent!=null?t.indent:"  ",this.lineEnd=t.lineEnd!=null?t.lineEnd:`
`,this.indentLevel=t.startingIndentLevel!=null?t.startingIndentLevel:0,this.writeComments=t.comments?t.comments:!1,t.sourceMap!=null&&(this.write=t.output==null?this.writeAndMap:this.writeToStreamAndMap,this.sourceMap=t.sourceMap,this.line=1,this.column=0,this.lineEndSize=this.lineEnd.split(`
`).length-1,this.mapping={original:null,generated:this,name:void 0,source:t.sourceMap.file||t.sourceMap._file})}write(e){this.output+=e}writeToStream(e){this.output.write(e)}writeAndMap(e,t){this.output+=e,this.map(e,t)}writeToStreamAndMap(e,t){this.output.write(e),this.map(e,t)}map(e,t){if(t!=null){let{type:c}=t;if(c[0]==="L"&&c[2]==="n"){this.column=0,this.line++;return}if(t.loc!=null){let{mapping:f}=this;f.original=t.loc.start,f.name=t.name,this.sourceMap.addMapping(f)}if(c[0]==="T"&&c[8]==="E"||c[0]==="L"&&c[1]==="i"&&typeof t.value=="string"){let{length:f}=e,{column:p,line:k}=this;for(let R=0;R<f;R++)e[R]===`
`?(p=0,k++):p++;this.column=p,this.line=k;return}}let{length:s}=e,{lineEnd:o}=this;s>0&&(this.lineEndSize>0&&(o.length===1?e[s-1]===o:e.endsWith(o))?(this.line+=this.lineEndSize,this.column=0):this.column+=s)}toString(){return this.output}};function Lu(e,t){let s=new Ou(t);return s.generator[e.type](e,s),s.output}function Po(e,t){return{type:"Program",sourceType:e,body:t}}function ju(e){return Po("script",e)}function zr(e){return{type:"Identifier",name:e}}function nl(e){return zr(e)}function ns(e){return{type:"ExpressionStatement",expression:e}}function il(e){return{type:"BlockStatement",body:e}}function li(e,t){return{type:"CallExpression",callee:e,arguments:t,optional:!1}}function Ru(e,t){return ns(li(e,t))}function Nu(e){return{type:"ThrowStatement",argument:e}}function Au(e){return Nu(Du("Error",[zu(e)]))}function sl(e=null){return{type:"ReturnStatement",argument:e}}function Vu(e,t,s){return ns(Io(e,t,s))}function Oo(e,t){return Vu("=",zr(e),t)}function Mu(e,t,s){return{type:"IfStatement",test:e,consequent:t,alternate:s}}function Wr(e,t){return{type:"WhileStatement",test:e,body:t}}function Iu(e,t){return{type:"DoWhileStatement",body:e,test:t}}function Lo(e,t,s,o){return{type:"ForStatement",init:e,test:t,update:s,body:o}}function jo(e,t){return{type:"VariableDeclaration",declarations:e,kind:t}}function Ro(e,t){return{type:"VariableDeclarator",id:e,init:t}}function is(e,t){let s=Ro(zr(e),t);return jo([s],"const")}function Bu(e,t){let s=Ro(zr(e),t);return jo([s],"let")}function No(e){let t=Mo([],il(e));return li(t,[])}function Ao(e){return{type:"ArrayExpression",elements:e}}function Vo(e){return{type:"ObjectExpression",properties:e}}function Kc(e,t){return{type:"Property",key:zr(e),value:t,kind:"init",method:!1,shorthand:!1,computed:!1}}function Fu(e,t,s){return{type:"FunctionExpression",id:e,params:t,body:s}}function Mo(e,t){return Fu(null,e,t)}function Zc(e,t){return{type:"NewExpression",callee:e,arguments:t}}function Du(e,t){return Zc(zr(e),t)}function ef(e){return{type:"Literal",value:e}}function zu(e){return ef(e)}function Wu(e){return{type:"Literal",value:e}}function Uu(e){return{type:"Literal",value:e}}function Hu(){return{type:"Literal",value:null}}function Io(e,t,s){return{type:"AssignmentExpression",operator:e,left:t,right:s}}function qu(e,t){return Io("=",zr(e),t)}function ll(e,t){return{type:"MemberExpression",object:e,property:t,computed:!1,optional:!1}}function Bo(e,t,s){return{type:"ConditionalExpression",test:e,alternate:t,consequent:s}}var Fo=class{constructor(e=[],t=null){this.locals=new Set,this.declarations=[],this.statements=[],this.parent=t,e.forEach(s=>this.locals.add(s))}declareLet(e,t){this.resolveLocal(e)||(this.locals.add(e),this.declarations.push(Bu(e,t)))}declareConst(e,t){this.resolveLocal(e)||(this.locals.add(e),this.declarations.push(is(e,t)))}resolveLocal(e){return this.locals.has(e)}resolveOuter(e){return this.parent&&this.parent.resolve(e)}resolve(e){return this.resolveLocal(e)||this.resolveOuter(e)}append(e){this.statements.push(e)}build(){return il([...this.declarations,...this.statements])}},Do=class{constructor(){this.block=new Fo}enter(e=[]){this.block=new Fo(e,this.block)}exit(){let e=this.block.parent;if(!e)return;let t=this.block.build();return this.block=e,t}freshen(e){let t=e,s=0;for(;this.block.resolve(t);)t=`${e}_${s++}`;return t}generate(e){let t=this.visitTerm(e),s=this.block.build().body,o=ns(t);return s.push(o),ju(s)}visitTerm(e){switch(e.tag){case"ErrorTerm":return this.visitErrorTerm(e);case"ValueTerm":return this.visitValueTerm(e);case"VariableTerm":return this.visitVariableTerm(e);case"AssignmentTerm":return this.visitAssignmentTerm(e);case"LambdaTerm":return this.visitLambdaTerm(e);case"CallTerm":return this.visitCallTerm(e);case"ParentheticalTerm":return this.visitParentheticalTerm(e);case"ArrayTerm":return this.visitArrayTerm(e);case"ObjectTerm":return this.visitObjectTerm(e);case"MemberAccessTerm":return this.visitMemberAccessTerm(e);case"IndexAccessTerm":return this.visitIndexAccessTerm(e);case"LetTerm":return this.visitLetTerm(e);case"DoTerm":return this.visitDoTerm(e);case"ConditionalTerm":return this.visitConditionalTerm(e);default:throw new Error(`Unknown term tag encountered: ${e}`)}}visitErrorTerm(e){let t=Au(e.msg);return No([t])}visitValueTerm(e){return this.visitAtomicValue(e.value)}visitAtomicValue(e){switch(e.tag){case"NullValue":return Hu();case"NumberValue":return Uu(e.num);case"StringValue":return zu(e.str);case"BooleanValue":return Wu(e.bool);default:throw new Error(`Unknown value tag encountered in: ${e}`)}}visitVariableTerm(e){return nl(e.variable)}visitAssignmentTerm(e){let t=e.lhs;this.block.resolve(t)||this.block.declareLet(t);let s=this.visitTerm(e.rhs);return qu(t,s)}visitLambdaTerm(e){let t=e.args.map(f=>nl(f));this.enter(e.args);let s=this.visitTerm(e.body);this.exit();let o=sl(s),c=il([o]);return Mo(t,c)}visitCallTerm(e){let t=this.visitTerm(e.func),s=e.args.map(o=>this.visitTerm(o));return li(t,s)}visitParentheticalTerm(e){return this.visitTerm(e.term)}visitArrayTerm(e){let t=e.elements.map(s=>this.visitTerm(s));return Ao(t)}visitObjectTerm(e){let t=Object.entries(e.entries).map(([s,o])=>Kc(s,this.visitTerm(o)));return Vo(t)}visitMemberAccessTerm(e){let t=this.visitTerm(e.object),s=nl(e.member);return ll(t,s)}visitIndexAccessTerm(e){let t=this.visitTerm(e.array),s=this.visitTerm(e.index);return ll(t,s)}visitLetTerm(e){this.enter(),e.declarations.forEach(c=>{let f=this.visitTerm(c.body);this.block.declareConst(c.variable,f)});let t=this.visitTerm(e.body),s=this.exit(),o=sl(t);return No([...s.body,o])}visitDoTerm(e){let{body:t}=this.visitBlockStatement(e.block);return No(t)}visitConditionalTerm(e){let t=this.visitTerm(e.condition),s=this.visitBranchTerm(e.branch),o=this.visitTerm(e.body);return Bo(t,s,o)}visitBranchTerm(e){switch(e.tag){case"ElifTerm":{let t=rl(e.condition,e.body,e.branch,e.span);return this.visitConditionalTerm(t)}case"ElseTerm":return this.visitTerm(e.body)}}visitStatement(e){switch(e.tag){case"AssignmentStatement":{this.visitAssignmentStatement(e);break}case"CallStatement":{this.visitCallStatement(e);break}case"ReturnStatement":{this.visitReturnStatement(e);break}case"BlockStatement":{let t=this.visitBlockStatement(e);this.block.append(t);break}case"IfStatement":{let t=this.visitIfStatement(e);this.block.append(t);break}case"WhileStatement":{this.visitWhileStatement(e);break}case"DoWhileStatement":{this.visitDoWhileStatement(e);break}case"ForStatement":{this.visitForStatement(e);break}}}visitAssignmentStatement(e){let t=e.lhs,s=this.visitTerm(e.rhs);if(!this.block.resolve(t)){this.block.declareLet(t,s);return}let o=Oo(t,s);this.block.append(o)}visitCallStatement(e){let t=this.visitTerm(e.func),s=e.args.map(c=>this.visitTerm(c)),o=Ru(t,s);this.block.append(o)}visitReturnStatement(e){let t=this.visitTerm(e.result),s=sl(t);this.block.append(s)}visitBlockStatement(e){return this.enter(),e.statements.forEach(t=>{this.visitStatement(t)}),this.exit()}visitIfStatement(e){let t=this.visitTerm(e.condition);this.enter(),this.visitStatement(e.body);let s=this.exit(),o=null;return e.branch&&(o=this.visitBranchStatement(e.branch)),Mu(t,s,o)}visitBranchStatement(e){switch(e.tag){case"ElifStatement":{let t=To(e.condition,e.body,e.branch,e.span);return this.visitIfStatement(t)}case"ElseStatement":return this.enter(),this.visitStatement(e.body),this.exit()}}visitWhileStatement(e){let t=this.visitTerm(e.condition);this.enter(),this.visitStatement(e.body);let s=this.exit(),o=Wr(t,s);this.block.append(o)}visitDoWhileStatement(e){let t=this.visitTerm(e.condition);this.enter(),this.visitStatement(e.body);let s=this.exit(),o=Iu(s,t);this.block.append(o)}visitForStatement(e){e.declarations.forEach(f=>{let p=this.visitTerm(f.body);this.block.declareLet(f.variable,p)});let t=this.visitTerm(e.condition),s=this.visitTerm(e.update);this.enter(),this.visitStatement(e.body);let o=this.exit(),c=Lo(null,t,s,o);this.block.append(c)}visitVariableDeclaration(e){let t=this.visitTerm(e.body);return Bu(e.variable,t)}};function Gu(...e){return{source:null,errors:e}}function tf(e){return{source:e}}function rf(e){let t;try{let s=new Do().generate(e);t=Lu(s)}catch(s){return Gu(s)}return tf(t)}var ol=Object.create,oi=Object.defineProperty,Ne=Object.getOwnPropertyDescriptor,Ht=Object.getOwnPropertyNames,Nt=Object.getPrototypeOf,Xt=Object.prototype.hasOwnProperty,fn=(e,t)=>function(){return e&&(t=(0,e[Ht(e)[0]])(e=0)),t},ai=(e,t)=>function(){return t||(0,e[Ht(e)[0]])((t={exports:{}}).exports,t),t.exports},zt=(e,t)=>{for(var s in t)oi(e,s,{get:t[s],enumerable:!0})},ss=(e,t,s,o)=>{if(t&&typeof t=="object"||typeof t=="function")for(let c of Ht(t))!Xt.call(e,c)&&c!==s&&oi(e,c,{get:()=>t[c],enumerable:!(o=Ne(t,c))||o.enumerable});return e},Or=(e,t,s)=>(s=e!=null?ol(Nt(e)):{},ss(t||!e||!e.__esModule?oi(s,"default",{value:e,enumerable:!0}):s,e)),ui=e=>ss(oi({},"__esModule",{value:!0}),e),In=ai({"../../node_modules/.pnpm/nearley@2.20.1/node_modules/nearley/lib/nearley.js"(e,t){(function(s,o){typeof t=="object"&&t.exports?t.exports=o():s.nearley=o()})(e,function(){function s(h,v,S){return this.id=++s.highestId,this.name=h,this.symbols=v,this.postprocess=S,this}s.highestId=0,s.prototype.toString=function(h){var v=typeof h=="undefined"?this.symbols.map(W).join(" "):this.symbols.slice(0,h).map(W).join(" ")+" \u25CF "+this.symbols.slice(h).map(W).join(" ");return this.name+" \u2192 "+v};function o(h,v,S,x){this.rule=h,this.dot=v,this.reference=S,this.data=[],this.wantedBy=x,this.isComplete=this.dot===h.symbols.length}o.prototype.toString=function(){return"{"+this.rule.toString(this.dot)+"}, from: "+(this.reference||0)},o.prototype.nextState=function(h){var v=new o(this.rule,this.dot+1,this.reference,this.wantedBy);return v.left=this,v.right=h,v.isComplete&&(v.data=v.build(),v.right=void 0),v},o.prototype.build=function(){var h=[],v=this;do h.push(v.right.data),v=v.left;while(v.left);return h.reverse(),h},o.prototype.finish=function(){this.rule.postprocess&&(this.data=this.rule.postprocess(this.data,this.reference,k.fail))};function c(h,v){this.grammar=h,this.index=v,this.states=[],this.wants={},this.scannable=[],this.completed={}}c.prototype.process=function(h){for(var v=this.states,S=this.wants,x=this.completed,j=0;j<v.length;j++){var A=v[j];if(A.isComplete){if(A.finish(),A.data!==k.fail){for(var K=A.wantedBy,te=K.length;te--;){var ce=K[te];this.complete(ce,A)}if(A.reference===this.index){var G=A.rule.name;(this.completed[G]=this.completed[G]||[]).push(A)}}}else{var G=A.rule.symbols[A.dot];if(typeof G!="string"){this.scannable.push(A);continue}if(S[G]){if(S[G].push(A),x.hasOwnProperty(G))for(var le=x[G],te=0;te<le.length;te++){var Pe=le[te];this.complete(A,Pe)}}else S[G]=[A],this.predict(G)}}},c.prototype.predict=function(h){for(var v=this.grammar.byName[h]||[],S=0;S<v.length;S++){var x=v[S],j=this.wants[h],A=new o(x,0,this.index,j);this.states.push(A)}},c.prototype.complete=function(h,v){var S=h.nextState(v);this.states.push(S)};function f(h,v){this.rules=h,this.start=v||this.rules[0].name;var S=this.byName={};this.rules.forEach(function(x){S.hasOwnProperty(x.name)||(S[x.name]=[]),S[x.name].push(x)})}f.fromCompiled=function(x,v){var S=x.Lexer;x.ParserStart&&(v=x.ParserStart,x=x.ParserRules);var x=x.map(function(A){return new s(A.name,A.symbols,A.postprocess)}),j=new f(x,v);return j.lexer=S,j};function p(){this.reset("")}p.prototype.reset=function(h,v){this.buffer=h,this.index=0,this.line=v?v.line:1,this.lastLineBreak=v?-v.col:0},p.prototype.next=function(){if(this.index<this.buffer.length){var h=this.buffer[this.index++];return h===`
`&&(this.line+=1,this.lastLineBreak=this.index),{value:h}}},p.prototype.save=function(){return{line:this.line,col:this.index-this.lastLineBreak}},p.prototype.formatError=function(h,v){var S=this.buffer;if(typeof S=="string"){var x=S.split(`
`).slice(Math.max(0,this.line-5),this.line),j=S.indexOf(`
`,this.index);j===-1&&(j=S.length);var A=this.index-this.lastLineBreak,K=String(this.line).length;return v+=" at line "+this.line+" col "+A+`:

`,v+=x.map(function(ce,G){return te(this.line-x.length+G+1,K)+" "+ce},this).join(`
`),v+=`
`+te("",K+A)+`^
`,v}else return v+" at index "+(this.index-1);function te(ce,G){var le=String(ce);return Array(G-le.length+1).join(" ")+le}};function k(h,v,x){if(h instanceof f)var j=h,x=v;else var j=f.fromCompiled(h,v);this.grammar=j,this.options={keepHistory:!1,lexer:j.lexer||new p};for(var A in x||{})this.options[A]=x[A];this.lexer=this.options.lexer,this.lexerState=void 0;var K=new c(j,0),te=this.table=[K];K.wants[j.start]=[],K.predict(j.start),K.process(),this.current=0}k.fail={},k.prototype.feed=function(h){var v=this.lexer;v.reset(h,this.lexerState);for(var S;;){try{if(S=v.next(),!S)break}catch(ne){var K=new c(this.grammar,this.current+1);this.table.push(K);var x=new Error(this.reportLexerError(ne));throw x.offset=this.current,x.token=ne.token,x}var j=this.table[this.current];this.options.keepHistory||delete this.table[this.current-1];var A=this.current+1,K=new c(this.grammar,A);this.table.push(K);for(var te=S.text!==void 0?S.text:S.value,ce=v.constructor===p?S.value:S,G=j.scannable,le=G.length;le--;){var Pe=G[le],re=Pe.rule.symbols[Pe.dot];if(re.test?re.test(ce):re.type?re.type===S.type:re.literal===te){var _e=Pe.nextState({data:ce,token:S,isToken:!0,reference:A-1});K.states.push(_e)}}if(K.process(),K.states.length===0){var x=new Error(this.reportError(S));throw x.offset=this.current,x.token=S,x}this.options.keepHistory&&(j.lexerState=v.save()),this.current++}return j&&(this.lexerState=v.save()),this.results=this.finish(),this},k.prototype.reportLexerError=function(h){var v,S,x=h.token;return x?(v="input "+JSON.stringify(x.text[0])+" (lexer error)",S=this.lexer.formatError(x,"Syntax error")):(v="input (lexer error)",S=h.message),this.reportErrorCommon(S,v)},k.prototype.reportError=function(h){var v=(h.type?h.type+" token: ":"")+JSON.stringify(h.value!==void 0?h.value:h),S=this.lexer.formatError(h,"Syntax error");return this.reportErrorCommon(S,v)},k.prototype.reportErrorCommon=function(h,v){var S=[];S.push(h);var x=this.table.length-2,j=this.table[x],A=j.states.filter(function(te){var ce=te.rule.symbols[te.dot];return ce&&typeof ce!="string"});if(A.length===0)S.push("Unexpected "+v+`. I did not expect any more input. Here is the state of my parse table:
`),this.displayStateStack(j.states,S);else{S.push("Unexpected "+v+`. Instead, I was expecting to see one of the following:
`);var K=A.map(function(te){return this.buildFirstStateStack(te,[])||[te]},this);K.forEach(function(te){var ce=te[0],G=ce.rule.symbols[ce.dot],le=this.getSymbolDisplay(G);S.push("A "+le+" based on:"),this.displayStateStack(te,S)},this)}return S.push(""),S.join(`
`)},k.prototype.displayStateStack=function(h,v){for(var S,x=0,j=0;j<h.length;j++){var A=h[j],K=A.rule.toString(A.dot);K===S?x++:(x>0&&v.push("    ^ "+x+" more lines identical to this"),x=0,v.push("    "+K)),S=K}},k.prototype.getSymbolDisplay=function(h){return R(h)},k.prototype.buildFirstStateStack=function(h,v){if(v.indexOf(h)!==-1)return null;if(h.wantedBy.length===0)return[h];var S=h.wantedBy[0],x=[h].concat(v),j=this.buildFirstStateStack(S,x);return j===null?null:[h].concat(j)},k.prototype.save=function(){var h=this.table[this.current];return h.lexerState=this.lexerState,h},k.prototype.restore=function(h){var v=h.index;this.current=v,this.table[v]=h,this.table.splice(v+1),this.lexerState=h.lexerState,this.results=this.finish()},k.prototype.rewind=function(h){if(!this.options.keepHistory)throw new Error("set option `keepHistory` to enable rewinding");this.restore(this.table[h])},k.prototype.finish=function(){var h=[],v=this.grammar.start,S=this.table[this.table.length-1];return S.states.forEach(function(x){x.rule.name===v&&x.dot===x.rule.symbols.length&&x.reference===0&&x.data!==k.fail&&h.push(x)}),h.map(function(x){return x.data})};function R(h){var v=typeof h;if(v==="string")return h;if(v==="object"){if(h.literal)return JSON.stringify(h.literal);if(h instanceof RegExp)return"character matching "+h;if(h.type)return h.type+" token";if(h.test)return"token matching "+String(h.test);throw new Error("Unknown symbol type: "+h)}}function W(h){var v=typeof h;if(v==="string")return h;if(v==="object"){if(h.literal)return JSON.stringify(h.literal);if(h instanceof RegExp)return h.toString();if(h.type)return"%"+h.type;if(h.test)return"<"+String(h.test)+">";throw new Error("Unknown symbol type: "+h)}}return{Parser:k,Grammar:f,Rule:s}})}}),zo=ai({"../../node_modules/.pnpm/moo@0.5.1/node_modules/moo/moo.js"(e,t){(function(s,o){typeof define=="function"&&Ke.amdO?define([],o):typeof t=="object"&&t.exports?t.exports=o():s.moo=o()})(e,function(){"use strict";var s=Object.prototype.hasOwnProperty,o=Object.prototype.toString,c=typeof new RegExp().sticky=="boolean";function f(d){return d&&o.call(d)==="[object RegExp]"}function p(d){return d&&typeof d=="object"&&!f(d)&&!Array.isArray(d)}function k(d){return d.replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&")}function R(d){var w=new RegExp("|"+d);return w.exec("").length-1}function W(d){return"("+d+")"}function h(d){if(!d.length)return"(?!)";var w=d.map(function($){return"(?:"+$+")"}).join("|");return"(?:"+w+")"}function v(d){if(typeof d=="string")return"(?:"+k(d)+")";if(f(d)){if(d.ignoreCase)throw new Error("RegExp /i flag not allowed");if(d.global)throw new Error("RegExp /g flag is implied");if(d.sticky)throw new Error("RegExp /y flag is implied");if(d.multiline)throw new Error("RegExp /m flag is implied");return d.source}else throw new Error("Not a pattern: "+d)}function S(d){for(var w=Object.getOwnPropertyNames(d),$=[],O=0;O<w.length;O++){var D=w[O],V=d[D],H=[].concat(V);if(D==="include"){for(var fe=0;fe<H.length;fe++)$.push({include:H[fe]});continue}var me=[];H.forEach(function(I){p(I)?(me.length&&$.push(j(D,me)),$.push(j(D,I)),me=[]):me.push(I)}),me.length&&$.push(j(D,me))}return $}function x(d){for(var w=[],$=0;$<d.length;$++){var O=d[$];if(O.include){for(var D=[].concat(O.include),V=0;V<D.length;V++)w.push({include:D[V]});continue}if(!O.type)throw new Error("Rule has no type: "+JSON.stringify(O));w.push(j(O.type,O))}return w}function j(d,w){if(p(w)||(w={match:w}),w.include)throw new Error("Matching rules cannot also include states");var $={defaultType:d,lineBreaks:!!w.error||!!w.fallback,pop:!1,next:null,push:null,error:!1,fallback:!1,value:null,type:null,shouldThrow:!1};for(var O in w)s.call(w,O)&&($[O]=w[O]);if(typeof $.type=="string"&&d!==$.type)throw new Error("Type transform cannot be a string (type '"+$.type+"' for token '"+d+"')");var D=$.match;return $.match=Array.isArray(D)?D:D?[D]:[],$.match.sort(function(V,H){return f(V)&&f(H)?0:f(H)?-1:f(V)?1:H.length-V.length}),$}function A(d){return Array.isArray(d)?x(d):S(d)}var K=j("error",{lineBreaks:!0,shouldThrow:!0});function te(d,w){for(var $=null,O=Object.create(null),D=!0,V=null,H=[],fe=[],me=0;me<d.length;me++)d[me].fallback&&(D=!1);for(var me=0;me<d.length;me++){var I=d[me];if(I.include)throw new Error("Inheritance is not allowed in stateless lexers");if(I.error||I.fallback){if($)throw!I.fallback==!$.fallback?new Error("Multiple "+(I.fallback?"fallback":"error")+" rules not allowed (for token '"+I.defaultType+"')"):new Error("fallback and error are mutually exclusive (for token '"+I.defaultType+"')");$=I}var ge=I.match.slice();if(D)for(;ge.length&&typeof ge[0]=="string"&&ge[0].length===1;){var tt=ge.shift();O[tt.charCodeAt(0)]=I}if(I.pop||I.push||I.next){if(!w)throw new Error("State-switching options are not allowed in stateless lexers (for token '"+I.defaultType+"')");if(I.fallback)throw new Error("State-switching options are not allowed on fallback tokens (for token '"+I.defaultType+"')")}if(ge.length!==0){D=!1,H.push(I);for(var be=0;be<ge.length;be++){var we=ge[be];if(f(we)){if(V===null)V=we.unicode;else if(V!==we.unicode&&I.fallback===!1)throw new Error("If one rule is /u then all must be")}}var Je=h(ge.map(v)),u=new RegExp(Je);if(u.test(""))throw new Error("RegExp matches empty string: "+u);var E=R(Je);if(E>0)throw new Error("RegExp has capture groups: "+u+`
Use (?: \u2026 ) instead`);if(!I.lineBreaks&&u.test(`
`))throw new Error("Rule should declare lineBreaks: "+u);fe.push(W(Je))}}var ee=$&&$.fallback,De=c&&!ee?"ym":"gm",Wt=c||ee?"":"|";V===!0&&(De+="u");var Gr=new RegExp(h(fe)+Wt,De);return{regexp:Gr,groups:H,fast:O,error:$||K}}function ce(d){var w=te(A(d));return new re({start:w},"start")}function G(d,w,$){var O=d&&(d.push||d.next);if(O&&!$[O])throw new Error("Missing state '"+O+"' (in token '"+d.defaultType+"' of state '"+w+"')");if(d&&d.pop&&+d.pop!=1)throw new Error("pop must be 1 (in token '"+d.defaultType+"' of state '"+w+"')")}function le(d,w){var $=d.$all?A(d.$all):[];delete d.$all;var O=Object.getOwnPropertyNames(d);w||(w=O[0]);for(var D=Object.create(null),V=0;V<O.length;V++){var H=O[V];D[H]=A(d[H]).concat($)}for(var V=0;V<O.length;V++)for(var H=O[V],fe=D[H],me=Object.create(null),I=0;I<fe.length;I++){var ge=fe[I];if(ge.include){var tt=[I,1];if(ge.include!==H&&!me[ge.include]){me[ge.include]=!0;var be=D[ge.include];if(!be)throw new Error("Cannot include nonexistent state '"+ge.include+"' (in state '"+H+"')");for(var we=0;we<be.length;we++){var Je=be[we];fe.indexOf(Je)===-1&&tt.push(Je)}}fe.splice.apply(fe,tt),I--}}for(var u=Object.create(null),V=0;V<O.length;V++){var H=O[V];u[H]=te(D[H],!0)}for(var V=0;V<O.length;V++){for(var E=O[V],ee=u[E],De=ee.groups,I=0;I<De.length;I++)G(De[I],E,u);for(var Wt=Object.getOwnPropertyNames(ee.fast),I=0;I<Wt.length;I++)G(ee.fast[Wt[I]],E,u)}return new re(u,w)}function Pe(d){for(var w=Object.create(null),$=Object.create(null),O=Object.getOwnPropertyNames(d),D=0;D<O.length;D++){var V=O[D],H=d[V],fe=Array.isArray(H)?H:[H];fe.forEach(function(be){if(($[be.length]=$[be.length]||[]).push(be),typeof be!="string")throw new Error("keyword must be string (in keyword '"+V+"')");w[be]=V})}function me(be){return JSON.stringify(be)}var I="";I+=`switch (value.length) {
`;for(var ge in $){var tt=$[ge];I+="case "+ge+`:
`,I+=`switch (value) {
`,tt.forEach(function(be){var we=w[be];I+="case "+me(be)+": return "+me(we)+`
`}),I+=`}
`}return I+=`}
`,Function("value",I)}var re=function(d,w){this.startState=w,this.states=d,this.buffer="",this.stack=[],this.reset()};re.prototype.reset=function(d,w){return this.buffer=d||"",this.index=0,this.line=w?w.line:1,this.col=w?w.col:1,this.queuedToken=w?w.queuedToken:null,this.queuedThrow=w?w.queuedThrow:null,this.setState(w?w.state:this.startState),this.stack=w&&w.stack?w.stack.slice():[],this},re.prototype.save=function(){return{line:this.line,col:this.col,state:this.state,stack:this.stack.slice(),queuedToken:this.queuedToken,queuedThrow:this.queuedThrow}},re.prototype.setState=function(d){if(!(!d||this.state===d)){this.state=d;var w=this.states[d];this.groups=w.groups,this.error=w.error,this.re=w.regexp,this.fast=w.fast}},re.prototype.popState=function(){this.setState(this.stack.pop())},re.prototype.pushState=function(d){this.stack.push(this.state),this.setState(d)};var _e=c?function(d,w){return d.exec(w)}:function(d,w){var $=d.exec(w);return $[0].length===0?null:$};re.prototype._getGroup=function(d){for(var w=this.groups.length,$=0;$<w;$++)if(d[$+1]!==void 0)return this.groups[$];throw new Error("Cannot find token type for matched text")};function ne(){return this.value}if(re.prototype.next=function(){var d=this.index;if(this.queuedGroup){var w=this._token(this.queuedGroup,this.queuedText,d);return this.queuedGroup=null,this.queuedText="",w}var $=this.buffer;if(d!==$.length){var H=this.fast[$.charCodeAt(d)];if(H)return this._token(H,$.charAt(d),d);var O=this.re;O.lastIndex=d;var D=_e(O,$),V=this.error;if(D==null)return this._token(V,$.slice(d,$.length),d);var H=this._getGroup(D),fe=D[0];return V.fallback&&D.index!==d?(this.queuedGroup=H,this.queuedText=fe,this._token(V,$.slice(d,D.index),d)):this._token(H,fe,d)}},re.prototype._token=function(d,w,$){var O=0;if(d.lineBreaks){var D=/\n/g,V=1;if(w===`
`)O=1;else for(;D.exec(w);)O++,V=D.lastIndex}var H={type:typeof d.type=="function"&&d.type(w)||d.defaultType,value:typeof d.value=="function"?d.value(w):w,text:w,toString:ne,offset:$,lineBreaks:O,line:this.line,col:this.col},fe=w.length;if(this.index+=fe,this.line+=O,O!==0?this.col=fe-V+1:this.col+=fe,d.shouldThrow)throw new Error(this.formatError(H,"invalid syntax"));return d.pop?this.popState():d.push?this.pushState(d.push):d.next&&this.setState(d.next),H},typeof Symbol!="undefined"&&Symbol.iterator){var ye=function(d){this.lexer=d};ye.prototype.next=function(){var d=this.lexer.next();return{value:d,done:!d}},ye.prototype[Symbol.iterator]=function(){return this},re.prototype[Symbol.iterator]=function(){return new ye(this)}}return re.prototype.formatError=function(O,w){if(O==null)var $=this.buffer.slice(this.index),O={text:$,offset:this.index,lineBreaks:$.indexOf(`
`)===-1?0:1,line:this.line,col:this.col};var D=Math.max(0,O.offset-O.col+1),V=O.lineBreaks?O.text.indexOf(`
`):O.text.length,H=this.buffer.substring(D,O.offset+V);return w+=" at line "+O.line+" col "+O.col+`:

`,w+="  "+H+`
`,w+="  "+Array(O.col).join(" ")+"^",w},re.prototype.clone=function(){return new re(this.states,this.state)},re.prototype.has=function(d){return!0},{compile:ce,states:le,error:Object.freeze({error:!0}),fallback:Object.freeze({fallback:!0}),keywords:Pe}})}}),ci=ai({"../syntax/lib/index.cjs"(e,t){var s=Object.defineProperty,o=Object.getOwnPropertyDescriptor,c=Object.getOwnPropertyNames,f=Object.prototype.hasOwnProperty,p=(b,_)=>{for(var F in _)s(b,F,{get:_[F],enumerable:!0})},k=(b,_,F,Le)=>{if(_&&typeof _=="object"||typeof _=="function")for(let rt of c(_))!f.call(b,rt)&&rt!==F&&s(b,rt,{get:()=>_[rt],enumerable:!(Le=o(_,rt))||Le.enumerable});return b},R=b=>k(s({},"__esModule",{value:!0}),b),W={};p(W,{ArrayTerm:()=>fe,AssignmentStatement:()=>u,AssignmentTerm:()=>w,BlockStatement:()=>De,BooleanValue:()=>_e,CallStatement:()=>E,CallTerm:()=>O,ConditionalTerm:()=>be,DoTerm:()=>tt,DoWhileStatement:()=>sa,ElifStatement:()=>Gr,ElifTerm:()=>we,ElseStatement:()=>na,ElseTerm:()=>Je,ErrorTerm:()=>ne,ForStatement:()=>la,IfStatement:()=>Wt,IndexAccessTerm:()=>ge,LambdaTerm:()=>$,LetTerm:()=>D,MemberAccessTerm:()=>I,Merge:()=>te,NullValue:()=>le,NumberValue:()=>Pe,ObjectTerm:()=>me,ParentheticalTerm:()=>H,ReturnStatement:()=>ee,Span:()=>K,StringValue:()=>re,TextSpan:()=>G,ValueTerm:()=>ye,VariableDeclaration:()=>V,VariableTerm:()=>d,WhileStatement:()=>ia,lines:()=>ce,resolveFree:()=>S,resolveFreeStatement:()=>A,resolveFreeTerm:()=>j}),t.exports=R(W);function h(b){return b.tag.endsWith("Term")}function v(b){return b.tag.endsWith("Statement")}function S(b){let _=x();return h(b)?j(b,_):v(b)?A(b,_):[]}function x(){return{bound:[new Set]}}function j(b,_){return[]}function A(b,_){return[]}function K(b,_,F,Le){return{type:"Span",line:{start:b,end:_},column:{start:F,end:Le}}}function te(b,_){return{type:"Span",line:{start:b.line.start,end:_.line.end},column:{start:b.column.start,end:_.column.end}}}var ce=b=>b.split(/\r\n|\r|\n/);function G(b,_,F){let Le=b.length;if(Le==0)return K(_,_,F,F);let rt=ce(b),Yr=rt.length;if(Yr<=1)return K(_,_,F,F+Le);let oa=rt[Yr-1],aa=F+oa.length,ua=_+Yr-1;return K(_,ua,F,aa)}function le(b){return{tag:"NullValue",span:b}}function Pe(b,_){return{tag:"NumberValue",num:b,span:_}}function re(b,_){return{tag:"StringValue",str:b,span:_}}function _e(b,_){return{tag:"BooleanValue",bool:b,span:_}}function ne(b,_){return{tag:"ErrorTerm",msg:b,span:_}}function ye(b,_){return{tag:"ValueTerm",value:b,span:_}}function d(b,_){return{tag:"VariableTerm",variable:b,span:_}}function w(b,_,F){return{tag:"AssignmentTerm",lhs:b,rhs:_,span:F}}function $(b,_,F){return{tag:"LambdaTerm",args:b,body:_,span:F}}function O(b,_,F){return{tag:"CallTerm",func:b,args:_,span:F}}function D(b,_,F){return{tag:"LetTerm",declarations:b,body:_,span:F}}function V(b,_,F){return{tag:"VariableDeclaration",variable:b,body:_,span:F}}function H(b,_){return{tag:"ParentheticalTerm",term:b,span:_}}function fe(b,_){return{tag:"ArrayTerm",elements:b,span:_}}function me(b,_){return{tag:"ObjectTerm",entries:b,span:_}}function I(b,_,F){return{tag:"MemberAccessTerm",object:b,member:_,span:F}}function ge(b,_,F){return{tag:"IndexAccessTerm",array:b,index:_,span:F}}function tt(b,_){return{tag:"DoTerm",block:b,span:_}}function be(b,_,F,Le){return{tag:"ConditionalTerm",condition:b,body:_,branch:F,span:Le}}function we(b,_,F,Le){return{tag:"ElifTerm",condition:b,body:_,branch:F,span:Le}}function Je(b,_){return{tag:"ElseTerm",body:b,span:_}}function u(b,_,F){return{tag:"AssignmentStatement",lhs:b,rhs:_,span:F}}function E(b,_,F){return{tag:"CallStatement",func:b,args:_,span:F}}function ee(b,_){return{tag:"ReturnStatement",result:b,span:_}}function De(b,_){return{tag:"BlockStatement",statements:b,span:_}}function Wt(b,_,F,Le){return{tag:"IfStatement",condition:b,body:_,branch:F,span:Le}}function Gr(b,_,F,Le){return{tag:"ElifStatement",condition:b,body:_,branch:F,span:Le}}function na(b,_){return{tag:"ElseStatement",body:b,span:_}}function ia(b,_,F){return{tag:"WhileStatement",condition:b,body:_,span:F}}function sa(b,_,F){return{tag:"DoWhileStatement",body:b,condition:_,span:F}}function la(b,_,F,Le,rt){return{tag:"ForStatement",declarations:b,condition:_,update:F,body:Le,span:rt}}}}),al={};zt(al,{SourceToken:()=>ls,Token:()=>fi});function ls(e){let t=e.text,s=e.line,o=e.col;return{type:"Token",text:t,span:(0,ve.TextSpan)(t,s,o)}}function fi(e,...t){let s=ls(e),o=t.length;if(o<=0)return s;s.text+=t.map(k=>k.text).join("");let c=t[o-1],f=ls(c),p=(0,ve.Merge)(s.span,f.span);return s.span=p,s}var ve,os=fn({"src/coolscript/parser/token.ts"(){ve=Or(ci())}}),ul={};zt(ul,{ArrayTerm:()=>ar,AssignmentStatement:()=>nf,AssignmentTerm:()=>cl,BlockStatement:()=>hl,CallStatement:()=>Ju,CallTerm:()=>fl,ConditionalTerm:()=>Yu,DoTerm:()=>yr,DoWhileStatement:()=>ms,ElifStatement:()=>pi,ElifTerm:()=>mi,ElseStatement:()=>Xu,ElseTerm:()=>qo,ErrorTerm:()=>Ur,FalseValue:()=>Uo,ForStatement:()=>sf,IfStatement:()=>Go,IndexAccessTerm:()=>pl,LambdaTerm:()=>Hr,LetTerm:()=>fs,MemberAccessTerm:()=>hn,NullValue:()=>mn,NumberValue:()=>as,ObjectTerm:()=>pn,ParentheticalTerm:()=>ml,ReturnStatement:()=>Qu,StringValue:()=>us,TrueValue:()=>Wo,ValueTerm:()=>cs,VariableDeclaration:()=>Vr,VariableTerm:()=>Ho,WhileStatement:()=>Ku});function Vr(e,t){return Ye.VariableDeclaration(e.text,t,(0,hi.Merge)(e.span,t.span))}function mn(e){return Ye.NullValue(e.span)}function as(e){let t=parseFloat(e.text);return Ye.NumberValue(t,e.span)}function us(e){let t=e.text,s=t.substring(1,t.length-1);return Ye.StringValue(s,e.span)}function Wo(e){return Ye.BooleanValue(!0,e.span)}function Uo(e){return Ye.BooleanValue(!1,e.span)}function Ur(e,t){return Ye.ErrorTerm(e,t)}function cs(e){return Ye.ValueTerm(e,e.span)}function Ho(e){return Ye.VariableTerm(e.text,e.span)}function cl(e,t){return Ye.AssignmentTerm(e.text,t,(0,hi.Merge)(e.span,t.span))}function Hr(e,t,s){return Ye.LambdaTerm(e,t,s)}function fl(e,t,s){return Ye.CallTerm(e,t,s)}function fs(e,t,s){return Ye.LetTerm(e,t,s)}function ml(e,t){return Ye.ParentheticalTerm(e,t)}function ar(e,t){return Ye.ArrayTerm(e,t)}function pn(e,t){return Ye.ObjectTerm(e,t)}function hn(e,t){return Ye.MemberAccessTerm(e,t.text,(0,hi.Merge)(e.span,t.span))}function pl(e,t,s){return Ye.IndexAccessTerm(e,t,s)}function yr(e,t){return Ye.DoTerm(e,t)}function Yu(e,t,s,o){return Ye.ConditionalTerm(e,t,s,o)}function mi(e,t,s,o){return Ye.ElifTerm(e,t,s,o)}function qo(e,t){return Ye.ElseTerm(e,t)}function nf(e,t){return Ye.AssignmentStatement(e.text,t,(0,hi.Merge)(e.span,t.span))}function Ju(e,t,s){return Ye.CallStatement(e,t,s)}function Qu(e,t){return Ye.ReturnStatement(e,t)}function hl(e,t){return Ye.BlockStatement(e,t)}function Go(e,t,s,o){return Ye.IfStatement(e,t,s,o)}function pi(e,t,s,o){return Ye.ElifStatement(e,t,s,o)}function Xu(e,t){return Ye.ElseStatement(e,t)}function Ku(e,t,s){return Ye.WhileStatement(e,t,s)}function ms(e,t,s){return Ye.DoWhileStatement(e,t,s)}function sf(e,t,s,o,c){return Ye.ForStatement(e,t,s,o,c)}var Ye,hi,Zu=fn({"src/coolscript/parser/parser-syntax-constructors.ts"(){Ye=Or(ci()),hi=Or(ci())}}),Bn=ai({"nearley:C:\\Users\\zetta\\code\\coolscript\\packages\\parser\\src\\coolscript\\parser\\grammar\\grammar.ne"(e,t){(function(){function s(u){return u[0]}let o=zo(),{Span:c,Merge:f}=ci(),{Token:p}=(os(),ui(al)),{NullValue:k,NumberValue:R,StringValue:W,TrueValue:h,FalseValue:v,ValueTerm:S,VariableTerm:x,AssignmentTerm:j,LambdaTerm:A,CallTerm:K,LetTerm:te,VariableDeclaration:ce,ParentheticalTerm:G,ArrayTerm:le,ObjectTerm:Pe,MemberAccessTerm:re,IndexAccessTerm:_e,DoTerm:ne,ConditionalTerm:ye,ElifTerm:d,ElseTerm:w,AssignmentStatement:$,CallStatement:O,ReturnStatement:D,BlockStatement:V,IfStatement:H,BranchStatement:fe,ElifStatement:me,ElseStatement:I,WhileStatement:ge,DoWhileStatement:tt,ForStatement:be}=(Zu(),ui(ul)),we=o.compile({ws:/[ \t\v\f]+/,newline:{match:/[ \n]+/,lineBreaks:!0},comment:/\/\/.*?$/,identifier:/[a-zA-Z][a-zA-Z0-9]*/,number:/[0-9]+/,dqstring:{match:/"(?:\\["\\]|[^\n"\\])*"/,lineBreaks:!0},sqstring:{match:/'(?:\\['\\]|[^\n'\\])*'/,lineBreaks:!0},keyword:["null","true","false","error","let","in","do","if","else","elif","while","for",".","+","-","*","/","++","--","&&","||","==","!=","(",")","[","]","{","}",";",":",",","=","=>"]});var Je={Lexer:we,ParserRules:[{name:"main",symbols:["file"],postprocess:s},{name:"file",symbols:["_","term","_"],postprocess:([,u])=>u},{name:"_$ebnf$1",symbols:[we.has("ws")?{type:"ws"}:ws],postprocess:s},{name:"_$ebnf$1",symbols:[],postprocess:function(u){return null}},{name:"_",symbols:["_$ebnf$1"],postprocess:null},{name:"_",symbols:["_",we.has("comment")?{type:"comment"}:comment,"_"],postprocess:null},{name:"_",symbols:["_",we.has("newline")?{type:"newline"}:newline,"_"],postprocess:null},{name:"identifier_token",symbols:[we.has("identifier")?{type:"identifier"}:identifier],postprocess:([u])=>p(u)},{name:"null_token",symbols:[{literal:"null"}],postprocess:([u])=>p(u)},{name:"number_token",symbols:[we.has("number")?{type:"number"}:number],postprocess:([u])=>p(u)},{name:"number_token",symbols:[we.has("number")?{type:"number"}:number,{literal:"."},we.has("number")?{type:"number"}:number],postprocess:([u,E,ee])=>p(u,E,ee)},{name:"string_token",symbols:[we.has("sqstring")?{type:"sqstring"}:sqstring],postprocess:([u])=>p(u)},{name:"string_token",symbols:[we.has("dqstring")?{type:"dqstring"}:dqstring],postprocess:([u])=>p(u)},{name:"true_token",symbols:[{literal:"true"}],postprocess:([u])=>p(u)},{name:"false_token",symbols:[{literal:"false"}],postprocess:([u])=>p(u)},{name:"value",symbols:["null_value"],postprocess:s},{name:"value",symbols:["number_value"],postprocess:s},{name:"value",symbols:["boolean_value"],postprocess:s},{name:"value",symbols:["string_value"],postprocess:s},{name:"null_value",symbols:["null_token"],postprocess:([u])=>k(u)},{name:"number_value",symbols:["number_token"],postprocess:([u])=>R(u)},{name:"string_value",symbols:["string_token"],postprocess:([u])=>W(u)},{name:"boolean_value",symbols:["true_token"],postprocess:([u])=>h(u)},{name:"boolean_value",symbols:["false_token"],postprocess:([u])=>v(u)},{name:"term",symbols:["cterm"],postprocess:s},{name:"cterm",symbols:["let_term"],postprocess:s},{name:"cterm",symbols:["lambda_term"],postprocess:s},{name:"cterm",symbols:["do_term"],postprocess:s},{name:"cterm",symbols:["conditional_term"],postprocess:s},{name:"cterm",symbols:["assignment_term"],postprocess:s},{name:"cterm",symbols:["bterm"],postprocess:s},{name:"bterm",symbols:["call_term"],postprocess:s},{name:"bterm",symbols:["member_access_term"],postprocess:s},{name:"bterm",symbols:["index_access_term"],postprocess:s},{name:"bterm",symbols:["aterm"],postprocess:s},{name:"aterm",symbols:["value_term"],postprocess:s},{name:"aterm",symbols:["variable_term"],postprocess:s},{name:"aterm",symbols:["array_term"],postprocess:s},{name:"aterm",symbols:["object_term"],postprocess:s},{name:"aterm",symbols:["parenthetical_term"],postprocess:s},{name:"value_term",symbols:["value"],postprocess:([u])=>S(u)},{name:"variable_term",symbols:["identifier_token"],postprocess:([u])=>x(u)},{name:"assignment_term",symbols:["identifier_token","_",{literal:"="},"_","term"],postprocess:([u,,,,E])=>j(u,E)},{name:"lambda_term$ebnf$1",symbols:[]},{name:"lambda_term$ebnf$1$subexpression$1",symbols:[{literal:","},"_"]},{name:"lambda_term$ebnf$1",symbols:["lambda_term$ebnf$1","lambda_term$ebnf$1$subexpression$1"],postprocess:function(u){return u[0].concat([u[1]])}},{name:"lambda_term",symbols:[{literal:"("},"_","lambda_arguments","_","lambda_term$ebnf$1",{literal:")"},"_",{literal:"=>"},"_","term"],postprocess:([u,,E,,,,,,,ee])=>A(E,ee,f(p(u).span,ee.span))},{name:"lambda_arguments$ebnf$1",symbols:[]},{name:"lambda_arguments$ebnf$1",symbols:["lambda_arguments$ebnf$1","lambda_arguments_tail"],postprocess:function(u){return u[0].concat([u[1]])}},{name:"lambda_arguments",symbols:["identifier_token","lambda_arguments$ebnf$1"],postprocess:([u,E])=>[u.text,...E]},{name:"lambda_arguments_tail",symbols:["_",{literal:","},"_","identifier_token"],postprocess:([,,,u])=>u.text},{name:"call_term$ebnf$1",symbols:[]},{name:"call_term$ebnf$1$subexpression$1",symbols:[{literal:","},"_"]},{name:"call_term$ebnf$1",symbols:["call_term$ebnf$1","call_term$ebnf$1$subexpression$1"],postprocess:function(u){return u[0].concat([u[1]])}},{name:"call_term",symbols:["bterm","_",{literal:"("},"_","call_arguments","_","call_term$ebnf$1",{literal:")"}],postprocess:u=>K(u[0],u[4],f(u[0].span,p(u[7]).span))},{name:"call_arguments$ebnf$1",symbols:[]},{name:"call_arguments$ebnf$1",symbols:["call_arguments$ebnf$1","call_arguments_tail"],postprocess:function(u){return u[0].concat([u[1]])}},{name:"call_arguments",symbols:["bterm","call_arguments$ebnf$1"],postprocess:([u,E])=>[u,...E]},{name:"call_arguments_tail",symbols:["_",{literal:","},"_","bterm"],postprocess:([,,,u])=>u},{name:"parenthetical_term",symbols:[{literal:"("},"_","term","_",{literal:")"}],postprocess:([u,,E,,ee])=>G(E,f(p(u).span,p(ee).span))},{name:"array_term",symbols:[{literal:"["},"_",{literal:"]"}],postprocess:([u,,E])=>le([],f(p(u).span,p(E).span))},{name:"array_term$ebnf$1",symbols:[]},{name:"array_term$ebnf$1$subexpression$1",symbols:[{literal:","},"_"]},{name:"array_term$ebnf$1",symbols:["array_term$ebnf$1","array_term$ebnf$1$subexpression$1"],postprocess:function(u){return u[0].concat([u[1]])}},{name:"array_term",symbols:[{literal:"["},"_","array_term_elements","_","array_term$ebnf$1",{literal:"]"}],postprocess:([u,,E,,,ee])=>le(E,f(p(u).span,p(ee).span))},{name:"array_term_elements$ebnf$1",symbols:[]},{name:"array_term_elements$ebnf$1",symbols:["array_term_elements$ebnf$1","array_term_elements_tail"],postprocess:function(u){return u[0].concat([u[1]])}},{name:"array_term_elements",symbols:["term","array_term_elements$ebnf$1"],postprocess:([u,E])=>[u,...E]},{name:"array_term_elements_tail",symbols:["_",{literal:","},"_","term"],postprocess:([,,,u])=>u},{name:"object_term",symbols:[{literal:"{"},"_",{literal:"}"}],postprocess:()=>Pe({},f(p(t1).span,p(t2).span))},{name:"object_term$ebnf$1",symbols:[]},{name:"object_term$ebnf$1$subexpression$1",symbols:[{literal:","},"_"]},{name:"object_term$ebnf$1",symbols:["object_term$ebnf$1","object_term$ebnf$1$subexpression$1"],postprocess:function(u){return u[0].concat([u[1]])}},{name:"object_term",symbols:[{literal:"{"},"_","object_term_entries","_","object_term$ebnf$1",{literal:"}"}],postprocess:([u,,E,,,ee])=>Pe(Object.fromEntries(E),f(p(u).span,p(ee).span))},{name:"object_term_entries$ebnf$1",symbols:[]},{name:"object_term_entries$ebnf$1",symbols:["object_term_entries$ebnf$1","object_term_entries_tail"],postprocess:function(u){return u[0].concat([u[1]])}},{name:"object_term_entries",symbols:["object_term_entry","object_term_entries$ebnf$1"],postprocess:([u,E])=>[u,...E]},{name:"object_term_entries_tail",symbols:["_",{literal:","},"_","object_term_entry"],postprocess:([,,,u])=>u},{name:"object_term_entry",symbols:["identifier_token","_",{literal:":"},"_","term"],postprocess:([u,,,,E])=>[u.text,E]},{name:"member_access_term",symbols:["bterm","_",{literal:"."},"_","identifier_token"],postprocess:u=>re(u[0],u[4])},{name:"index_access_term",symbols:["bterm","_",{literal:"["},"_","bterm","_",{literal:"]"}],postprocess:([u,,,,E,,ee])=>_e(u,E,f(u.span,p(ee).span))},{name:"let_term$ebnf$1",symbols:[]},{name:"let_term$ebnf$1$subexpression$1",symbols:[{literal:";"},"_"]},{name:"let_term$ebnf$1",symbols:["let_term$ebnf$1","let_term$ebnf$1$subexpression$1"],postprocess:function(u){return u[0].concat([u[1]])}},{name:"let_term",symbols:[{literal:"let"},"_","let_declarations","_","let_term$ebnf$1",{literal:"in"},"_","term"],postprocess:([u,,E,,,,,ee])=>te(E,ee,f(p(u).span,ee.span))},{name:"let_declarations$ebnf$1",symbols:[]},{name:"let_declarations$ebnf$1",symbols:["let_declarations$ebnf$1","let_declarations_tail"],postprocess:function(u){return u[0].concat([u[1]])}},{name:"let_declarations",symbols:["declaration","let_declarations$ebnf$1"],postprocess:([u,E])=>[u,...E]},{name:"let_declarations_tail",symbols:["_",{literal:";"},"_","declaration"],postprocess:([,,,u])=>u},{name:"declaration",symbols:["variable_declaration"],postprocess:s},{name:"variable_declaration",symbols:["identifier_token","_",{literal:"="},"_","term"],postprocess:([u,,,,E])=>ce(u,E)},{name:"do_term",symbols:[{literal:"do"},"_","block_statement"],postprocess:([u,,E])=>ne(E,f(p(u).span,E.span))},{name:"conditional_term",symbols:[{literal:"if"},"_",{literal:"("},"_","term","_",{literal:")"},"_","term","_","branch_term"],postprocess:([u,,,,E,,,,ee,,De])=>ye(E,ee,De,f(p(u).span,De.span))},{name:"branch_term",symbols:[{literal:"elif"},"_",{literal:"("},"_","term","_",{literal:")"},"_","term","_","branch_term"],postprocess:([u,,,,E,,,,ee,,De])=>d(E,ee,De,f(p(u).span,De.span))},{name:"branch_term",symbols:[{literal:"else"},"_","term"],postprocess:([u,,E])=>w(E,f(p(u).span,E.span))},{name:"statement",symbols:["assignment_statement"],postprocess:s},{name:"statement",symbols:["call_statement"],postprocess:s},{name:"statement",symbols:["return_statement"],postprocess:s},{name:"statement",symbols:["block_statement"],postprocess:s},{name:"statement",symbols:["if_statement"],postprocess:s},{name:"statement",symbols:["while_statement"],postprocess:s},{name:"statement",symbols:["do_while_statement"],postprocess:s},{name:"statement",symbols:["for_statement"],postprocess:s},{name:"assignment_statement",symbols:["identifier_token","_",{literal:"="},"_","term"],postprocess:([u,,,,E])=>$(u,E)},{name:"call_statement$ebnf$1",symbols:[]},{name:"call_statement$ebnf$1$subexpression$1",symbols:[{literal:","},"_"]},{name:"call_statement$ebnf$1",symbols:["call_statement$ebnf$1","call_statement$ebnf$1$subexpression$1"],postprocess:function(u){return u[0].concat([u[1]])}},{name:"call_statement",symbols:["aterm","_",{literal:"("},"_","call_arguments","_","call_statement$ebnf$1",{literal:")"}],postprocess:([u,,,,E,,,ee])=>O(u,E,f(u.span,p(ee).span))},{name:"return_statement",symbols:[{literal:"return"},"_","term"],postprocess:([u,,E])=>D(E,f(p(u).span,E.span))},{name:"block_statement$ebnf$1",symbols:["statement_list"],postprocess:s},{name:"block_statement$ebnf$1",symbols:[],postprocess:function(u){return null}},{name:"block_statement$ebnf$2",symbols:[]},{name:"block_statement$ebnf$2$subexpression$1",symbols:[{literal:";"},"_"]},{name:"block_statement$ebnf$2",symbols:["block_statement$ebnf$2","block_statement$ebnf$2$subexpression$1"],postprocess:function(u){return u[0].concat([u[1]])}},{name:"block_statement",symbols:[{literal:"{"},"_","block_statement$ebnf$1","_","block_statement$ebnf$2",{literal:"}"}],postprocess:([u,,E,,,ee])=>V(E,f(p(u).span,p(ee).span))},{name:"statement_list$ebnf$1",symbols:[]},{name:"statement_list$ebnf$1",symbols:["statement_list$ebnf$1","statement_list_tail"],postprocess:function(u){return u[0].concat([u[1]])}},{name:"statement_list",symbols:["statement","statement_list$ebnf$1"],postprocess:([u,E])=>[u,...E]},{name:"statement_list_tail",symbols:["_",{literal:";"},"_","statement"],postprocess:([,,,u])=>u},{name:"if_statement$ebnf$1",symbols:["branch_statement"],postprocess:s},{name:"if_statement$ebnf$1",symbols:[],postprocess:function(u){return null}},{name:"if_statement",symbols:[{literal:"if"},"_",{literal:"("},"_","term","_",{literal:")"},"_","statement","_","if_statement$ebnf$1"],postprocess:u=>H(u[4],u[8],u[10],f(p(u[0]).span,u[10]?u[10].span:u[8].span))},{name:"branch_statement$ebnf$1",symbols:["branch_statement"],postprocess:s},{name:"branch_statement$ebnf$1",symbols:[],postprocess:function(u){return null}},{name:"branch_statement",symbols:[{literal:"elif"},"_",{literal:"("},"_","term","_",{literal:")"},"_","statement","_","branch_statement$ebnf$1"],postprocess:u=>me(u[4],u[8],u[10],f(p(u[0]).span,u[10]?u[10].span:u[8].span))},{name:"branch_statement",symbols:[{literal:"else"},"_","term"],postprocess:u=>I(u[2],f(p(u[0]).span,u[2].span))},{name:"while_statement",symbols:[{literal:"while"},"_",{literal:"("},"_","term","_",{literal:")"},"_","statement"],postprocess:u=>ge(u[4],u[8],f(p(u[0]).span,u[8].span))},{name:"do_while_statement",symbols:[{literal:"do"},"_","statement","_",{literal:"while"},"_",{literal:"("},"_","term","_",{literal:")"}],postprocess:u=>tt(u[2],u[8],f(p(u[0]).span,p(u[10]).span))},{name:"for_statement",symbols:[{literal:"for"},"_",{literal:"("},"_","term","_",{literal:";"},"_","term","_",{literal:";"},"_","term","_",{literal:")"},"_","statement"],postprocess:u=>be(u[4],u[8],u[12],u[16],f(p(u[0]).span,u[16].span))}],ParserStart:"main"};typeof t!="undefined"&&typeof t.exports!="undefined"?t.exports=Je:window.grammar=Je})()}}),lf=Or(In()),of=Or(In()),dn=Or(Bn()),af=of.Grammar.fromCompiled(dn.default);function ec(e,t){return{term:e,warnings:t}}function tc(e,...t){return{term:null,errors:t,warnings:e}}function rc(e){let t=new lf.Parser(af),s=[];try{t.feed(e)}catch(c){let f="";c&&c.stack&&c.message&&(f=` Error message: ${c.message}`);let p=`Parser failed!${f}`,k=new Error(p);return tc(s,k)}if(!t.results||!Array.isArray(t.results)||t.results.length==0){let c=new Error("No parse results were recovered.");return tc(s,c)}if(t.results.length>1){let c=new Error("Ambiguous grammar encountered! Resolving first result.");s.push(c)}let o=t.results[0];return ec(o,s)}os();function qr(...e){return{source:null,errors:e}}function uf(e){return{source:e}}function cf(e){let t=rc(e);if(t.errors||!t.term)return qr(...t.errors);let s=rf(t.term);return s.errors||!s.source?qr(...s.errors):uf(s.source)}function Yo(...e){return{value:null,errors:e}}function ff(e){return{value:e}}function vr(e){let t="";e&&e.stack&&e.message&&(t=` Error message: ${e.message}`);let s=`Evaluation failed!${t}`;return new Error(s)}function Jo(e){let t=cf(e);if(t.errors||!t.source)return Yo(...t.errors);let s=t.source,o=null;try{o=(0,eval)(s)}catch(c){return Yo(vr(c))}return ff(o)}var mf=Object.create,Lr=Object.defineProperty,dl=Object.getOwnPropertyDescriptor,yn=Object.getOwnPropertyNames,Qo=Object.getPrototypeOf,Xo=Object.prototype.hasOwnProperty,yl=(e,t)=>function(){return e&&(t=(0,e[yn(e)[0]])(e=0)),t},vl=(e,t)=>function(){return t||(0,e[yn(e)[0]])((t={exports:{}}).exports,t),t.exports},nc=(e,t)=>{for(var s in t)Lr(e,s,{get:t[s],enumerable:!0})},ps=(e,t,s,o)=>{if(t&&typeof t=="object"||typeof t=="function")for(let c of yn(t))!Xo.call(e,c)&&c!==s&&Lr(e,c,{get:()=>t[c],enumerable:!(o=dl(t,c))||o.enumerable});return e},vn=(e,t,s)=>(s=e!=null?mf(Qo(e)):{},ps(t||!e||!e.__esModule?Lr(s,"default",{value:e,enumerable:!0}):s,e)),Ko=e=>ps(Lr({},"__esModule",{value:!0}),e),gl=vl({"../../node_modules/.pnpm/nearley@2.20.1/node_modules/nearley/lib/nearley.js"(e,t){(function(s,o){typeof t=="object"&&t.exports?t.exports=o():s.nearley=o()})(e,function(){function s(h,v,S){return this.id=++s.highestId,this.name=h,this.symbols=v,this.postprocess=S,this}s.highestId=0,s.prototype.toString=function(h){var v=typeof h=="undefined"?this.symbols.map(W).join(" "):this.symbols.slice(0,h).map(W).join(" ")+" \u25CF "+this.symbols.slice(h).map(W).join(" ");return this.name+" \u2192 "+v};function o(h,v,S,x){this.rule=h,this.dot=v,this.reference=S,this.data=[],this.wantedBy=x,this.isComplete=this.dot===h.symbols.length}o.prototype.toString=function(){return"{"+this.rule.toString(this.dot)+"}, from: "+(this.reference||0)},o.prototype.nextState=function(h){var v=new o(this.rule,this.dot+1,this.reference,this.wantedBy);return v.left=this,v.right=h,v.isComplete&&(v.data=v.build(),v.right=void 0),v},o.prototype.build=function(){var h=[],v=this;do h.push(v.right.data),v=v.left;while(v.left);return h.reverse(),h},o.prototype.finish=function(){this.rule.postprocess&&(this.data=this.rule.postprocess(this.data,this.reference,k.fail))};function c(h,v){this.grammar=h,this.index=v,this.states=[],this.wants={},this.scannable=[],this.completed={}}c.prototype.process=function(h){for(var v=this.states,S=this.wants,x=this.completed,j=0;j<v.length;j++){var A=v[j];if(A.isComplete){if(A.finish(),A.data!==k.fail){for(var K=A.wantedBy,te=K.length;te--;){var ce=K[te];this.complete(ce,A)}if(A.reference===this.index){var G=A.rule.name;(this.completed[G]=this.completed[G]||[]).push(A)}}}else{var G=A.rule.symbols[A.dot];if(typeof G!="string"){this.scannable.push(A);continue}if(S[G]){if(S[G].push(A),x.hasOwnProperty(G))for(var le=x[G],te=0;te<le.length;te++){var Pe=le[te];this.complete(A,Pe)}}else S[G]=[A],this.predict(G)}}},c.prototype.predict=function(h){for(var v=this.grammar.byName[h]||[],S=0;S<v.length;S++){var x=v[S],j=this.wants[h],A=new o(x,0,this.index,j);this.states.push(A)}},c.prototype.complete=function(h,v){var S=h.nextState(v);this.states.push(S)};function f(h,v){this.rules=h,this.start=v||this.rules[0].name;var S=this.byName={};this.rules.forEach(function(x){S.hasOwnProperty(x.name)||(S[x.name]=[]),S[x.name].push(x)})}f.fromCompiled=function(x,v){var S=x.Lexer;x.ParserStart&&(v=x.ParserStart,x=x.ParserRules);var x=x.map(function(A){return new s(A.name,A.symbols,A.postprocess)}),j=new f(x,v);return j.lexer=S,j};function p(){this.reset("")}p.prototype.reset=function(h,v){this.buffer=h,this.index=0,this.line=v?v.line:1,this.lastLineBreak=v?-v.col:0},p.prototype.next=function(){if(this.index<this.buffer.length){var h=this.buffer[this.index++];return h===`
`&&(this.line+=1,this.lastLineBreak=this.index),{value:h}}},p.prototype.save=function(){return{line:this.line,col:this.index-this.lastLineBreak}},p.prototype.formatError=function(h,v){var S=this.buffer;if(typeof S=="string"){var x=S.split(`
`).slice(Math.max(0,this.line-5),this.line),j=S.indexOf(`
`,this.index);j===-1&&(j=S.length);var A=this.index-this.lastLineBreak,K=String(this.line).length;return v+=" at line "+this.line+" col "+A+`:

`,v+=x.map(function(ce,G){return te(this.line-x.length+G+1,K)+" "+ce},this).join(`
`),v+=`
`+te("",K+A)+`^
`,v}else return v+" at index "+(this.index-1);function te(ce,G){var le=String(ce);return Array(G-le.length+1).join(" ")+le}};function k(h,v,S){if(h instanceof f)var x=h,S=v;else var x=f.fromCompiled(h,v);this.grammar=x,this.options={keepHistory:!1,lexer:x.lexer||new p};for(var j in S||{})this.options[j]=S[j];this.lexer=this.options.lexer,this.lexerState=void 0;var A=new c(x,0),K=this.table=[A];A.wants[x.start]=[],A.predict(x.start),A.process(),this.current=0}k.fail={},k.prototype.feed=function(h){var v=this.lexer;v.reset(h,this.lexerState);for(var S;;){try{if(S=v.next(),!S)break}catch(ne){var K=new c(this.grammar,this.current+1);this.table.push(K);var x=new Error(this.reportLexerError(ne));throw x.offset=this.current,x.token=ne.token,x}var j=this.table[this.current];this.options.keepHistory||delete this.table[this.current-1];var A=this.current+1,K=new c(this.grammar,A);this.table.push(K);for(var te=S.text!==void 0?S.text:S.value,ce=v.constructor===p?S.value:S,G=j.scannable,le=G.length;le--;){var Pe=G[le],re=Pe.rule.symbols[Pe.dot];if(re.test?re.test(ce):re.type?re.type===S.type:re.literal===te){var _e=Pe.nextState({data:ce,token:S,isToken:!0,reference:A-1});K.states.push(_e)}}if(K.process(),K.states.length===0){var x=new Error(this.reportError(S));throw x.offset=this.current,x.token=S,x}this.options.keepHistory&&(j.lexerState=v.save()),this.current++}return j&&(this.lexerState=v.save()),this.results=this.finish(),this},k.prototype.reportLexerError=function(h){var v,S,x=h.token;return x?(v="input "+JSON.stringify(x.text[0])+" (lexer error)",S=this.lexer.formatError(x,"Syntax error")):(v="input (lexer error)",S=h.message),this.reportErrorCommon(S,v)},k.prototype.reportError=function(h){var v=(h.type?h.type+" token: ":"")+JSON.stringify(h.value!==void 0?h.value:h),S=this.lexer.formatError(h,"Syntax error");return this.reportErrorCommon(S,v)},k.prototype.reportErrorCommon=function(h,v){var S=[];S.push(h);var x=this.table.length-2,j=this.table[x],A=j.states.filter(function(te){var ce=te.rule.symbols[te.dot];return ce&&typeof ce!="string"});if(A.length===0)S.push("Unexpected "+v+`. I did not expect any more input. Here is the state of my parse table:
`),this.displayStateStack(j.states,S);else{S.push("Unexpected "+v+`. Instead, I was expecting to see one of the following:
`);var K=A.map(function(te){return this.buildFirstStateStack(te,[])||[te]},this);K.forEach(function(te){var ce=te[0],G=ce.rule.symbols[ce.dot],le=this.getSymbolDisplay(G);S.push("A "+le+" based on:"),this.displayStateStack(te,S)},this)}return S.push(""),S.join(`
`)},k.prototype.displayStateStack=function(h,v){for(var S,x=0,j=0;j<h.length;j++){var A=h[j],K=A.rule.toString(A.dot);K===S?x++:(x>0&&v.push("    ^ "+x+" more lines identical to this"),x=0,v.push("    "+K)),S=K}},k.prototype.getSymbolDisplay=function(h){return R(h)},k.prototype.buildFirstStateStack=function(h,v){if(v.indexOf(h)!==-1)return null;if(h.wantedBy.length===0)return[h];var S=h.wantedBy[0],x=[h].concat(v),j=this.buildFirstStateStack(S,x);return j===null?null:[h].concat(j)},k.prototype.save=function(){var h=this.table[this.current];return h.lexerState=this.lexerState,h},k.prototype.restore=function(h){var v=h.index;this.current=v,this.table[v]=h,this.table.splice(v+1),this.lexerState=h.lexerState,this.results=this.finish()},k.prototype.rewind=function(h){if(!this.options.keepHistory)throw new Error("set option `keepHistory` to enable rewinding");this.restore(this.table[h])},k.prototype.finish=function(){var h=[],v=this.grammar.start,S=this.table[this.table.length-1];return S.states.forEach(function(x){x.rule.name===v&&x.dot===x.rule.symbols.length&&x.reference===0&&x.data!==k.fail&&h.push(x)}),h.map(function(x){return x.data})};function R(h){var v=typeof h;if(v==="string")return h;if(v==="object"){if(h.literal)return JSON.stringify(h.literal);if(h instanceof RegExp)return"character matching "+h;if(h.type)return h.type+" token";if(h.test)return"token matching "+String(h.test);throw new Error("Unknown symbol type: "+h)}}function W(h){var v=typeof h;if(v==="string")return h;if(v==="object"){if(h.literal)return JSON.stringify(h.literal);if(h instanceof RegExp)return h.toString();if(h.type)return"%"+h.type;if(h.test)return"<"+String(h.test)+">";throw new Error("Unknown symbol type: "+h)}}return{Parser:k,Grammar:f,Rule:s}})}}),pf=vl({"../../node_modules/.pnpm/moo@0.5.1/node_modules/moo/moo.js"(e,t){(function(s,o){typeof define=="function"&&Ke.amdO?define([],o):typeof t=="object"&&t.exports?t.exports=o():s.moo=o()})(e,function(){"use strict";var s=Object.prototype.hasOwnProperty,o=Object.prototype.toString,c=typeof new RegExp().sticky=="boolean";function f(d){return d&&o.call(d)==="[object RegExp]"}function p(d){return d&&typeof d=="object"&&!f(d)&&!Array.isArray(d)}function k(d){return d.replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&")}function R(d){var w=new RegExp("|"+d);return w.exec("").length-1}function W(d){return"("+d+")"}function h(d){if(!d.length)return"(?!)";var w=d.map(function($){return"(?:"+$+")"}).join("|");return"(?:"+w+")"}function v(d){if(typeof d=="string")return"(?:"+k(d)+")";if(f(d)){if(d.ignoreCase)throw new Error("RegExp /i flag not allowed");if(d.global)throw new Error("RegExp /g flag is implied");if(d.sticky)throw new Error("RegExp /y flag is implied");if(d.multiline)throw new Error("RegExp /m flag is implied");return d.source}else throw new Error("Not a pattern: "+d)}function S(d){for(var w=Object.getOwnPropertyNames(d),$=[],O=0;O<w.length;O++){var D=w[O],V=d[D],H=[].concat(V);if(D==="include"){for(var fe=0;fe<H.length;fe++)$.push({include:H[fe]});continue}var me=[];H.forEach(function(I){p(I)?(me.length&&$.push(j(D,me)),$.push(j(D,I)),me=[]):me.push(I)}),me.length&&$.push(j(D,me))}return $}function x(d){for(var w=[],$=0;$<d.length;$++){var O=d[$];if(O.include){for(var D=[].concat(O.include),V=0;V<D.length;V++)w.push({include:D[V]});continue}if(!O.type)throw new Error("Rule has no type: "+JSON.stringify(O));w.push(j(O.type,O))}return w}function j(d,w){if(p(w)||(w={match:w}),w.include)throw new Error("Matching rules cannot also include states");var $={defaultType:d,lineBreaks:!!w.error||!!w.fallback,pop:!1,next:null,push:null,error:!1,fallback:!1,value:null,type:null,shouldThrow:!1};for(var O in w)s.call(w,O)&&($[O]=w[O]);if(typeof $.type=="string"&&d!==$.type)throw new Error("Type transform cannot be a string (type '"+$.type+"' for token '"+d+"')");var D=$.match;return $.match=Array.isArray(D)?D:D?[D]:[],$.match.sort(function(V,H){return f(V)&&f(H)?0:f(H)?-1:f(V)?1:H.length-V.length}),$}function A(d){return Array.isArray(d)?x(d):S(d)}var K=j("error",{lineBreaks:!0,shouldThrow:!0});function te(d,w){for(var $=null,O=Object.create(null),D=!0,V=null,H=[],fe=[],me=0;me<d.length;me++)d[me].fallback&&(D=!1);for(var me=0;me<d.length;me++){var I=d[me];if(I.include)throw new Error("Inheritance is not allowed in stateless lexers");if(I.error||I.fallback){if($)throw!I.fallback==!$.fallback?new Error("Multiple "+(I.fallback?"fallback":"error")+" rules not allowed (for token '"+I.defaultType+"')"):new Error("fallback and error are mutually exclusive (for token '"+I.defaultType+"')");$=I}var ge=I.match.slice();if(D)for(;ge.length&&typeof ge[0]=="string"&&ge[0].length===1;){var tt=ge.shift();O[tt.charCodeAt(0)]=I}if(I.pop||I.push||I.next){if(!w)throw new Error("State-switching options are not allowed in stateless lexers (for token '"+I.defaultType+"')");if(I.fallback)throw new Error("State-switching options are not allowed on fallback tokens (for token '"+I.defaultType+"')")}if(ge.length!==0){D=!1,H.push(I);for(var be=0;be<ge.length;be++){var we=ge[be];if(!!f(we)){if(V===null)V=we.unicode;else if(V!==we.unicode&&I.fallback===!1)throw new Error("If one rule is /u then all must be")}}var Je=h(ge.map(v)),u=new RegExp(Je);if(u.test(""))throw new Error("RegExp matches empty string: "+u);var E=R(Je);if(E>0)throw new Error("RegExp has capture groups: "+u+`
Use (?: \u2026 ) instead`);if(!I.lineBreaks&&u.test(`
`))throw new Error("Rule should declare lineBreaks: "+u);fe.push(W(Je))}}var ee=$&&$.fallback,De=c&&!ee?"ym":"gm",Wt=c||ee?"":"|";V===!0&&(De+="u");var Gr=new RegExp(h(fe)+Wt,De);return{regexp:Gr,groups:H,fast:O,error:$||K}}function ce(d){var w=te(A(d));return new re({start:w},"start")}function G(d,w,$){var O=d&&(d.push||d.next);if(O&&!$[O])throw new Error("Missing state '"+O+"' (in token '"+d.defaultType+"' of state '"+w+"')");if(d&&d.pop&&+d.pop!=1)throw new Error("pop must be 1 (in token '"+d.defaultType+"' of state '"+w+"')")}function le(d,w){var $=d.$all?A(d.$all):[];delete d.$all;var O=Object.getOwnPropertyNames(d);w||(w=O[0]);for(var D=Object.create(null),V=0;V<O.length;V++){var H=O[V];D[H]=A(d[H]).concat($)}for(var V=0;V<O.length;V++)for(var H=O[V],fe=D[H],me=Object.create(null),I=0;I<fe.length;I++){var ge=fe[I];if(!!ge.include){var tt=[I,1];if(ge.include!==H&&!me[ge.include]){me[ge.include]=!0;var be=D[ge.include];if(!be)throw new Error("Cannot include nonexistent state '"+ge.include+"' (in state '"+H+"')");for(var we=0;we<be.length;we++){var Je=be[we];fe.indexOf(Je)===-1&&tt.push(Je)}}fe.splice.apply(fe,tt),I--}}for(var u=Object.create(null),V=0;V<O.length;V++){var H=O[V];u[H]=te(D[H],!0)}for(var V=0;V<O.length;V++){for(var E=O[V],ee=u[E],De=ee.groups,I=0;I<De.length;I++)G(De[I],E,u);for(var Wt=Object.getOwnPropertyNames(ee.fast),I=0;I<Wt.length;I++)G(ee.fast[Wt[I]],E,u)}return new re(u,w)}function Pe(d){for(var w=Object.create(null),$=Object.create(null),O=Object.getOwnPropertyNames(d),D=0;D<O.length;D++){var V=O[D],H=d[V],fe=Array.isArray(H)?H:[H];fe.forEach(function(be){if(($[be.length]=$[be.length]||[]).push(be),typeof be!="string")throw new Error("keyword must be string (in keyword '"+V+"')");w[be]=V})}function me(be){return JSON.stringify(be)}var I="";I+=`switch (value.length) {
`;for(var ge in $){var tt=$[ge];I+="case "+ge+`:
`,I+=`switch (value) {
`,tt.forEach(function(be){var we=w[be];I+="case "+me(be)+": return "+me(we)+`
`}),I+=`}
`}return I+=`}
`,Function("value",I)}var re=function(d,w){this.startState=w,this.states=d,this.buffer="",this.stack=[],this.reset()};re.prototype.reset=function(d,w){return this.buffer=d||"",this.index=0,this.line=w?w.line:1,this.col=w?w.col:1,this.queuedToken=w?w.queuedToken:null,this.queuedThrow=w?w.queuedThrow:null,this.setState(w?w.state:this.startState),this.stack=w&&w.stack?w.stack.slice():[],this},re.prototype.save=function(){return{line:this.line,col:this.col,state:this.state,stack:this.stack.slice(),queuedToken:this.queuedToken,queuedThrow:this.queuedThrow}},re.prototype.setState=function(d){if(!(!d||this.state===d)){this.state=d;var w=this.states[d];this.groups=w.groups,this.error=w.error,this.re=w.regexp,this.fast=w.fast}},re.prototype.popState=function(){this.setState(this.stack.pop())},re.prototype.pushState=function(d){this.stack.push(this.state),this.setState(d)};var _e=c?function(d,w){return d.exec(w)}:function(d,w){var $=d.exec(w);return $[0].length===0?null:$};re.prototype._getGroup=function(d){for(var w=this.groups.length,$=0;$<w;$++)if(d[$+1]!==void 0)return this.groups[$];throw new Error("Cannot find token type for matched text")};function ne(){return this.value}if(re.prototype.next=function(){var d=this.index;if(this.queuedGroup){var w=this._token(this.queuedGroup,this.queuedText,d);return this.queuedGroup=null,this.queuedText="",w}var $=this.buffer;if(d!==$.length){var H=this.fast[$.charCodeAt(d)];if(H)return this._token(H,$.charAt(d),d);var O=this.re;O.lastIndex=d;var D=_e(O,$),V=this.error;if(D==null)return this._token(V,$.slice(d,$.length),d);var H=this._getGroup(D),fe=D[0];return V.fallback&&D.index!==d?(this.queuedGroup=H,this.queuedText=fe,this._token(V,$.slice(d,D.index),d)):this._token(H,fe,d)}},re.prototype._token=function(d,w,$){var O=0;if(d.lineBreaks){var D=/\n/g,V=1;if(w===`
`)O=1;else for(;D.exec(w);)O++,V=D.lastIndex}var H={type:typeof d.type=="function"&&d.type(w)||d.defaultType,value:typeof d.value=="function"?d.value(w):w,text:w,toString:ne,offset:$,lineBreaks:O,line:this.line,col:this.col},fe=w.length;if(this.index+=fe,this.line+=O,O!==0?this.col=fe-V+1:this.col+=fe,d.shouldThrow)throw new Error(this.formatError(H,"invalid syntax"));return d.pop?this.popState():d.push?this.pushState(d.push):d.next&&this.setState(d.next),H},typeof Symbol!="undefined"&&Symbol.iterator){var ye=function(d){this.lexer=d};ye.prototype.next=function(){var d=this.lexer.next();return{value:d,done:!d}},ye.prototype[Symbol.iterator]=function(){return this},re.prototype[Symbol.iterator]=function(){return new ye(this)}}return re.prototype.formatError=function(d,w){if(d==null)var $=this.buffer.slice(this.index),d={text:$,offset:this.index,lineBreaks:$.indexOf(`
`)===-1?0:1,line:this.line,col:this.col};var O=Math.max(0,d.offset-d.col+1),D=d.lineBreaks?d.text.indexOf(`
`):d.text.length,V=this.buffer.substring(O,d.offset+D);return w+=" at line "+d.line+" col "+d.col+`:

`,w+="  "+V+`
`,w+="  "+Array(d.col).join(" ")+"^",w},re.prototype.clone=function(){return new re(this.states,this.state)},re.prototype.has=function(d){return!0},{compile:ce,states:le,error:Object.freeze({error:!0}),fallback:Object.freeze({fallback:!0}),keywords:Pe}})}}),di=vl({"../syntax/lib/index.cjs"(e,t){var s=Object.defineProperty,o=Object.getOwnPropertyDescriptor,c=Object.getOwnPropertyNames,f=Object.prototype.hasOwnProperty,p=(b,_)=>{for(var F in _)s(b,F,{get:_[F],enumerable:!0})},k=(b,_,F,Le)=>{if(_&&typeof _=="object"||typeof _=="function")for(let rt of c(_))!f.call(b,rt)&&rt!==F&&s(b,rt,{get:()=>_[rt],enumerable:!(Le=o(_,rt))||Le.enumerable});return b},R=b=>k(s({},"__esModule",{value:!0}),b),W={};p(W,{ArrayTerm:()=>fe,AssignmentStatement:()=>u,AssignmentTerm:()=>w,BlockStatement:()=>De,BooleanValue:()=>_e,CallStatement:()=>E,CallTerm:()=>O,ConditionalTerm:()=>be,DoTerm:()=>tt,DoWhileStatement:()=>sa,ElifStatement:()=>Gr,ElifTerm:()=>we,ElseStatement:()=>na,ElseTerm:()=>Je,ErrorTerm:()=>ne,ForStatement:()=>la,IfStatement:()=>Wt,IndexAccessTerm:()=>ge,LambdaTerm:()=>$,LetTerm:()=>D,MemberAccessTerm:()=>I,Merge:()=>te,NullValue:()=>le,NumberValue:()=>Pe,ObjectTerm:()=>me,ParentheticalTerm:()=>H,ReturnStatement:()=>ee,Span:()=>K,StringValue:()=>re,TextSpan:()=>G,ValueTerm:()=>ye,VariableDeclaration:()=>V,VariableTerm:()=>d,WhileStatement:()=>ia,lines:()=>ce,resolveFree:()=>S,resolveFreeStatement:()=>A,resolveFreeTerm:()=>j}),t.exports=R(W);function h(b){return b.tag.endsWith("Term")}function v(b){return b.tag.endsWith("Statement")}function S(b){const _=x();return h(b)?j(b,_):v(b)?A(b,_):[]}function x(){return{bound:[new Set]}}function j(b,_){return[]}function A(b,_){return[]}function K(b,_,F,Le){return{type:"Span",line:{start:b,end:_},column:{start:F,end:Le}}}function te(b,_){return{type:"Span",line:{start:b.line.start,end:_.line.end},column:{start:b.column.start,end:_.column.end}}}var ce=b=>b.split(/\r\n|\r|\n/);function G(b,_,F){const Le=b.length;if(Le==0)return K(_,_,F,F);const rt=ce(b),Yr=rt.length;if(Yr<=1)return K(_,_,F,F+Le);const oa=rt[Yr-1],aa=F+oa.length,ua=_+Yr-1;return K(_,ua,F,aa)}function le(b){return{tag:"NullValue",span:b}}function Pe(b,_){return{tag:"NumberValue",num:b,span:_}}function re(b,_){return{tag:"StringValue",str:b,span:_}}function _e(b,_){return{tag:"BooleanValue",bool:b,span:_}}function ne(b,_){return{tag:"ErrorTerm",msg:b,span:_}}function ye(b,_){return{tag:"ValueTerm",value:b,span:_}}function d(b,_){return{tag:"VariableTerm",variable:b,span:_}}function w(b,_,F){return{tag:"AssignmentTerm",lhs:b,rhs:_,span:F}}function $(b,_,F){return{tag:"LambdaTerm",args:b,body:_,span:F}}function O(b,_,F){return{tag:"CallTerm",func:b,args:_,span:F}}function D(b,_,F){return{tag:"LetTerm",declarations:b,body:_,span:F}}function V(b,_,F){return{tag:"VariableDeclaration",variable:b,body:_,span:F}}function H(b,_){return{tag:"ParentheticalTerm",term:b,span:_}}function fe(b,_){return{tag:"ArrayTerm",elements:b,span:_}}function me(b,_){return{tag:"ObjectTerm",entries:b,span:_}}function I(b,_,F){return{tag:"MemberAccessTerm",object:b,member:_,span:F}}function ge(b,_,F){return{tag:"IndexAccessTerm",array:b,index:_,span:F}}function tt(b,_){return{tag:"DoTerm",block:b,span:_}}function be(b,_,F,Le){return{tag:"ConditionalTerm",condition:b,body:_,branch:F,span:Le}}function we(b,_,F,Le){return{tag:"ElifTerm",condition:b,body:_,branch:F,span:Le}}function Je(b,_){return{tag:"ElseTerm",body:b,span:_}}function u(b,_,F){return{tag:"AssignmentStatement",lhs:b,rhs:_,span:F}}function E(b,_,F){return{tag:"CallStatement",func:b,args:_,span:F}}function ee(b,_){return{tag:"ReturnStatement",result:b,span:_}}function De(b,_){return{tag:"BlockStatement",statements:b,span:_}}function Wt(b,_,F,Le){return{tag:"IfStatement",condition:b,body:_,branch:F,span:Le}}function Gr(b,_,F,Le){return{tag:"ElifStatement",condition:b,body:_,branch:F,span:Le}}function na(b,_){return{tag:"ElseStatement",body:b,span:_}}function ia(b,_,F){return{tag:"WhileStatement",condition:b,body:_,span:F}}function sa(b,_,F){return{tag:"DoWhileStatement",body:b,condition:_,span:F}}function la(b,_,F,Le,rt){return{tag:"ForStatement",declarations:b,condition:_,update:F,body:Le,span:rt}}}}),yi={};nc(yi,{SourceToken:()=>Zo,Token:()=>bl});function Zo(e){const t=e.text,s=e.line,o=e.col;return{type:"Token",text:t,span:(0,wl.TextSpan)(t,s,o)}}function bl(e,...t){const s=Zo(e),o=t.length;if(o<=0)return s;s.text+=t.map(k=>k.text).join("");const c=t[o-1],f=Zo(c),p=(0,wl.Merge)(s.span,f.span);return s.span=p,s}var wl,ic=yl({"src/coolscript/parser/token.ts"(){wl=vn(di())}}),vi={};nc(vi,{ArrayTerm:()=>Z,AssignmentStatement:()=>Q,AssignmentTerm:()=>g,BlockStatement:()=>Ie,CallStatement:()=>Me,CallTerm:()=>B,ConditionalTerm:()=>C,DoTerm:()=>N,DoWhileStatement:()=>qf,ElifStatement:()=>Be,ElifTerm:()=>L,ElseStatement:()=>gn,ElseTerm:()=>q,ErrorTerm:()=>a,FalseValue:()=>l,ForStatement:()=>Gf,IfStatement:()=>We,IndexAccessTerm:()=>je,LambdaTerm:()=>T,LetTerm:()=>de,MemberAccessTerm:()=>Ae,NullValue:()=>_l,NumberValue:()=>r,ObjectTerm:()=>Ee,ParentheticalTerm:()=>Ve,ReturnStatement:()=>xe,StringValue:()=>n,TrueValue:()=>i,ValueTerm:()=>m,VariableDeclaration:()=>hf,VariableTerm:()=>y,WhileStatement:()=>df});function hf(e,t){return et.VariableDeclaration(e.text,t,(0,ea.Merge)(e.span,t.span))}function _l(e){return et.NullValue(e.span)}function r(e){const t=parseFloat(e.text);return et.NumberValue(t,e.span)}function n(e){const t=e.text,s=t.substring(1,t.length-1);return et.StringValue(s,e.span)}function i(e){return et.BooleanValue(!0,e.span)}function l(e){return et.BooleanValue(!1,e.span)}function a(e,t){return et.ErrorTerm(e,t)}function m(e){return et.ValueTerm(e,e.span)}function y(e){return et.VariableTerm(e.text,e.span)}function g(e,t){return et.AssignmentTerm(e.text,t,(0,ea.Merge)(e.span,t.span))}function T(e,t,s){return et.LambdaTerm(e,t,s)}function B(e,t,s){return et.CallTerm(e,t,s)}function de(e,t,s){return et.LetTerm(e,t,s)}function Ve(e,t){return et.ParentheticalTerm(e,t)}function Z(e,t){return et.ArrayTerm(e,t)}function Ee(e,t){return et.ObjectTerm(e,t)}function Ae(e,t){return et.MemberAccessTerm(e,t.text,(0,ea.Merge)(e.span,t.span))}function je(e,t,s){return et.IndexAccessTerm(e,t,s)}function N(e,t){return et.DoTerm(e,t)}function C(e,t,s,o){return et.ConditionalTerm(e,t,s,o)}function L(e,t,s,o){return et.ElifTerm(e,t,s,o)}function q(e,t){return et.ElseTerm(e,t)}function Q(e,t){return et.AssignmentStatement(e.text,t,(0,ea.Merge)(e.span,t.span))}function Me(e,t,s){return et.CallStatement(e,t,s)}function xe(e,t){return et.ReturnStatement(e,t)}function Ie(e,t){return et.BlockStatement(e,t)}function We(e,t,s,o){return et.IfStatement(e,t,s,o)}function Be(e,t,s,o){return et.ElifStatement(e,t,s,o)}function gn(e,t){return et.ElseStatement(e,t)}function df(e,t,s){return et.WhileStatement(e,t,s)}function qf(e,t,s){return et.DoWhileStatement(e,t,s)}function Gf(e,t,s,o,c){return et.ForStatement(e,t,s,o,c)}var et,ea,Yf=yl({"src/coolscript/parser/parser-syntax-constructors.ts"(){et=vn(di()),ea=vn(di())}}),Jf=vl({"nearley:C:\\Users\\zetta\\code\\coolscript\\packages\\parser\\src\\coolscript\\parser\\grammar\\grammar.ne"(e,t){(function(){function s(u){return u[0]}const o=pf(),{Span:c,Merge:f}=di(),{Token:p}=(ic(),Ko(yi)),{NullValue:k,NumberValue:R,StringValue:W,TrueValue:h,FalseValue:v,ValueTerm:S,VariableTerm:x,AssignmentTerm:j,LambdaTerm:A,CallTerm:K,LetTerm:te,VariableDeclaration:ce,ParentheticalTerm:G,ArrayTerm:le,ObjectTerm:Pe,MemberAccessTerm:re,IndexAccessTerm:_e,DoTerm:ne,ConditionalTerm:ye,ElifTerm:d,ElseTerm:w,AssignmentStatement:$,CallStatement:O,ReturnStatement:D,BlockStatement:V,IfStatement:H,BranchStatement:fe,ElifStatement:me,ElseStatement:I,WhileStatement:ge,DoWhileStatement:tt,ForStatement:be}=(Yf(),Ko(vi)),we=o.compile({ws:/[ \t\v\f]+/,newline:{match:/[ \n]+/,lineBreaks:!0},comment:/\/\/.*?$/,identifier:/[a-zA-Z][a-zA-Z0-9]*/,number:/[0-9]+/,dqstring:{match:/"(?:\\["\\]|[^\n"\\])*"/,lineBreaks:!0},sqstring:{match:/'(?:\\['\\]|[^\n'\\])*'/,lineBreaks:!0},keyword:["null","true","false","error","let","in","do","if","else","elif","while","for",".","+","-","*","/","++","--","&&","||","==","!=","(",")","[","]","{","}",";",":",",","=","=>"]});var Je={Lexer:we,ParserRules:[{name:"main",symbols:["file"],postprocess:s},{name:"file",symbols:["_","term","_"],postprocess:([,u])=>u},{name:"_$ebnf$1",symbols:[we.has("ws")?{type:"ws"}:ws],postprocess:s},{name:"_$ebnf$1",symbols:[],postprocess:function(u){return null}},{name:"_",symbols:["_$ebnf$1"],postprocess:null},{name:"_",symbols:["_",we.has("comment")?{type:"comment"}:comment,"_"],postprocess:null},{name:"_",symbols:["_",we.has("newline")?{type:"newline"}:newline,"_"],postprocess:null},{name:"identifier_token",symbols:[we.has("identifier")?{type:"identifier"}:identifier],postprocess:([u])=>p(u)},{name:"null_token",symbols:[{literal:"null"}],postprocess:([u])=>p(u)},{name:"number_token",symbols:[we.has("number")?{type:"number"}:number],postprocess:([u])=>p(u)},{name:"number_token",symbols:[we.has("number")?{type:"number"}:number,{literal:"."},we.has("number")?{type:"number"}:number],postprocess:([u,E,ee])=>p(u,E,ee)},{name:"string_token",symbols:[we.has("sqstring")?{type:"sqstring"}:sqstring],postprocess:([u])=>p(u)},{name:"string_token",symbols:[we.has("dqstring")?{type:"dqstring"}:dqstring],postprocess:([u])=>p(u)},{name:"true_token",symbols:[{literal:"true"}],postprocess:([u])=>p(u)},{name:"false_token",symbols:[{literal:"false"}],postprocess:([u])=>p(u)},{name:"value",symbols:["null_value"],postprocess:s},{name:"value",symbols:["number_value"],postprocess:s},{name:"value",symbols:["boolean_value"],postprocess:s},{name:"value",symbols:["string_value"],postprocess:s},{name:"null_value",symbols:["null_token"],postprocess:([u])=>k(u)},{name:"number_value",symbols:["number_token"],postprocess:([u])=>R(u)},{name:"string_value",symbols:["string_token"],postprocess:([u])=>W(u)},{name:"boolean_value",symbols:["true_token"],postprocess:([u])=>h(u)},{name:"boolean_value",symbols:["false_token"],postprocess:([u])=>v(u)},{name:"term",symbols:["cterm"],postprocess:s},{name:"cterm",symbols:["let_term"],postprocess:s},{name:"cterm",symbols:["lambda_term"],postprocess:s},{name:"cterm",symbols:["do_term"],postprocess:s},{name:"cterm",symbols:["conditional_term"],postprocess:s},{name:"cterm",symbols:["assignment_term"],postprocess:s},{name:"cterm",symbols:["bterm"],postprocess:s},{name:"bterm",symbols:["call_term"],postprocess:s},{name:"bterm",symbols:["member_access_term"],postprocess:s},{name:"bterm",symbols:["index_access_term"],postprocess:s},{name:"bterm",symbols:["aterm"],postprocess:s},{name:"aterm",symbols:["value_term"],postprocess:s},{name:"aterm",symbols:["variable_term"],postprocess:s},{name:"aterm",symbols:["array_term"],postprocess:s},{name:"aterm",symbols:["object_term"],postprocess:s},{name:"aterm",symbols:["parenthetical_term"],postprocess:s},{name:"value_term",symbols:["value"],postprocess:([u])=>S(u)},{name:"variable_term",symbols:["identifier_token"],postprocess:([u])=>x(u)},{name:"assignment_term",symbols:["identifier_token","_",{literal:"="},"_","term"],postprocess:([u,,,,E])=>j(u,E)},{name:"lambda_term$ebnf$1",symbols:[]},{name:"lambda_term$ebnf$1$subexpression$1",symbols:[{literal:","},"_"]},{name:"lambda_term$ebnf$1",symbols:["lambda_term$ebnf$1","lambda_term$ebnf$1$subexpression$1"],postprocess:function(E){return E[0].concat([E[1]])}},{name:"lambda_term",symbols:[{literal:"("},"_","lambda_arguments","_","lambda_term$ebnf$1",{literal:")"},"_",{literal:"=>"},"_","term"],postprocess:([u,,E,,,,,,,ee])=>A(E,ee,f(p(u).span,ee.span))},{name:"lambda_arguments$ebnf$1",symbols:[]},{name:"lambda_arguments$ebnf$1",symbols:["lambda_arguments$ebnf$1","lambda_arguments_tail"],postprocess:function(E){return E[0].concat([E[1]])}},{name:"lambda_arguments",symbols:["identifier_token","lambda_arguments$ebnf$1"],postprocess:([u,E])=>[u.text,...E]},{name:"lambda_arguments_tail",symbols:["_",{literal:","},"_","identifier_token"],postprocess:([,,,u])=>u.text},{name:"call_term$ebnf$1",symbols:[]},{name:"call_term$ebnf$1$subexpression$1",symbols:[{literal:","},"_"]},{name:"call_term$ebnf$1",symbols:["call_term$ebnf$1","call_term$ebnf$1$subexpression$1"],postprocess:function(E){return E[0].concat([E[1]])}},{name:"call_term",symbols:["bterm","_",{literal:"("},"_","call_arguments","_","call_term$ebnf$1",{literal:")"}],postprocess:u=>K(u[0],u[4],f(u[0].span,p(u[7]).span))},{name:"call_arguments$ebnf$1",symbols:[]},{name:"call_arguments$ebnf$1",symbols:["call_arguments$ebnf$1","call_arguments_tail"],postprocess:function(E){return E[0].concat([E[1]])}},{name:"call_arguments",symbols:["bterm","call_arguments$ebnf$1"],postprocess:([u,E])=>[u,...E]},{name:"call_arguments_tail",symbols:["_",{literal:","},"_","bterm"],postprocess:([,,,u])=>u},{name:"parenthetical_term",symbols:[{literal:"("},"_","term","_",{literal:")"}],postprocess:([u,,E,,ee])=>G(E,f(p(u).span,p(ee).span))},{name:"array_term",symbols:[{literal:"["},"_",{literal:"]"}],postprocess:([u,,E])=>le([],f(p(u).span,p(E).span))},{name:"array_term$ebnf$1",symbols:[]},{name:"array_term$ebnf$1$subexpression$1",symbols:[{literal:","},"_"]},{name:"array_term$ebnf$1",symbols:["array_term$ebnf$1","array_term$ebnf$1$subexpression$1"],postprocess:function(E){return E[0].concat([E[1]])}},{name:"array_term",symbols:[{literal:"["},"_","array_term_elements","_","array_term$ebnf$1",{literal:"]"}],postprocess:([u,,E,,,ee])=>le(E,f(p(u).span,p(ee).span))},{name:"array_term_elements$ebnf$1",symbols:[]},{name:"array_term_elements$ebnf$1",symbols:["array_term_elements$ebnf$1","array_term_elements_tail"],postprocess:function(E){return E[0].concat([E[1]])}},{name:"array_term_elements",symbols:["term","array_term_elements$ebnf$1"],postprocess:([u,E])=>[u,...E]},{name:"array_term_elements_tail",symbols:["_",{literal:","},"_","term"],postprocess:([,,,u])=>u},{name:"object_term",symbols:[{literal:"{"},"_",{literal:"}"}],postprocess:()=>Pe({},f(p(t1).span,p(t2).span))},{name:"object_term$ebnf$1",symbols:[]},{name:"object_term$ebnf$1$subexpression$1",symbols:[{literal:","},"_"]},{name:"object_term$ebnf$1",symbols:["object_term$ebnf$1","object_term$ebnf$1$subexpression$1"],postprocess:function(E){return E[0].concat([E[1]])}},{name:"object_term",symbols:[{literal:"{"},"_","object_term_entries","_","object_term$ebnf$1",{literal:"}"}],postprocess:([u,,E,,,ee])=>Pe(Object.fromEntries(E),f(p(u).span,p(ee).span))},{name:"object_term_entries$ebnf$1",symbols:[]},{name:"object_term_entries$ebnf$1",symbols:["object_term_entries$ebnf$1","object_term_entries_tail"],postprocess:function(E){return E[0].concat([E[1]])}},{name:"object_term_entries",symbols:["object_term_entry","object_term_entries$ebnf$1"],postprocess:([u,E])=>[u,...E]},{name:"object_term_entries_tail",symbols:["_",{literal:","},"_","object_term_entry"],postprocess:([,,,u])=>u},{name:"object_term_entry",symbols:["identifier_token","_",{literal:":"},"_","term"],postprocess:([u,,,,E])=>[u.text,E]},{name:"member_access_term",symbols:["bterm","_",{literal:"."},"_","identifier_token"],postprocess:u=>re(u[0],u[4])},{name:"index_access_term",symbols:["bterm","_",{literal:"["},"_","bterm","_",{literal:"]"}],postprocess:([u,,,,E,,ee])=>_e(u,E,f(u.span,p(ee).span))},{name:"let_term$ebnf$1",symbols:[]},{name:"let_term$ebnf$1$subexpression$1",symbols:[{literal:";"},"_"]},{name:"let_term$ebnf$1",symbols:["let_term$ebnf$1","let_term$ebnf$1$subexpression$1"],postprocess:function(E){return E[0].concat([E[1]])}},{name:"let_term",symbols:[{literal:"let"},"_","let_declarations","_","let_term$ebnf$1",{literal:"in"},"_","term"],postprocess:([u,,E,,,,,ee])=>te(E,ee,f(p(u).span,ee.span))},{name:"let_declarations$ebnf$1",symbols:[]},{name:"let_declarations$ebnf$1",symbols:["let_declarations$ebnf$1","let_declarations_tail"],postprocess:function(E){return E[0].concat([E[1]])}},{name:"let_declarations",symbols:["declaration","let_declarations$ebnf$1"],postprocess:([u,E])=>[u,...E]},{name:"let_declarations_tail",symbols:["_",{literal:";"},"_","declaration"],postprocess:([,,,u])=>u},{name:"declaration",symbols:["variable_declaration"],postprocess:s},{name:"variable_declaration",symbols:["identifier_token","_",{literal:"="},"_","term"],postprocess:([u,,,,E])=>ce(u,E)},{name:"do_term",symbols:[{literal:"do"},"_","block_statement"],postprocess:([u,,E])=>ne(E,f(p(u).span,E.span))},{name:"conditional_term",symbols:[{literal:"if"},"_",{literal:"("},"_","term","_",{literal:")"},"_","term","_","branch_term"],postprocess:([u,,,,E,,,,ee,,De])=>ye(E,ee,De,f(p(u).span,De.span))},{name:"branch_term",symbols:[{literal:"elif"},"_",{literal:"("},"_","term","_",{literal:")"},"_","term","_","branch_term"],postprocess:([u,,,,E,,,,ee,,De])=>d(E,ee,De,f(p(u).span,De.span))},{name:"branch_term",symbols:[{literal:"else"},"_","term"],postprocess:([u,,E])=>w(E,f(p(u).span,E.span))},{name:"statement",symbols:["assignment_statement"],postprocess:s},{name:"statement",symbols:["call_statement"],postprocess:s},{name:"statement",symbols:["return_statement"],postprocess:s},{name:"statement",symbols:["block_statement"],postprocess:s},{name:"statement",symbols:["if_statement"],postprocess:s},{name:"statement",symbols:["while_statement"],postprocess:s},{name:"statement",symbols:["do_while_statement"],postprocess:s},{name:"statement",symbols:["for_statement"],postprocess:s},{name:"assignment_statement",symbols:["identifier_token","_",{literal:"="},"_","term"],postprocess:([u,,,,E])=>$(u,E)},{name:"call_statement$ebnf$1",symbols:[]},{name:"call_statement$ebnf$1$subexpression$1",symbols:[{literal:","},"_"]},{name:"call_statement$ebnf$1",symbols:["call_statement$ebnf$1","call_statement$ebnf$1$subexpression$1"],postprocess:function(E){return E[0].concat([E[1]])}},{name:"call_statement",symbols:["aterm","_",{literal:"("},"_","call_arguments","_","call_statement$ebnf$1",{literal:")"}],postprocess:([u,,,,E,,,ee])=>O(u,E,f(u.span,p(ee).span))},{name:"return_statement",symbols:[{literal:"return"},"_","term"],postprocess:([u,,E])=>D(E,f(p(u).span,E.span))},{name:"block_statement$ebnf$1",symbols:["statement_list"],postprocess:s},{name:"block_statement$ebnf$1",symbols:[],postprocess:function(u){return null}},{name:"block_statement$ebnf$2",symbols:[]},{name:"block_statement$ebnf$2$subexpression$1",symbols:[{literal:";"},"_"]},{name:"block_statement$ebnf$2",symbols:["block_statement$ebnf$2","block_statement$ebnf$2$subexpression$1"],postprocess:function(E){return E[0].concat([E[1]])}},{name:"block_statement",symbols:[{literal:"{"},"_","block_statement$ebnf$1","_","block_statement$ebnf$2",{literal:"}"}],postprocess:([u,,E,,,ee])=>V(E,f(p(u).span,p(ee).span))},{name:"statement_list$ebnf$1",symbols:[]},{name:"statement_list$ebnf$1",symbols:["statement_list$ebnf$1","statement_list_tail"],postprocess:function(E){return E[0].concat([E[1]])}},{name:"statement_list",symbols:["statement","statement_list$ebnf$1"],postprocess:([u,E])=>[u,...E]},{name:"statement_list_tail",symbols:["_",{literal:";"},"_","statement"],postprocess:([,,,u])=>u},{name:"if_statement$ebnf$1",symbols:["branch_statement"],postprocess:s},{name:"if_statement$ebnf$1",symbols:[],postprocess:function(u){return null}},{name:"if_statement",symbols:[{literal:"if"},"_",{literal:"("},"_","term","_",{literal:")"},"_","statement","_","if_statement$ebnf$1"],postprocess:u=>H(u[4],u[8],u[10],f(p(u[0]).span,u[10]?u[10].span:u[8].span))},{name:"branch_statement$ebnf$1",symbols:["branch_statement"],postprocess:s},{name:"branch_statement$ebnf$1",symbols:[],postprocess:function(u){return null}},{name:"branch_statement",symbols:[{literal:"elif"},"_",{literal:"("},"_","term","_",{literal:")"},"_","statement","_","branch_statement$ebnf$1"],postprocess:u=>me(u[4],u[8],u[10],f(p(u[0]).span,u[10]?u[10].span:u[8].span))},{name:"branch_statement",symbols:[{literal:"else"},"_","term"],postprocess:u=>I(u[2],f(p(u[0]).span,u[2].span))},{name:"while_statement",symbols:[{literal:"while"},"_",{literal:"("},"_","term","_",{literal:")"},"_","statement"],postprocess:u=>ge(u[4],u[8],f(p(u[0]).span,u[8].span))},{name:"do_while_statement",symbols:[{literal:"do"},"_","statement","_",{literal:"while"},"_",{literal:"("},"_","term","_",{literal:")"}],postprocess:u=>tt(u[2],u[8],f(p(u[0]).span,p(u[10]).span))},{name:"for_statement",symbols:[{literal:"for"},"_",{literal:"("},"_","term","_",{literal:";"},"_","term","_",{literal:";"},"_","term","_",{literal:")"},"_","statement"],postprocess:u=>be(u[4],u[8],u[12],u[16],f(p(u[0]).span,u[16].span))}],ParserStart:"main"};typeof t!="undefined"&&typeof t.exports!="undefined"?t.exports=Je:window.grammar=Je})()}}),Qf=vn(gl()),Xf=vn(gl()),Kf=vn(Jf()),Zf=Xf.Grammar.fromCompiled(Kf.default);function em(e,t){return{term:e,warnings:t}}function If(e,...t){return{term:null,errors:t,warnings:e}}function tm(e){const t=new Qf.Parser(Zf),s=[];try{t.feed(e)}catch(c){let f="";c&&c.stack&&c.message&&(f=` Error message: ${c.message}`);const p=`Parser failed!${f}`,k=new Error(p);return If(s,k)}if(!t.results||!Array.isArray(t.results)||t.results.length==0){const c=new Error("No parse results were recovered.");return If(s,c)}if(t.results.length>1){const c=new Error("Ambiguous grammar encountered! Resolving first result.");s.push(c)}const o=t.results[0];return em(o,s)}ic();function yf(){return Ws()}function rm(e){return{tag:"ReferenceValue",heapId:e}}function nm(e,t,s){return{tag:"LambdaValue",closure:e,args:t,body:s}}function im(e){return{tag:"ArrayValue",elements:e}}function sm(e){return{tag:"ObjectValue",entries:e}}function vf(e){return{tag:"ErrorValue",err:e}}function gf(e){switch(e.tag){case"NullValue":case"BooleanValue":case"NumberValue":case"StringValue":return Ln(e);case"ArrayValue":{let t=e.elements.map(s=>gf(s));return go(t)}case"ObjectValue":{let t=Object.entries(e.entries).map(([o,c])=>[o,gf(c)]),s=Object.fromEntries(t);return jn(s)}case"LambdaValue":{let t=e.args,s=e.body;return Us(t,s)}case"ErrorValue":return Fi(e.err)}}var ta=class{constructor(e){this.members=new Map,this.parent=e}put(e,t){this.members.set(e,t)}resolve(e){return this.resolveLocal(e)||this.resolveOuter(e)}resolveLocal(e){return this.members.get(e)}resolveOuter(e){let t=this.parent;for(;t!=null;){if(t.members.has(e))return t.members.get(e);t=t.parent}return null}},lm=class{constructor(){this.store=new Map,this.fresh=1}get(e){return this.store.get(e)}put(e){let t=0+this.fresh++;return this.store.set(t,e),t}update(e,t){return this.store.set(e,t),e}remove(e){this.store.delete(e)}},om=class{constructor(){this.heap=new lm,this.currentScope=new ta,this.scopeStack=[]}store(e,t){let s=this.currentScope.resolve(e);return s?(this.heap.update(s,t),s):(s=this.heap.put(t),this.currentScope.put(e,s),s)}resolve(e){return this.currentScope.resolve(e)}load(e){return this.loadById(this.resolve(e))}loadById(e){return this.heap.get(e)}enterScope(){let e=new ta(this.currentScope);this.currentScope=e}exitScope(){let e=this.currentScope.parent,t=e||new ta;this.currentScope=t}pushScope(){this.scopeStack.push(this.currentScope),this.currentScope=new ta}popScope(){let e=this.scopeStack.pop();e||(e=new ta),this.currentScope=e}},am=class{constructor(){this.memory=new om}interpret(e){let t;try{t=this.exec(e)}catch(s){t=s}return t}exec(e){switch(e.tag){case"ErrorTerm":return vf(e.msg);case"ValueTerm":return e.value;case"VariableTerm":return this.memory.load(e.variable);case"AssignmentTerm":return this.execAssignmentTerm(e);case"LambdaTerm":return this.execLambdaTerm(e);case"CallTerm":return this.execCallTerm(e);case"ParentheticalTerm":return this.exec(e.term);case"ArrayTerm":return this.execArrayTerm(e);case"ObjectTerm":return this.execObjectTerm(e);case"MemberAccessTerm":return this.execMemberAccessTerm(e);case"IndexAccessTerm":return this.execIndexAccessTerm(e);case"LetTerm":return this.execLetTerm(e);case"DoTerm":return this.execDoTerm(e);case"ConditionalTerm":return this.execConditionalTerm(e);default:break}return null}execAssignmentTerm(e){let t=this.exec(e.rhs),s=this.memory.store(e.lhs,t);return rm(s)}execLambdaTerm(e){let t=Rr(e.body).map(s=>[s,this.memory.resolve(s)]);return nm(t,e.args,e.body)}execCallTerm(e){let t=this.exec(e.func);if(t.tag!="LambdaValue")return vf(`Cannot call non-function: ${JSON.stringify(t)}`);let s=e.args.map(f=>this.exec(f)),o=s.length;if(o!=t.args.length)return vf(`Function argument mismatch in call ${JSON.stringify(e)}`);this.memory.pushScope();for(let f=0;f<o;f++)this.memory.store(t.args[f],s[f]);let c=null;try{c=this.exec(t.body)}catch(f){c=f.value}return this.memory.popScope(),c}execArrayTerm(e){let t=e.elements.map(s=>this.exec(s));return im(t)}execObjectTerm(e){let t=Object.entries(e.entries).map(([o,c])=>[o,this.exec(c)]),s=Object.fromEntries(t);return sm(s)}execMemberAccessTerm(e){return this.exec(e.object).entries[e.member]||yf()}execIndexAccessTerm(e){let t=this.exec(e.array),s=this.exec(e.index);return t.elements[s.num]||yf()}execLetTerm(e){this.memory.enterScope();let t,s;for(let c=0;c<e.declarations.length;c++)t=e.declarations[c],s=this.exec(t.body),this.memory.store(t.variable,s);let o=this.exec(e.body);return this.memory.exitScope(),o}execDoTerm(e){try{this.execBlockStatement(e.block)}catch(t){return t}return yf()}execConditionalTerm(e){return this.exec(e.condition).bool?this.exec(e.body):this.execBranchTerm(e.branch)}execBranchTerm(e){switch(e.tag){case"ElifTerm":return this.execElifTerm(e);case"ElseTerm":return this.exec(e.body)}}execElifTerm(e){return this.exec(e.condition).bool?this.exec(e.body):this.execBranchTerm(e.branch)}execStatement(e){switch(e.tag){case"AssignmentStatement":{this.execAssignmentStatement(e);break}case"CallStatement":{this.execCallStatement(e);break}case"ReturnStatement":{this.execReturnStatement(e);break}case"BlockStatement":{this.execBlockStatement(e);break}case"IfStatement":{this.execIfStatement(e);break}case"WhileStatement":{this.execWhileStatement(e);break}case"DoWhileStatement":{this.execDoWhileStatement(e);break}case"ForStatement":{this.execForStatement(e);break}default:break}}execAssignmentStatement(e){this.execAssignmentTerm(Di(e.lhs,e.rhs,e.span))}execCallStatement(e){this.execCallTerm(vo(e.func,e.args,e.span))}execReturnStatement(e){let t=this.exec(e.result);throw this.memory.popScope(),t}execBlockStatement(e){e.statements.forEach(t=>{this.execStatement(t)})}execIfStatement(e){return this.exec(e.condition).bool?this.execStatement(e.body):this.execBranchStatement(e.branch)}execBranchStatement(e){switch(e.tag){case"ElifStatement":return this.execIfStatement(Fr(e.condition,e.body,e.branch,e.span));case"ElseStatement":return this.execStatement(e.body)}}execWhileStatement(e){let t=this.exec(e.condition);for(;t;)this.execStatement(e.body),t=this.exec(e.condition);return null}execDoWhileStatement(e){let t;do this.execStatement(e.body),t=this.exec(e.condition);while(t);return null}execForStatement(e){e.declarations.forEach(s=>this.execAssignmentTerm(Di(s.variable,s.body,s.span)));let t=this.exec(e.condition);for(;t;)this.execStatement(e.body),this.exec(e.update),t=this.exec(e.condition);return null}loadTerm(e){switch(e.tag){case"NullValue":case"BooleanValue":case"NumberValue":case"StringValue":return Ln(e);case"ReferenceValue":throw new Error("Unimplemented!");case"ArrayValue":{let t=e.elements.map(s=>this.loadTerm(s));return go(t)}case"ObjectValue":{let t=Object.entries(e.entries).map(([o,c])=>[o,this.loadTerm(c)]),s=Object.fromEntries(t);return jn(s)}case"LambdaValue":{let t=e.args,s=e.body;return Us(t,s)}case"ErrorValue":return Fi(e.err)}}};function bf(...e){return{value:null,errors:e}}function um(e){return{value:e}}function cm(e){let t="";e&&e.stack&&e.message&&(t=` Error message: ${e.message}`);let s=`Evaluation failed!${t}`;return new Error(s)}function fm(e){let t;try{t=tm(e)}catch(s){return bf(s)}return t.errors||!t.term?bf(...t.errors):mm(t.term)}function mm(e){let t=new am,s;try{s=t.interpret(e)}catch(o){return bf(cm(o))}return um(s)}var pm="standard";function wf(...e){return{value:null,errors:e}}function hm(e){return{value:e}}function Bf(e,t){switch(t.backend?t.backend:pm){case"standard":return dm(e);case"js":return Jo(e)}}function dm(e){const t=fm(e);if(t.errors||!t.value)return wf(...t.errors);const s=t.value,o=gf(s),c=xu(o);if(c.errors||!c.source)return wf(...c.errors);const f=c.source;let p=null;try{p=(0,eval)(f)}catch(k){return wf(k)}return hm(p)}var _f=Ke(898);function ym(){const{scriptText:e}=Zr(),t=(0,X.useMemo)(()=>e?Bf(e,{backend:"standard"}):null,[e]);return t?Array.isArray(t.errors)?_f.createElement(It,{errors:t.errors}):_f.createElement("pre",null,JSON.stringify(t.value)):_f.createElement("p",null,"No result to report.")}var xf=Ke(898);function vm(){const{scriptText:e}=Zr(),t=(0,X.useMemo)(()=>e?Bf(e,{backend:"js"}):null,[e]);return t?Array.isArray(t.errors)?xf.createElement(It,{errors:t.errors}):xf.createElement("pre",null,JSON.stringify(t.value)):xf.createElement("p",null,"No result to report.")}var ra=Ke(898);const gm=(0,vt.style)(Oe.flex1);function bm(){const e=[Wl("js",ra.createElement(mu,null)),Wl("eval-js",ra.createElement(vm,null)),Wl("eval",ra.createElement(ym,null))];return ra.createElement("div",{className:gm},ra.createElement(jc,{tabs:e}))}var wm=Object.defineProperty,Ff=Object.getOwnPropertySymbols,_m=Object.prototype.hasOwnProperty,xm=Object.prototype.propertyIsEnumerable,Df=(e,t,s)=>t in e?wm(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s,bn=(e,t)=>{for(var s in t||(t={}))_m.call(t,s)&&Df(e,s,t[s]);if(Ff)for(var s of Ff(t))xm.call(t,s)&&Df(e,s,t[s]);return e},Sm=`// This is a comment
let
  id = (x) => x;
  constant = (a, b) => a;
  createFoo = (x) => {
    name: ["F", "o", "o", "b", "a", "r"],
    value: x
  };
  bar = 999;
in do {
  baz = id(bar);
  constant(baz, bar);
  clientName = createFoo(baz).name;
  return clientName;
}
`,km="",Em=`null
`,Tm={null1:km,null2:Em},$m=`true
`,Cm=`false
`,Pm={bool1:$m,bool2:Cm},Om=`0
`,Lm=`1234567890
`,jm=`1234567890.0123456789
`,Rm={number1:Om,number2:Lm,number3:jm},Nm='""',Am="''",Vm='"Hello world!"',Mm="'Hello World!'",Im='"The quick brown fox jumps over the lazy dog."',Bm="'The quick brown fox jumps over the lazy dog.'",Fm={string1:Nm,string2:Am,string3:Vm,string4:Mm,string5:Im,string6:Bm},Dm=bn(bn(bn(bn({},Tm),Pm),Rm),Fm),zm=`let x = 1 in x
`,Wm=`let x = 1; in x
`,Um=`let x = 1; y = 2; in [x, y]
`,Hm={let1:zm,let2:Wm,let3:Um},qm=`(x) => x
`,Gm={lambda1:qm},Ym=`let f = (x) => x in f(1)
`,Jm={call1:Ym},Qm=bn(bn(bn(bn({},Dm),Hm),Gm),Jm),Xm=bn({},Qm),Km=bn({example1:Sm},Xm),Zm=Ke(898);const ep=e=>{const[t,s]=(0,X.useState)(Km.example1),[o,c]=(0,X.useState)(null),f=(0,X.useCallback)(()=>c(t),[t]);return Zm.createElement(Fl.Provider,{value:{editorText:t,setEditorText:s,scriptText:o,runScript:f}},e.children)};var sc=Ke(898);const tp=(0,vt.style)(Oe.flex,Oe.fillParent,{paddingLeft:ut(8),paddingRight:ut(8)},(0,vt.media)({maxWidth:699},Oe.vertical,Oe.verticallySpaced(ut(8))),(0,vt.media)({minWidth:700},Oe.horizontal,Oe.horizontallySpaced(ut(8))));function rp(){return sc.createElement("div",{className:tp},sc.createElement(ep,null,sc.createElement(Ca,null),sc.createElement(bm,null)))}var zf=Ke(898);function np(){return zf.createElement(zf.Fragment,null,"Home Page Content")}var Wf=Ke(898);function ip(){return Wf.createElement(Wf.Fragment,null,"Install Page Content")}var Uf=Ke(898);function sp(){return Uf.createElement(Uf.Fragment,null,"Documentation Page Content")}var lc=Ke(898);function lp(){return lc.createElement("div",null,lc.createElement("h2",null,"Nothing to see here!"),lc.createElement("p",null,lc.createElement(wn,{to:"/"},"Go to the home page")))}var gr=Ke(898);function op(){return gr.createElement(ha,null,gr.createElement(kl,null,gr.createElement(Jr,{path:"/",element:gr.createElement(Ts,null)},gr.createElement(Jr,{index:!0,element:gr.createElement(np,null)}),gr.createElement(Jr,{path:"install",element:gr.createElement(ip,null)}),gr.createElement(Jr,{path:"docs",element:gr.createElement(sp,null)}),gr.createElement(Jr,{path:"play",element:gr.createElement(rp,null)}),gr.createElement(Jr,{path:"*",element:gr.createElement(lp,null)}))))}var ap=Ke(898);(0,Oe.setupPage)("#root"),(0,Oe.normalize)();const up=document.getElementById("root");P.render(ap.createElement(op,null),up)})()})();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,